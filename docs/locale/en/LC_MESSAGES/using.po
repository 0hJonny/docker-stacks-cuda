# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018- Project Jupyter
# This file is distributed under the same license as the docker-stacks
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: docker-stacks latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-05-19 01:46+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../using/common.md:1 83969196fd704352a79ec0fba3777b8e
msgid "# Common Features"
msgstr ""

#: ../../using/common.md:3 5077950e813640408a4d3766e75df379
msgid ""
"A container launched from any Jupyter Docker Stacks image runs a Jupyter "
"Notebook server by default. The container does so by executing a `start-"
"notebook.sh` script. This script configures the internal container "
"environment and then runs `jupyter notebook`, passing it any command line"
" arguments received."
msgstr ""

# 298bc09d3aab4abcb413ad481d6242ff
#: ../../using/common.md:5 7e2fcb90b3034d58932b1fc2d1113068
msgid ""
"This page describes the options supported by the startup script as well "
"as how to bypass it to run alternative commands."
msgstr ""

#: ../../using/common.md:7 35955b5da0594b9e9636e6a8308584f9
msgid "## Notebook Options"
msgstr ""

#: ../../using/common.md:9 98d039866a094e7a816bddb9d4266a96
msgid ""
"You can pass [Jupyter command line options](https://jupyter-"
"notebook.readthedocs.io/en/stable/config.html#options) to the `start-"
"notebook.sh` script when launching the container. For example, to secure "
"the Notebook server with a custom password hashed using "
"`IPython.lib.passwd()` instead of the default token, you can run the "
"following:"
msgstr ""

#: ../../using/common.md:11 1c9ec50097744e97a6d0921a150560c4
msgid ""
"```bash docker run -d -p 8888:8888 jupyter/base-notebook start-"
"notebook.sh "
"--NotebookApp.password='sha1:74ba40f8a388:c913541b7ee99d15d5ed31d4226bf7838f83a50e'"
" ```"
msgstr ""

# 4c08f057def247cbbfc8231e628cb792
#: ../../using/common.md:15 ee4e24cd25f044e3a0516f11805085ce
msgid ""
"For example, to set the base URL of the notebook server, you can run the "
"following:"
msgstr ""

#: ../../using/common.md:17 c7463285290c40d3827ee290d44532f0
msgid ""
"```bash docker run -d -p 8888:8888 jupyter/base-notebook start-"
"notebook.sh --NotebookApp.base_url=/some/path ```"
msgstr ""

#: ../../using/common.md:21 e3f31079d2fe4721bded18098153cc3b
msgid "## Docker Options"
msgstr ""

#: ../../using/common.md:23 e01ccf2a9d4f4925952c0637fc047c46
msgid ""
"You may instruct the `start-notebook.sh` script to customize the "
"container environment before launching the notebook server. You do so by "
"passing arguments to the `docker run` command."
msgstr ""

#: ../../using/common.md:26 dc0f442738114e1889b0a457dc2cf6fc
msgid ""
"`-e NB_USER=jovyan` - Instructs the startup script to change the default "
"container username from `jovyan` to the provided value. Causes the script"
" to rename the `jovyan` user home folder. For this option to take effect,"
" you must run the container with `--user root`, set the working directory"
" `-w /home/$NB_USER` and set the environment variable `-e CHOWN_HOME=yes`"
" (see below for detail). This feature is useful when mounting host "
"volumes with specific home folder."
msgstr ""

#: ../../using/common.md:27 374fb3ceb3614b57b7439b42cc7ff4b8
msgid ""
"`-e NB_UID=1000` - Instructs the startup script to switch the numeric "
"user ID of `$NB_USER` to the given value. This feature is useful when "
"mounting host volumes with specific owner permissions. For this option to"
" take effect, you must run the container with `--user root`. (The startup"
" script will `su $NB_USER` after adjusting the user ID.) You might "
"consider using modern Docker options `--user` and `--group-add` instead. "
"See the last bullet below for details."
msgstr ""

#: ../../using/common.md:28 cc99e6ed62554b8aba4ec90e3c0009bd
msgid ""
"`-e NB_GID=100` - Instructs the startup script to change the primary "
"group of`$NB_USER` to `$NB_GID` (the new group is added with a name of "
"`$NB_GROUP` if it is defined, otherwise the group is named `$NB_USER`).  "
"This feature is useful when mounting host volumes with specific group "
"permissions. For this option to take effect, you must run the container "
"with `--user root`. (The startup script will `su $NB_USER` after "
"adjusting the group ID.) You might consider using modern Docker options "
"`--user` and `--group-add` instead. See the last bullet below for "
"details.  The user is added to supplemental group `users` (gid 100) in "
"order to allow write access to the home directory and `/opt/conda`.  If "
"you override the user/group logic, ensure the user stays in group `users`"
" if you want them to be able to modify files in the image."
msgstr ""

#: ../../using/common.md:29 107aa5f42d5b48c18b72f9cc6d337d7a
msgid ""
"`-e NB_GROUP=<name>` - The name used for `$NB_GID`, which defaults to "
"`$NB_USER`.  This is only used if `$NB_GID` is specified and completely "
"optional: there is only cosmetic effect."
msgstr ""

#: ../../using/common.md:30 c034464869fe49338fb79a815d2d7ae9
msgid ""
"`-e NB_UMASK=<umask>` - Configures Jupyter to use a different umask value"
" from default, i.e. `022`. For example, if setting umask to `002`, new "
"files will be readable and writable by group members instead of just "
"writable by the owner. Wikipedia has a good article about "
"[umask](https://en.wikipedia.org/wiki/Umask). Feel free to read it in "
"order to choose the value that better fits your needs. Default value "
"should fit most situations. Note that `NB_UMASK` when set only applies to"
" the Jupyter process itself - you cannot use it to set a umask for "
"additional files created during run-hooks e.g. via `pip` or `conda` - if "
"you need to set a umask for these you must set `umask` for each command."
msgstr ""

#: ../../using/common.md:31 ba4ce91775374dfa8e1ae8c889ba600e
msgid ""
"`-e CHOWN_HOME=yes` - Instructs the startup script to change the "
"`$NB_USER` home directory owner and group to the current value of "
"`$NB_UID` and `$NB_GID`. This change will take effect even if the user "
"home directory is mounted from the host using `-v` as described below. "
"The change is **not** applied recursively by default. You can change "
"modify the `chown` behavior by setting `CHOWN_HOME_OPTS` (e.g., `-e "
"CHOWN_HOME_OPTS='-R'`)."
msgstr ""

#: ../../using/common.md:32 94d4734e607943fab2425309c09c95f9
msgid ""
"`-e CHOWN_EXTRA=\"<some dir>,<some other dir>\"` - Instructs the startup "
"script to change the owner and group of each comma-separated container "
"directory to the current value of `$NB_UID` and `$NB_GID`. The change is "
"**not** applied recursively by default. You can change modify the `chown`"
" behavior by setting `CHOWN_EXTRA_OPTS` (e.g., `-e "
"CHOWN_EXTRA_OPTS='-R'`)."
msgstr ""

#: ../../using/common.md:33 df4088f16f6940d9b40d6f0f18a889bb
msgid ""
"`-e GRANT_SUDO=yes` - Instructs the startup script to grant the `NB_USER`"
" user passwordless `sudo` capability. You do **not** need this option to "
"allow the user to `conda` or `pip` install additional packages. This "
"option is useful, however, when you wish to give `$NB_USER` the ability "
"to install OS packages with `apt` or modify other root-owned files in the"
" container. For this option to take effect, you must run the container "
"with `--user root`. (The `start-notebook.sh` script will `su $NB_USER` "
"after adding `$NB_USER` to sudoers.) **You should only enable `sudo` if "
"you trust the user or if the container is running on an isolated host.**"
msgstr ""

#: ../../using/common.md:34 5cb19ba95a5142a281332a501fba5037
msgid ""
"`-e GEN_CERT=yes` - Instructs the startup script to generates a self-"
"signed SSL certificate and configure Jupyter Notebook to use it to accept"
" encrypted HTTPS connections."
msgstr ""

#: ../../using/common.md:35 f8ee55029127471c8ede242b817705c4
msgid ""
"`-e JUPYTER_ENABLE_LAB=yes` - Instructs the startup script to run "
"`jupyter lab` instead of the default `jupyter notebook` command. Useful "
"in container orchestration environments where setting environment "
"variables is easier than change command line parameters."
msgstr ""

#: ../../using/common.md:36 646dffe9a5e045f5850393501b4ac993
msgid ""
"`-e RESTARTABLE=yes` - Runs Jupyter in a loop so that quitting Jupyter "
"does not cause the container to exit.  This may be useful when you need "
"to install extensions that require restarting Jupyter."
msgstr ""

#: ../../using/common.md:37 4aeb991746844b71bea335ecee736b6e
msgid ""
"`-v /some/host/folder/for/work:/home/jovyan/work` - Mounts a host machine"
" directory as folder in the container. Useful when you want to preserve "
"notebooks and other work even after the container is destroyed. **You "
"must grant the within-container notebook user or group (`NB_UID` or "
"`NB_GID`) write access to the host directory (e.g., `sudo chown 1000 "
"/some/host/folder/for/work`).**"
msgstr ""

#: ../../using/common.md:38 150b2f4908ff483d9c368930b50e7a3a
msgid ""
"`--user 5000 --group-add users` - Launches the container with a specific "
"user ID and adds that user to the `users` group so that it can modify "
"files in the default home directory and `/opt/conda`. You can use these "
"arguments as alternatives to setting `$NB_UID` and `$NB_GID`."
msgstr ""

#: ../../using/common.md:40 cb27b1f9c2a944f98111da534fc1b558
msgid "## Startup Hooks"
msgstr ""

#: ../../using/common.md:42 6661799e56474ca18c2d9f29da6ae521
msgid ""
"You can further customize the container environment by adding shell "
"scripts (`*.sh`) to be sourced or executables (`chmod +x`) to be run to "
"the paths below:"
msgstr ""

#: ../../using/common.md:45 a5ed9275e4ce4b398b5224db08a244a2
msgid ""
"`/usr/local/bin/start-notebook.d/` - handled before any of the standard "
"options noted above are applied"
msgstr ""

#: ../../using/common.md:47 38aaafb7516d43c3afddbe7ee6da4445
msgid ""
"`/usr/local/bin/before-notebook.d/` - handled after all of the standard "
"options noted above are applied and just before the notebook server "
"launches"
msgstr ""

#: ../../using/common.md:50 1670488b91c2438fbeab1ad002c2c6c3
msgid ""
"See the `run-hooks` function in the [`jupyter/base-notebook "
"start.sh`](https://github.com/jupyter/docker-stacks/blob/master/base-"
"notebook/start.sh) script for execution details."
msgstr ""

#: ../../using/common.md:53 ce0d1db4ccf84cccb595235ed7431247
msgid "## SSL Certificates"
msgstr ""

#: ../../using/common.md:55 6a6d1f60212a434b9c527a4f6eedeb74
msgid ""
"You may mount SSL key and certificate files into a container and "
"configure Jupyter Notebook to use them to accept HTTPS connections. For "
"example, to mount a host folder containing a `notebook.key` and "
"`notebook.crt` and use them, you might run the following:"
msgstr ""

#: ../../using/common.md:57 ../../using/common.md:67
#: 30191dd8c9c7495c82e7b43b4ac9f998 3af62a945d2d46e99e80af4656adb921
msgid "```bash docker run -d -p 8888:8888 \\"
msgstr ""

#: ../../using/common.md:59 fbee0c8c15d7429cb652565052a9b55f
msgid ""
"-v /some/host/folder:/etc/ssl/notebook \\ jupyter/base-notebook start-"
"notebook.sh \\ --NotebookApp.keyfile=/etc/ssl/notebook/notebook.key "
"--NotebookApp.certfile=/etc/ssl/notebook/notebook.crt"
msgstr ""

#: ../../using/common.md:63 ../../using/common.md:72 ../../using/recipes.md:55
#: ../../using/recipes.md:67 ../../using/recipes.md:287
#: ../../using/recipes.md:508 ../../using/recipes.md:556
#: ../../using/running.md:34 ../../using/running.md:75
#: ../../using/running.md:97 22b7713c250f41baaae508a3e6a50589
#: 311e7dc5b24b4351a349d8aad601219c 4e69977493074211b4f65ca55896bd24
#: 69aca4f545a44c379f960f58edd3043c 8cbc2129d4634312a8c075880b750fe9
#: ac933029e7b6432a80d9b2c1529021a8 cc06cb1934d64496831a3bd5ce6a5ddc
#: d9e46845c3914dc198d15a5dd4be96ae f5385212d0584a469983b1ba41071a65
#: fcdd9908bf9d43e39f5e50a29a050928
msgid "```"
msgstr ""

# e496d62ce1b7489eabf40a55471247b4
#: ../../using/common.md:65 b9096a7ff4584901a2f3282ce9ce2c27
msgid ""
"Alternatively, you may mount a single PEM file containing both the key "
"and certificate. For example:"
msgstr ""

#: ../../using/common.md:69 bc6435da27b64fc8a034b00ab8c463be
msgid ""
"-v /some/host/folder/notebook.pem:/etc/ssl/notebook.pem \\ jupyter/base-"
"notebook start-notebook.sh \\ "
"--NotebookApp.certfile=/etc/ssl/notebook.pem"
msgstr ""

# 6ada67b7d1a34f59ad235d7e49e6a298
#: ../../using/common.md:74 b927163685d64c02835598dc26a949a7
msgid ""
"In either case, Jupyter Notebook expects the key and certificate to be a "
"base64 encoded text file. The certificate file or PEM may contain one or "
"more certificates (e.g., server, intermediate, and root)."
msgstr ""

# c908965cf0084fc2b276b50b47b87d18
#: ../../using/common.md:76 b7e51f3cd47047d2beea8d31b8fe4c23
msgid "For additional information about using SSL, see the following:"
msgstr ""

#: ../../using/common.md:78 03412b7f8a6a4070b86137502f9eac14
msgid ""
"The [docker-stacks/examples](https://github.com/jupyter/docker-"
"stacks/tree/master/examples) for information about how to use [Let's "
"Encrypt](https://letsencrypt.org/) certificates when you run these stacks"
" on a publicly visible domain."
msgstr ""

#: ../../using/common.md:79 2d872ea0cdff4741bdc57aeb1bdc1fc0
msgid ""
"The [jupyter_notebook_config.py](https://github.com/jupyter/docker-"
"stacks/blob/master/base-notebook/jupyter_notebook_config.py) file for how"
" this Docker image generates a self-signed certificate."
msgstr ""

#: ../../using/common.md:80 9e799822daf9402886e1f8fff9e35122
msgid ""
"The [Jupyter Notebook documentation](https://jupyter-"
"notebook.readthedocs.io/en/latest/public_server.html#securing-a-notebook-"
"server) for best practices about securing a public notebook server in "
"general."
msgstr ""

#: ../../using/common.md:82 20e66d95615f41a9b68ebb20dc6627f7
msgid "## Alternative Commands"
msgstr ""

#: ../../using/common.md:84 c52fc97d37134c5089c1e5f2ec89244d
msgid "### start.sh"
msgstr ""

#: ../../using/common.md:86 66108514d1b840cb80ce08094916a515
msgid ""
"The `start-notebook.sh` script actually inherits most of its option "
"handling capability from a more generic `start.sh` script. The `start.sh`"
" script supports all of the features described above, but allows you to "
"specify an arbitrary command to execute. For example, to run the text-"
"based `ipython` console in a container, do the following:"
msgstr ""

#: ../../using/common.md:88 fd1c86123d7b47819d6b7ed93228aa51
msgid "```bash docker run -it --rm jupyter/base-notebook start.sh ipython ```"
msgstr ""

# ad0be3e8095e4394afb367e9e56e1ca5
#: ../../using/common.md:92 ea1988cd83b84a7995ec99868420579f
msgid "Or, to run JupyterLab instead of the classic notebook, run the following:"
msgstr ""

#: ../../using/common.md:94 b387e07ecd1042c8b3bb83abf2f535c2
msgid ""
"```bash docker run -it --rm -p 8888:8888 jupyter/base-notebook start.sh "
"jupyter lab ```"
msgstr ""

#: ../../using/common.md:98 72afb5c69f764a6b8222bfd81db54c6b
msgid ""
"This script is particularly useful when you derive a new Dockerfile from "
"this image and install additional Jupyter applications with subcommands "
"like `jupyter console`, `jupyter kernelgateway`, etc."
msgstr ""

#: ../../using/common.md:100 ad8c400b891c4dc9a55d3c0486ef9b0d
msgid "### Others"
msgstr ""

#: ../../using/common.md:102 13888e38fb7a47749b5d9ac26ec4fda5
msgid ""
"You can bypass the provided scripts and specify an arbitrary start "
"command. If you do, keep in mind that features supported by the "
"`start.sh` script and its kin will not function (e.g., `GRANT_SUDO`)."
msgstr ""

#: ../../using/common.md:104 aaf387c962124dac9b7a5c461864c830
msgid "## Conda Environments"
msgstr ""

#: ../../using/common.md:106 ccc628cdbd0347ec99908b2920389326
msgid ""
"The default Python 3.x [Conda "
"environment](http://conda.pydata.org/docs/using/envs.html) resides in "
"`/opt/conda`. The `/opt/conda/bin` directory is part of the default "
"`jovyan` user's `$PATH`. That directory is also whitelisted for use in "
"`sudo` commands by the `start.sh` script."
msgstr ""

#: ../../using/common.md:108 9d723130a6084e6a88b82ea52b37071f
msgid ""
"The `jovyan` user has full read/write access to the `/opt/conda` "
"directory. You can use either `conda`, `mamba` or `pip` to install new "
"packages without any additional permissions."
msgstr ""

#: ../../using/common.md:110 8d44c5f4e5534e8083ab3420cfd2e338
msgid ""
"```bash # install a package into the default (python 3.x) environment pip"
" install some-package conda install some-package mamba install some-"
"package ```"
msgstr ""

#: ../../using/common.md:117 2d2cb83fd1364b57adfe889be197bcbb
msgid "### Using alternative channels"
msgstr ""

#: ../../using/common.md:119 fb231eb53ee14ec98d42d411bb4f32ad
msgid ""
"Conda is configured by default to use only the [`conda-"
"forge`](https://anaconda.org/conda-forge) channel. However, alternative "
"channels can be used either one shot by overwriting the default channel "
"in the installation command or by configuring `conda` to use different "
"channels. The examples below show how to use the [anaconda default "
"channels](https://repo.anaconda.com/pkgs/main) instead of `conda-forge` "
"to install packages."
msgstr ""

#: ../../using/common.md:123 d8ec1392cb40453b8ae6c503b6f70b31
msgid ""
"```bash # using defaults channels to install a package conda install "
"--channel defaults humanize # configure conda to add default channels at "
"the top of the list conda config --system --prepend channels defaults # "
"install a package conda install humanize ```"
msgstr ""

#: ../../using/recipes.md:1 3c256308c8d8472889409358057f300b
msgid "# Contributed Recipes"
msgstr ""

#: ../../using/recipes.md:3 8989a72a6d534a549bf82e20a69f0d8c
msgid ""
"Users sometimes share interesting ways of using the Jupyter Docker "
"Stacks. We encourage users to [contribute these "
"recipes](../contributing/recipes.md) to the documentation in case they "
"prove useful to other members of the community by submitting a pull "
"request to `docs/using/recipes.md`. The sections below capture this "
"knowledge."
msgstr ""

#: ../../using/recipes.md:8 ed2f6c1b39b743119c35a194dbe3d55b
msgid "## Using `sudo` within a container"
msgstr ""

#: ../../using/recipes.md:10 b8d70af7af6a4fa58872be319be091db
msgid ""
"Password authentication is disabled for the `NB_USER` (e.g., `jovyan`). "
"This choice was made to avoid distributing images with a weak default "
"password that users ~might~ will forget to change before running a "
"container on a publicly accessible host."
msgstr ""

#: ../../using/recipes.md:14 22f55ee212274347b15f10fe20490eb7
msgid ""
"You can grant the within-container `NB_USER` passwordless `sudo` access "
"by adding `-e GRANT_SUDO=yes` and `--user root` to your Docker command "
"line or appropriate container orchestrator config."
msgstr ""

# f75300183d66418d958651b713e3c81e
#: ../../using/recipes.md:18 e30cfb5fd3084b44a3eab9918a1fd5ef
msgid "For example:"
msgstr ""

#: ../../using/recipes.md:20 88b81bdc88c7455a81e908f2a9102c80
msgid ""
"```bash docker run -it -e GRANT_SUDO=yes --user root jupyter/minimal-"
"notebook ```"
msgstr ""

#: ../../using/recipes.md:24 eb7a2e953aeb44db9d8ac66064c77180
msgid ""
"**You should only enable `sudo` if you trust the user and/or if the "
"container is running on an isolated host.** See [Docker security "
"documentation](https://docs.docker.com/engine/security/userns-remap/) for"
" more information about running containers as `root`."
msgstr ""

#: ../../using/recipes.md:27 9b98b21cd7a44f7c9e39ce886a501d59
msgid "## Using `pip install` or `conda install` in a Child Docker image"
msgstr ""

# cfb1a65ed1a4453e8b3355f1c0c23b1c
#: ../../using/recipes.md:29 ab3f8a522e1f4bbb8581d08cef554d41
msgid "Create a new Dockerfile like the one shown below."
msgstr ""

#: ../../using/recipes.md:31 d3f6c882c3324a95a21f94afffc5cbea
msgid ""
"```dockerfile # Start from a core stack version FROM jupyter/datascience-"
"notebook:9f9e5ca8fe5a # Install in the default python3 environment RUN "
"pip install 'ggplot==0.6.8' ```"
msgstr ""

# 3ab615dc6fb6425d954cae4ce14f08b9
#: ../../using/recipes.md:38 fe78fc8c022a4489b39bcba2b606d679
msgid "Then build a new image."
msgstr ""

#: ../../using/recipes.md:40 f9b9cef596ea409f8645beda213d6e37
msgid "```bash docker build --rm -t jupyter/my-datascience-notebook . ```"
msgstr ""

#: ../../using/recipes.md:44 5841d3fa18e44565850454e4f46c75c5
msgid ""
"To use a requirements.txt file, first create your `requirements.txt` file"
" with the listing of packages desired. Next, create a new Dockerfile like"
" the one shown below."
msgstr ""

#: ../../using/recipes.md:47 f06338d87d014257b168fb70e3da54cf
msgid ""
"```dockerfile # Start from a core stack version FROM jupyter/datascience-"
"notebook:9f9e5ca8fe5a # Install from requirements.txt file COPY "
"--chown=${NB_UID}:${NB_GID} requirements.txt /tmp/ RUN pip install "
"--requirement /tmp/requirements.txt && \\"
msgstr ""

#: ../../using/recipes.md:53 ../../using/recipes.md:65
#: ../../using/recipes.md:129 84d911a5e7854abb95276e9ba216d5d4
#: e57ac49fe1ab46d2ad38b7ed0f550557 ef70ff3f8653424ea99ed786aa5384a5
msgid "fix-permissions $CONDA_DIR && \\ fix-permissions /home/$NB_USER"
msgstr ""

# f2f035925d764425b9999b19d36c1d30
#: ../../using/recipes.md:57 65dc6dab8fed4e9c95be4dd4a3a47cc3
msgid "For conda, the Dockerfile is similar:"
msgstr ""

#: ../../using/recipes.md:59 16635781e564493ab0926cf9def5d6e3
msgid ""
"```dockerfile # Start from a core stack version FROM jupyter/datascience-"
"notebook:9f9e5ca8fe5a # Install from requirements.txt file COPY "
"--chown=${NB_UID}:${NB_GID} requirements.txt /tmp/ RUN conda install "
"--yes --file /tmp/requirements.txt && \\"
msgstr ""

#: ../../using/recipes.md:69 b3371020021f47f48bad15e512822635
msgid ""
"Ref: [docker-"
"stacks/commit/79169618d571506304934a7b29039085e77db78c](https://github.com/jupyter"
"/docker-"
"stacks/commit/79169618d571506304934a7b29039085e77db78c#commitcomment-15960081)"
msgstr ""

#: ../../using/recipes.md:72 0e8825ab6ee64417a5aeb606c5366b5e
msgid "## Add a Python 2.x environment"
msgstr ""

#: ../../using/recipes.md:74 143cc9a74b0d48589fc744de8814f927
msgid ""
"Python 2.x was removed from all images on August 10th, 2017, starting in "
"tag `cc9feab481f7`. You can add a Python 2.x environment by defining your"
" own Dockerfile inheriting from one of the images like so:"
msgstr ""

#: ../../using/recipes.md:78 172e4c2abfb14120b0c56960b86af565
msgid ""
"```dockerfile # Choose your desired base image FROM jupyter/scipy-"
"notebook:latest"
msgstr ""

#: ../../using/recipes.md:82 ee97f086030e40edafd81aaec092c3c4
msgid ""
"# Create a Python 2.x environment using conda including at least the "
"ipython kernel # and the kernda utility. Add any additional packages you "
"want available for use # in a Python 2 notebook to the first line here "
"(e.g., pandas, matplotlib, etc.) RUN conda create --quiet --yes -p "
"$CONDA_DIR/envs/python2 python=2.7 ipython ipykernel kernda && \\"
msgstr ""

#: ../../using/recipes.md:86 ../../using/recipes.md:116
#: 2881121575ec43f3a1f1009e871b8d6e 5ba357508d684b09b5420cbba1ead754
msgid "conda clean --all -f -y"
msgstr ""

#: ../../using/recipes.md:88 ../../using/recipes.md:253
#: ../../using/recipes.md:521 ../../using/recipes.md:544
#: 069b07b7d1334e66b34be6c52df9138b 390f7ec4fe854b70b258027b1dd59622
#: 75138978e9cc41dd94b680912f15deef 7986b669c9764cb384940dc8095f6721
msgid "USER root"
msgstr ""

#: ../../using/recipes.md:90 fcd41f9f47064355984f7e8f4818952a
msgid ""
"# Create a global kernelspec in the image and modify it so that it "
"properly activates # the python2 conda environment. RUN "
"$CONDA_DIR/envs/python2/bin/python -m ipykernel install && \\ "
"$CONDA_DIR/envs/python2/bin/kernda -o -y "
"/usr/local/share/jupyter/kernels/python2/kernel.json"
msgstr ""

#: ../../using/recipes.md:95 f9c4d4b5d5764fc8b6eb39f6799d7ba0
msgid "USER $NB_USER ```"
msgstr ""

#: ../../using/recipes.md:98 3b20b46fecd24bc693f7cee537459955
msgid ""
"Ref: [https://github.com/jupyter/docker-"
"stacks/issues/440](https://github.com/jupyter/docker-stacks/issues/440)"
msgstr ""

#: ../../using/recipes.md:101 945da707b7db46dc96dbad17f00ff25c
msgid "## Add a Python 3.x environment"
msgstr ""

#: ../../using/recipes.md:103 2651411a4a3d4ed692d06265287ff41b
msgid ""
"The default version of Python that ships with conda/ubuntu may not be the"
" version you want. To add a conda environment with a different version "
"and make it accessible to Jupyter, the instructions are very similar to "
"Python 2.x but are slightly simpler (no need to switch to `root`):"
msgstr ""

#: ../../using/recipes.md:106 9e7ba8eeb6a04d98b1ad2ed423488aad
msgid ""
"```dockerfile # Choose your desired base image FROM jupyter/minimal-"
"notebook:latest"
msgstr ""

#: ../../using/recipes.md:110 c8f3c8fd236a4f5caa390631e55d952b
msgid ""
"# name your environment and choose python 3.x version ARG "
"conda_env=python36 ARG py_ver=3.6"
msgstr ""

#: ../../using/recipes.md:114 d5550ee4b8d8444499b4d2bcc3d4cb46
msgid ""
"# you can add additional libraries you want conda to install by listing "
"them below the first line and ending with \"&& \\\" RUN conda create "
"--quiet --yes -p $CONDA_DIR/envs/$conda_env python=$py_ver ipython "
"ipykernel && \\"
msgstr ""

#: ../../using/recipes.md:118 491d1237398d44d686e4b3f3ec32fa94
msgid ""
"# alternatively, you can comment out the lines above and uncomment those "
"below # if you'd prefer to use a YAML file present in the docker build "
"context"
msgstr ""

#: ../../using/recipes.md:121 8776887abcdb46659cd82c3bdab4353a
msgid ""
"# COPY --chown=${NB_UID}:${NB_GID} environment.yml /home/$NB_USER/tmp/ # "
"RUN cd /home/$NB_USER/tmp/ && \\ #     conda env create -p "
"$CONDA_DIR/envs/$conda_env -f environment.yml && \\ #     conda clean "
"--all -f -y"
msgstr ""

#: ../../using/recipes.md:127 e73902650bbd4ad19fdd29041aca0eec
msgid ""
"# create Python 3.x environment and link it to jupyter RUN "
"$CONDA_DIR/envs/${conda_env}/bin/python -m ipykernel install --user "
"--name=${conda_env} && \\"
msgstr ""

#: ../../using/recipes.md:132 d7252af6e4834619ae3566e9ea5ac25b
msgid ""
"# any additional pip installs can be added by uncommenting the following "
"line # RUN $CONDA_DIR/envs/${conda_env}/bin/pip install"
msgstr ""

#: ../../using/recipes.md:135 60053658f4364f66a0667fae8d999d94
msgid ""
"# prepend conda environment to path ENV PATH "
"$CONDA_DIR/envs/${conda_env}/bin:$PATH"
msgstr ""

#: ../../using/recipes.md:138 72dda524e1bd45cfa740046a2e5c7901
msgid ""
"# if you want this environment to be the default one, uncomment the "
"following line: # ENV CONDA_DEFAULT_ENV ${conda_env} ```"
msgstr ""

#: ../../using/recipes.md:142 ec3aefd5a4af41de8271fdded3e2b92f
msgid "## Run JupyterLab"
msgstr ""

#: ../../using/recipes.md:144 4defd62f37ea45a8a0ec69ca9f878081
msgid ""
"JupyterLab is preinstalled as a notebook extension starting in tag "
"[c33a7dc0eece](https://github.com/jupyter/docker-stacks/wiki/Docker-"
"build-history)."
msgstr ""

#: ../../using/recipes.md:147 9be396b10ff44bfaba5dc22e39271959
msgid ""
"Run jupyterlab using a command such as `docker run -it --rm -p 8888:8888 "
"jupyter/datascience-notebook start.sh jupyter lab`"
msgstr ""

#: ../../using/recipes.md:150 e6f5c60c4b2a4c7da630d8b3a7f4f043
msgid "## Dask JupyterLab Extension"
msgstr ""

#: ../../using/recipes.md:152 e5609396f9624268ba79f2bab2aebd0e
msgid ""
"[Dask JupyterLab Extension](https://github.com/dask/dask-labextension) "
"provides a JupyterLab extension to manage Dask clusters, as well as embed"
" Dask's dashboard plots directly into JupyterLab panes. Create the "
"Dockerfile as:"
msgstr ""

#: ../../using/recipes.md:154 b406821d43ae466d82619692b107846e
msgid ""
"```dockerfile # Start from a core stack version FROM jupyter/scipy-"
"notebook:latest"
msgstr ""

#: ../../using/recipes.md:158 2ceccf9935fb40cd900ccd9cbd9b7e9c
msgid "# Install the Dask dashboard RUN pip install dask-labextension"
msgstr ""

#: ../../using/recipes.md:161 e6ad617ff0b34bfa9fd3cf822086bdef
msgid "# Dask Scheduler & Bokeh ports EXPOSE 8787 EXPOSE 8786"
msgstr ""

#: ../../using/recipes.md:165 4582ef3414524e95810cbea7f6ee84c7
msgid "ENTRYPOINT [\"jupyter\", \"lab\", \"--ip=0.0.0.0\", \"--allow-root\"] ```"
msgstr ""

#: ../../using/recipes.md:168 addd20fe0af747d5a774f91b496131b1
msgid "And build the image as:"
msgstr ""

#: ../../using/recipes.md:170 0974a4eee19e43fca90b74e1d1efeaeb
msgid "```bash docker build -t jupyter/scipy-dasklabextension:latest . ```"
msgstr ""

#: ../../using/recipes.md:174 4fc2eaf005f545aebed6fe321361ef03
msgid "Once built, run using the command:"
msgstr ""

#: ../../using/recipes.md:176 2d99b3d7c8ce4272b4703fcd199cdefd
msgid ""
"```bash docker run -it --rm -p 8888:8888 -p 8787:8787 jupyter/scipy-"
"dasklabextension:latest ```"
msgstr ""

#: ../../using/recipes.md:180 2447b4b6a235485f96535acc9757d682
msgid ""
"Ref: [https://github.com/jupyter/docker-"
"stacks/issues/999](https://github.com/jupyter/docker-stacks/issues/999)"
msgstr ""

#: ../../using/recipes.md:183 3484d3caac454e34b7513ca3f4f6b403
msgid "## Let's Encrypt a Notebook server"
msgstr ""

#: ../../using/recipes.md:185 a2c35f107dfe4e87ad6050cc7fb46ea7
msgid ""
"See the README for the simple automation here [https://github.com/jupyter"
"/docker-stacks/tree/master/examples/make-"
"deploy](https://github.com/jupyter/docker-stacks/tree/master/examples"
"/make-deploy) which includes steps for requesting and renewing a Let's "
"Encrypt certificate."
msgstr ""

#: ../../using/recipes.md:189 398f91bee8634c558898d5a8e26e5c78
msgid ""
"Ref: [https://github.com/jupyter/docker-"
"stacks/issues/78](https://github.com/jupyter/docker-stacks/issues/78)"
msgstr ""

#: ../../using/recipes.md:192 48c20b6cb3bb4b7cbdbbbb5c84d19195
msgid "## Slideshows with Jupyter and RISE"
msgstr ""

#: ../../using/recipes.md:194 2215128771804b2b94416a23a069bdeb
msgid ""
"[RISE](https://github.com/damianavila/RISE) allows via extension to "
"create live slideshows of your notebooks, with no conversion, adding "
"javascript Reveal.js:"
msgstr ""

#: ../../using/recipes.md:197 714d50a93c17401cb38a2779e1771082
msgid ""
"```bash # Add Live slideshows with RISE RUN conda install -c "
"damianavila82 rise ```"
msgstr ""

#: ../../using/recipes.md:202 af21d1b2b4b14740ab522bef822946e8
msgid ""
"Credit: [Paolo D.](https://github.com/pdonorio) based on [docker-"
"stacks/issues/43](https://github.com/jupyter/docker-stacks/issues/43)"
msgstr ""

#: ../../using/recipes.md:205 c35b991ff2ec4bf387b89097249940c7
msgid "## xgboost"
msgstr ""

# ce204678c3af4aa9a0fb55bb6de7554b
#: ../../using/recipes.md:207 3da1f1bcce9748a4810cc451b1834b4b
msgid ""
"You need to install conda's gcc for Python xgboost to work properly. "
"Otherwise, you'll get an exception about libgomp.so.1 missing GOMP_4.0."
msgstr ""

#: ../../using/recipes.md:210 823b9c995adc46aea041a33133c870b2
#, python-format
msgid "```bash %%bash conda install -y gcc pip install xgboost"
msgstr ""

#: ../../using/recipes.md:215 302c9e4d5e834819a920841dfc029230
msgid "import xgboost ```"
msgstr ""

#: ../../using/recipes.md:218 4189fafdb2534716b2e8cabf1568b7dd
msgid "## Running behind a nginx proxy"
msgstr ""

# ca7763a5a35a47bd9fb29ae9d00feab3
#: ../../using/recipes.md:220 8bc7973450624bd39ee324f674f83b5d
msgid ""
"Sometimes it is useful to run the Jupyter instance behind a nginx proxy, "
"for instance:"
msgstr ""

#: ../../using/recipes.md:222 6fbec78fafd44f1ba32f2b110eff556c
msgid ""
"you would prefer to access the notebook at a server URL with a path "
"(`https://example.com/jupyter`) rather than a port "
"(`https://example.com:8888`)"
msgstr ""

# a5129fb6e2b042f5b8161ed5318123f9
#: ../../using/recipes.md:224 4ba820fd0ddc4ae9b484d00839f314c0
msgid ""
"you may have many different services in addition to Jupyter running on "
"the same server, and want to nginx to help improve server performance in "
"manage the connections"
msgstr ""

#: ../../using/recipes.md:227 0f0c38735d88494f9ba67e34aca9ccfe
msgid ""
"Here is a [quick example NGINX "
"configuration](https://gist.github.com/cboettig/8643341bd3c93b62b5c2) to "
"get started. You'll need a server, a `.crt` and `.key` file for your "
"server, and `docker` & `docker-compose` installed. Then just download the"
" files at that gist and run `docker-compose up -d` to test it out. "
"Customize the `nginx.conf` file to set the desired paths and add other "
"services."
msgstr ""

#: ../../using/recipes.md:232 05b4517c01e4472792ebc2b4a995bf15
msgid "## Host volume mounts and notebook errors"
msgstr ""

#: ../../using/recipes.md:234 b20b753d63624dfbabc799b125413a7d
msgid ""
"If you are mounting a host directory as `/home/jovyan/work` in your "
"container and you receive permission errors or connection errors when you"
" create a notebook, be sure that the `jovyan` user (UID=1000 by default) "
"has read/write access to the directory on the host. Alternatively, "
"specify the UID of the `jovyan` user on container startup using the `-e "
"NB_UID` option described in the [Common Features, Docker Options "
"section](../using/common.html#Docker-Options)"
msgstr ""

#: ../../using/recipes.md:240 0f9b15b5beaa4a0d846bcdb25ec80472
msgid ""
"Ref: [https://github.com/jupyter/docker-"
"stacks/issues/199](https://github.com/jupyter/docker-stacks/issues/199)"
msgstr ""

#: ../../using/recipes.md:243 3123fce971a344429a5385765930a83b
msgid "## Manpage installation"
msgstr ""

# 7fc6566074ee4ba3a4e579437d7f151d
#: ../../using/recipes.md:245 92cd7cb07133454183e12fe35c0e283f
msgid ""
"Most containers, including our Ubuntu base image, ship without manpages "
"installed to save space. You can use the following dockerfile to inherit "
"from one of our images to enable manpages:"
msgstr ""

#: ../../using/recipes.md:248 404dced3d8134a4eb9ddca25d4d4a33e
msgid ""
"```dockerfile # Choose your desired base image ARG BASE_CONTAINER=jupyter"
"/datascience-notebook:latest FROM $BASE_CONTAINER"
msgstr ""

#: ../../using/recipes.md:255 0b30e1b6c2354fffa15e45664345667f
msgid ""
"# Remove the manpage blacklist, install man, install docs RUN rm "
"/etc/dpkg/dpkg.cfg.d/excludes \\"
msgstr ""

#: ../../using/recipes.md:257 a159121e42a647868f0f009cdaafcab2
msgid ""
"&& apt-get update \\ && dpkg -l | grep ^ii | cut -d' ' -f3 | xargs apt-"
"get install -yq --no-install-recommends --reinstall man \\ && apt-get "
"clean \\ && rm -rf /var/lib/apt/lists/*"
msgstr ""

#: ../../using/recipes.md:262 58aab6e52d0e40a7b867605dcedcc8d4
msgid "USER $NB_UID ```"
msgstr ""

#: ../../using/recipes.md:265 c7927c03aea84317a44a7f84b811f32f
msgid ""
"Adding the documentation on top of an existing singleuser image wastes a "
"lot of space and requires reinstalling every system package, which can "
"take additional time and bandwidth; the `datascience-notebook` image has "
"been shown to grow by almost 3GB when adding manapages in this way. "
"Enabling manpages in the base Ubuntu layer prevents this container bloat."
" Just use previous `Dockerfile` with original ubuntu image as your base "
"container:"
msgstr ""

#: ../../using/recipes.md:271 ba72334380644ff997caa639382d9e4c
msgid ""
"```dockerfile # Ubuntu 20.04 (focal) from 2020-04-23 # https://github.com"
"/docker-library/official-"
"images/commit/4475094895093bcc29055409494cce1e11b52f94 ARG "
"BASE_CONTAINER=ubuntu:focal-20200423@sha256:238e696992ba9913d24cfc3727034985abd136e08ee3067982401acdc30cbf3f"
" ```"
msgstr ""

#: ../../using/recipes.md:277 384b0bcbbc684d5dadfb97744e876618
msgid ""
"For Ubuntu 18.04 (bionic) and earlier, you may also require to workaround"
" for a mandb bug, which was fixed in mandb >= 2.8.6.1:"
msgstr ""

#: ../../using/recipes.md:279 4b82acbe9c4445c5b9a08f465c4ad366
msgid ""
"```dockerfile # https://git.savannah.gnu.org/cgit/man-"
"db.git/commit/?id=8197d7824f814c5d4b992b4c8730b5b0f7ec589a # "
"http://launchpadlibrarian.net/435841763/man-db_2.8.5-2_2.8.6-1.diff.gz"
msgstr ""

#: ../../using/recipes.md:285 49941945c20c47a39e0fecf762d118b1
msgid ""
"RUN echo \"MANPATH_MAP ${CONDA_DIR}/bin ${CONDA_DIR}/man\" >> "
"/etc/manpath.config \\"
msgstr ""

#: ../../using/recipes.md:284 3127cb1434d640fca77e9c27de6f5f22
msgid ""
"&& echo \"MANPATH_MAP ${CONDA_DIR}/bin ${CONDA_DIR}/share/man\" >> "
"/etc/manpath.config \\ && mandb"
msgstr ""

#: ../../using/recipes.md:289 a3d1bd78bb824b12b03d2873abeb957c
msgid ""
"Be sure to check the current base image in `base-notebook` before "
"building."
msgstr ""

#: ../../using/recipes.md:291 8f02d44795ef42d099b289e5ea7dbc34
msgid "## JupyterHub"
msgstr ""

# af0ca920391b419b805ae3809388fcf2
#: ../../using/recipes.md:293 701b1f58b9494f5ab1f3f1b92617fc77
msgid "We also have contributed recipes for using JupyterHub."
msgstr ""

#: ../../using/recipes.md:295 5b8ddf49f2774ff7b6b0d42a46427f49
msgid "### Use JupyterHub's dockerspawner"
msgstr ""

# 81e1dbb4c1c34f4c9e88630adff3d1e9
#: ../../using/recipes.md:297 9f83d1fd68044ec48dc93161c1826359
msgid ""
"In most cases for use with DockerSpawner, given any image that already "
"has a notebook stack set up, you would only need to add:"
msgstr ""

# 837b7a2dac01402e8cd2cc398bd5d785
#: ../../using/recipes.md:300 5062dd3a8fdc45a48fd649d905cdd11d
msgid "install the jupyterhub-singleuser script (for the right Python)"
msgstr ""

# d9816cb5ae2041e2a5fde9cdfb91262f
#: ../../using/recipes.md:301 a8fc7790e8c04828af42f5b15fb9fd92
msgid "change the command to launch the single-user server"
msgstr ""

#: ../../using/recipes.md:303 af15a8ca2b5b4cfb8d7ca5ee4fe083c1
msgid ""
"Swapping out the `FROM` line in the `jupyterhub/singleuser` Dockerfile "
"should be enough for most cases."
msgstr ""

#: ../../using/recipes.md:306 05958ee3c4744054b52361340b23a132
msgid ""
"Credit: [Justin Tyberg](https://github.com/jtyberg), "
"[quanghoc](https://github.com/quanghoc), and [Min "
"RK](https://github.com/minrk) based on [docker-"
"stacks/issues/124](https://github.com/jupyter/docker-stacks/issues/124) "
"and [docker-stacks/pull/185](https://github.com/jupyter/docker-"
"stacks/pull/185)"
msgstr ""

#: ../../using/recipes.md:311 b6f9c7b0438f43c19d709b9dd0f6e38d
msgid "### Containers with a specific version of JupyterHub"
msgstr ""

#: ../../using/recipes.md:313 7f4da1c0499940979b42e53ff409b2a9
msgid ""
"To use a specific version of JupyterHub, the version of `jupyterhub` in "
"your image should match the version in the Hub itself."
msgstr ""

#: ../../using/recipes.md:316 85db192d5c3644538a8b74ce163936a4
msgid ""
"```dockerfile FROM jupyter/base-notebook:5ded1de07260 RUN pip install "
"jupyterhub==0.8.0b1 ```"
msgstr ""

#: ../../using/recipes.md:321 323bb8737df84e3b9669f3f981aef282
msgid ""
"Credit: [MinRK](https://github.com/jupyter/docker-"
"stacks/issues/423#issuecomment-322767742)"
msgstr ""

#: ../../using/recipes.md:323 243019a55cfc41d1a9c11b860e661fe1
msgid ""
"Ref: [https://github.com/jupyter/docker-"
"stacks/issues/177](https://github.com/jupyter/docker-stacks/issues/177)"
msgstr ""

#: ../../using/recipes.md:326 bcb7663fc0404267834a69d5ce1c3471
msgid "## Spark"
msgstr ""

# 975c96d6a0b843dfabd889c753671c93
#: ../../using/recipes.md:328 a6b4b090c3cc4a3597ea9537f7f5a9b1
msgid "A few suggestions have been made regarding using Docker Stacks with spark."
msgstr ""

#: ../../using/recipes.md:330 cc2f5219c548409682c0bb9d3cf88f5b
msgid "### Using PySpark with AWS S3"
msgstr ""

# dc4059d42eaa495f8ebca84ebc91ac09
#: ../../using/recipes.md:332 2fa4bbae03a24397aff644fbe5295a22
msgid "Using Spark session for hadoop 2.7.3"
msgstr ""

#: ../../using/recipes.md:334 6c838fe6f52b4db599e7b5339610c828
msgid ""
"```py import os # !ls /usr/local/spark/jars/hadoop* # to figure out what "
"version of hadoop os.environ['PYSPARK_SUBMIT_ARGS'] = '--packages "
"\"org.apache.hadoop:hadoop-aws:2.7.3\" pyspark-shell'"
msgstr ""

#: ../../using/recipes.md:339 12ac1ad3f4ba476f86999ca1b1100622
msgid "import pyspark myAccessKey = input() mySecretKey = input()"
msgstr ""

#: ../../using/recipes.md:347 99f2f180070d4fdb81655a7f76164ff4
msgid "spark = pyspark.sql.SparkSession.builder \\"
msgstr ""

#: ../../using/recipes.md:344 500f90c7f6f1464d857d4b48c1965936
msgid ""
".master(\"local[*]\") \\ .config(\"spark.hadoop.fs.s3a.access.key\", "
"myAccessKey) \\ .config(\"spark.hadoop.fs.s3a.secret.key\", mySecretKey) "
"\\ .getOrCreate()"
msgstr ""

#: ../../using/recipes.md:349 b36aa26e68464ec8a3db0eac382ae531
msgid "df = spark.read.parquet(\"s3://myBucket/myKey\") ```"
msgstr ""

# d2c12e3525bf4d9ca518fef02c4a79d3
#: ../../using/recipes.md:352 843d34692eed4214a5c72a61c6faa0ad
msgid "Using Spark context for hadoop 2.6.0"
msgstr ""

#: ../../using/recipes.md:354 8e0d458cad6d4c99a09a1fc50a0ba8bd
msgid ""
"```py import os os.environ['PYSPARK_SUBMIT_ARGS'] = '--packages "
"com.amazonaws:aws-java-sdk:1.10.34,org.apache.hadoop:hadoop-aws:2.6.0 "
"pyspark-shell'"
msgstr ""

#: ../../using/recipes.md:358 6d396cc36334461997aeece9b625efd6
msgid "import pyspark sc = pyspark.SparkContext(\"local[*]\")"
msgstr ""

#: ../../using/recipes.md:361 5615ba670a5544fa9cb1d16ba5c5f53d
msgid "from pyspark.sql import SQLContext sqlContext = SQLContext(sc)"
msgstr ""

#: ../../using/recipes.md:364 5d58a092c31e40509e20caa25c64037f
msgid ""
"hadoopConf = sc._jsc.hadoopConfiguration() myAccessKey = input() "
"mySecretKey = input() hadoopConf.set(\"fs.s3.impl\", "
"\"org.apache.hadoop.fs.s3native.NativeS3FileSystem\") "
"hadoopConf.set(\"fs.s3.awsAccessKeyId\", myAccessKey) "
"hadoopConf.set(\"fs.s3.awsSecretAccessKey\", mySecretKey)"
msgstr ""

#: ../../using/recipes.md:371 32d4deb9fa9d4bd592124b4792d05afd
msgid "df = sqlContext.read.parquet(\"s3://myBucket/myKey\") ```"
msgstr ""

#: ../../using/recipes.md:374 dd27e0ea35c9411fb4119cb20dd0b02e
msgid ""
"Ref: [https://github.com/jupyter/docker-"
"stacks/issues/127](https://github.com/jupyter/docker-stacks/issues/127)"
msgstr ""

#: ../../using/recipes.md:377 6c953d0c1a5c438db043d8eab1c1430d
msgid "### Using Local Spark JARs"
msgstr ""

#: ../../using/recipes.md:379 877400ca93974b43a545a0ff203bdbee
msgid ""
"```python import os os.environ['PYSPARK_SUBMIT_ARGS'] = '--jars "
"/home/jovyan/spark-streaming-kafka-assembly_2.10-1.6.1.jar pyspark-shell'"
" import pyspark from pyspark.streaming.kafka import KafkaUtils from "
"pyspark.streaming import StreamingContext sc = pyspark.SparkContext() ssc"
" = StreamingContext(sc,1) broker = \"<my_broker_ip>\" directKafkaStream ="
" KafkaUtils.createDirectStream(ssc, [\"test1\"], "
"{\"metadata.broker.list\": broker}) directKafkaStream.pprint() "
"ssc.start() ```"
msgstr ""

#: ../../using/recipes.md:393 6a177509ceca45e4841c24e69f64aa6d
msgid ""
"Ref: [https://github.com/jupyter/docker-"
"stacks/issues/154](https://github.com/jupyter/docker-stacks/issues/154)"
msgstr ""

#: ../../using/recipes.md:396 cf39a9296f314826aeb89a8329ec2aa8
msgid "### Using spark-packages.org"
msgstr ""

#: ../../using/recipes.md:398 cdf3cc051776431faf375f1df73ee43c
msgid ""
"If you'd like to use packages from [spark-packages.org](https://spark-"
"packages.org/), see "
"[https://gist.github.com/parente/c95fdaba5a9a066efaab](https://gist.github.com/parente/c95fdaba5a9a066efaab)"
" for an example of how to specify the package identifier in the "
"environment before creating a SparkContext."
msgstr ""

#: ../../using/recipes.md:403 b0e563b1a77f4bac9bfe99cf6334aefd
msgid ""
"Ref: [https://github.com/jupyter/docker-"
"stacks/issues/43](https://github.com/jupyter/docker-stacks/issues/43)"
msgstr ""

#: ../../using/recipes.md:406 67b6b23d51a7488e87ce92f1d52ee007
msgid "### Use jupyter/all-spark-notebooks with an existing Spark/YARN cluster"
msgstr ""

#: ../../using/recipes.md:408 80857997206847378bf3448a693d2efe
msgid "```dockerfile FROM jupyter/all-spark-notebook"
msgstr ""

#: ../../using/recipes.md:411 d53eeed5cbbe4a738c9af5aacb377dab
msgid ""
"# Set env vars for pydoop ENV HADOOP_HOME /usr/local/hadoop-2.7.3 ENV "
"JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64 ENV HADOOP_CONF_HOME "
"/usr/local/hadoop-2.7.3/etc/hadoop ENV HADOOP_CONF_DIR  "
"/usr/local/hadoop-2.7.3/etc/hadoop"
msgstr ""

#: ../../using/recipes.md:417 544ea877a34c446ca38025f9e6ef1f3a
msgid ""
"USER root # Add proper open-jdk-8 not just the jre, needed for pydoop RUN"
" echo 'deb http://cdn-fastly.deb.debian.org/debian jessie-backports main'"
" > /etc/apt/sources.list.d/jessie-backports.list && \\"
msgstr ""

#: ../../using/recipes.md:420 496cc7e1f8204ec4a279e7ec7f7cf18a
msgid ""
"apt-get -y update && \\ apt-get install --no-install-recommends -t "
"jessie-backports -y openjdk-8-jdk && \\ rm /etc/apt/sources.list.d"
"/jessie-backports.list && \\ apt-get clean && \\ rm -rf "
"/var/lib/apt/lists/ && \\"
msgstr ""

#: ../../using/recipes.md:428 2fd772f00fb94b6c8c9d16c0485fe277
msgid "# Add hadoop binaries"
msgstr ""

#: ../../using/recipes.md:426 34dcbda8d3be4f30a273adeb41a782af
msgid ""
"wget "
"http://mirrors.ukfast.co.uk/sites/ftp.apache.org/hadoop/common/hadoop-2.7.3/hadoop-2.7.3.tar.gz"
" && \\ tar -xvf hadoop-2.7.3.tar.gz -C /usr/local && \\ chown -R "
"$NB_USER:users /usr/local/hadoop-2.7.3 && \\ rm -f hadoop-2.7.3.tar.gz &&"
" \\"
msgstr ""

#: ../../using/recipes.md:433 9fb7925891f34e39ba61d7052198f8e0
msgid "# Install os dependencies required for pydoop, pyhive"
msgstr ""

#: ../../using/recipes.md:431 772338b40d48437f82d0b937e3a2fd36
msgid ""
"apt-get update && \\ apt-get install --no-install-recommends -y build-"
"essential python-dev libsasl2-dev && \\ apt-get clean && \\ rm -rf "
"/var/lib/apt/lists/* && \\"
msgstr ""

#: ../../using/recipes.md:435 055b1cdb84b641a0a883e02a1aebc57d
msgid ""
"# Remove the example hadoop configs and replace # with those for our "
"cluster. # Alternatively this could be mounted as a volume"
msgstr ""

#: ../../using/recipes.md:438 5f426debd22e4ba39123b560f86a9f0a
msgid "rm -f /usr/local/hadoop-2.7.3/etc/hadoop/*"
msgstr ""

#: ../../using/recipes.md:440 74971c0fbf8244df933d5c2186c30aa5
msgid ""
"# Download this from ambari / cloudera manager and copy here COPY "
"example-hadoop-conf/ /usr/local/hadoop-2.7.3/etc/hadoop/"
msgstr ""

#: ../../using/recipes.md:443 ee57ed31ab484eea8af90af9d66a8acd
msgid ""
"# Spark-Submit doesn't work unless I set the following RUN echo "
"\"spark.driver.extraJavaOptions -Dhdp.version=2.5.3.0-37\" >> "
"/usr/local/spark/conf/spark-defaults.conf  && \\"
msgstr ""

#: ../../using/recipes.md:445 36ce4cd52ce4415c93a82bcacf14462a
msgid ""
"echo \"spark.yarn.am.extraJavaOptions -Dhdp.version=2.5.3.0-37\" >> "
"/usr/local/spark/conf/spark-defaults.conf && \\ echo "
"\"spark.master=yarn\" >>  /usr/local/spark/conf/spark-defaults.conf && \\"
" echo \"spark.hadoop.yarn.timeline-service.enabled=false\" >> "
"/usr/local/spark/conf/spark-defaults.conf && \\ chown -R $NB_USER:users "
"/usr/local/spark/conf/spark-defaults.conf && \\ # Create an alternative "
"HADOOP_CONF_HOME so we can mount as a volume and repoint # using ENV var "
"if needed mkdir -p /etc/hadoop/conf/ && \\ chown $NB_USER:users "
"/etc/hadoop/conf/"
msgstr ""

#: ../../using/recipes.md:454 ../../using/recipes.md:502
#: 6ab0dc76c192431d9160c51e2cd59624 bf9807c575dc4feb846545024e57399d
msgid "USER $NB_USER"
msgstr ""

#: ../../using/recipes.md:456 d5e485444fee4f65a7fc2352b25ce9a8
msgid ""
"# Install useful jupyter extensions and python libraries like : # - "
"Dashboards # - PyDoop # - PyHive RUN pip install jupyter_dashboards faker"
" && \\"
msgstr ""

#: ../../using/recipes.md:461 ca4193a9372147728bb34a9fa90973fa
msgid ""
"jupyter dashboards quick-setup --sys-prefix && \\ pip2 install pyhive "
"pydoop thrift sasl thrift_sasl faker"
msgstr ""

#: ../../using/recipes.md:464 7060fc3ababd4d33b4dd05c6f254a74c
msgid ""
"USER root # Ensure we overwrite the kernel config so that toree connects "
"to cluster RUN jupyter toree install --sys-prefix --spark_opts=\"--master"
" yarn --deploy-mode client --driver-memory 512m  --executor-memory 512m  "
"--executor-cores 1 --driver-java-options -Dhdp.version=2.5.3.0-37 --conf "
"spark.hadoop.yarn.timeline-service.enabled=false\" USER $NB_USER ```"
msgstr ""

#: ../../using/recipes.md:470 4acea4ae894940aabc6efbbe7d4e9310
msgid ""
"Credit: [britishbadger](https://github.com/britishbadger) from [docker-"
"stacks/issues/369](https://github.com/jupyter/docker-stacks/issues/369)"
msgstr ""

#: ../../using/recipes.md:473 bb5551c5be0a453ca5750b36e8ab4425
msgid ""
"## Run Jupyter Notebook/Lab inside an already secured environment (i.e., "
"with no token)"
msgstr ""

#: ../../using/recipes.md:475 7054fbcb039a40cf8e86e9330872dad9
msgid ""
"(Adapted from [issue 728](https://github.com/jupyter/docker-"
"stacks/issues/728))"
msgstr ""

#: ../../using/recipes.md:477 919bed2bb2ab48a896bce3094afd7026
msgid ""
"The default security is very good. There are use cases, encouraged by "
"containers, where the jupyter container and the system it runs within, "
"lie inside the security boundary. In these use cases it is convenient to "
"launch the server without a password or token. In this case, you should "
"use the `start.sh` script to launch the server with no token:"
msgstr ""

# 7476a6d5eae74ecaae966e56390c096e
#: ../../using/recipes.md:482 6018064f0e62440581eca7a4e50a2689
msgid "For jupyterlab:"
msgstr ""

#: ../../using/recipes.md:484 cd6853bb01ca45fe9719399a857b8145
msgid ""
"```bash docker run jupyter/base-notebook:6d2a05346196 start.sh jupyter "
"lab --LabApp.token='' ```"
msgstr ""

# f2efc5a0ba6b4c53b2047cc5f22bdbaa
#: ../../using/recipes.md:488 75dbba260cec46ae84c268d94777b4e3
msgid "For jupyter classic:"
msgstr ""

#: ../../using/recipes.md:490 40c99a5524714c11970d67002c441e19
msgid ""
"```bash docker run jupyter/base-notebook:6d2a05346196 start.sh jupyter "
"notebook --NotebookApp.token='' ```"
msgstr ""

#: ../../using/recipes.md:494 55d5b01fd59c42a79ccdf7aeb153b682
msgid "## Enable nbextension spellchecker for markdown (or any other nbextension)"
msgstr ""

# 8ccfbcb4264f48d0b6709fe81aa0a86d
#: ../../using/recipes.md:496 99b4bd4fc0b24bf5a1b6ca73c6193903
msgid "NB: this works for classic notebooks only"
msgstr ""

#: ../../using/recipes.md:498 3836fd7227024c9da21d250e76ad1e93
msgid ""
"```dockerfile # Update with your base image of choice FROM jupyter"
"/minimal-notebook:latest"
msgstr ""

#: ../../using/recipes.md:506 d9069cb708bb42fcafa3966ea7e78110
msgid "RUN pip install jupyter_contrib_nbextensions && \\"
msgstr ""

#: ../../using/recipes.md:505 20da8d144e034054beede7fec1a96f58
msgid ""
"jupyter contrib nbextension install --user && \\ # can modify or enable "
"additional extensions here jupyter nbextension enable spellchecker/main "
"--user"
msgstr ""

#: ../../using/recipes.md:510 3274b683f66641529e25dc657e4414b3
msgid ""
"Ref: [https://github.com/jupyter/docker-"
"stacks/issues/675](https://github.com/jupyter/docker-stacks/issues/675)"
msgstr ""

#: ../../using/recipes.md:513 ac28091f4c374d0bbb2e400571c60bfb
msgid "## Enable auto-sklearn notebooks"
msgstr ""

#: ../../using/recipes.md:515 47790b42eee244fc80d7dde221a16861
msgid ""
"Using `auto-sklearn` requires `swig`, which the other notebook images "
"lack, so it cant be experimented with. Also, there is no Conda package "
"for `auto-sklearn`."
msgstr ""

#: ../../using/recipes.md:517 09ab496c671941ce8610d11441267a02
msgid ""
"```dockerfile ARG BASE_CONTAINER=jupyter/scipy-notebook FROM jupyter"
"/scipy-notebook:latest"
msgstr ""

#: ../../using/recipes.md:523 d8b19772f191469cbc59bd49736ad8ca
msgid ""
"# autosklearn requires swig, which no other image has RUN apt-get update "
"&& \\"
msgstr ""

#: ../../using/recipes.md:525 ad65bf9a3c9e4a91bc81c34d6e8afab1
msgid ""
"apt-get install -y --no-install-recommends swig && \\ apt-get clean && \\"
" rm -rf /var/lib/apt/lists/*"
msgstr ""

#: ../../using/recipes.md:530 ../../using/recipes.md:550
#: 03d06fdd157e4d2c823cf459b3ac090d 360a567780314ab7aeb8da0700da2430
msgid "USER $NB_UID"
msgstr ""

#: ../../using/recipes.md:532 7429f3c8104847ee9c62f390174e27f8
msgid "RUN pip install --quiet --no-cache-dir auto-sklearn ```"
msgstr ""

#: ../../using/recipes.md:535 be906660de5447dd9a145d1d2e3a9b6a
msgid "## Enable Delta Lake in Spark notebooks"
msgstr ""

#: ../../using/recipes.md:537 c91511126c244ac28024f8f9b6580623
msgid ""
"Please note that the [Delta Lake](https://delta.io/) packages are only "
"available for Spark version > `3.0`. By adding the properties to `spark-"
"defaults.conf`, the user no longer needs to enable Delta support in each "
"notebook."
msgstr ""

#: ../../using/recipes.md:539 92afe1c0e3d04ae5a01005e7002f0195
msgid "```dockerfile FROM jupyter/pyspark-notebook:latest"
msgstr ""

#: ../../using/recipes.md:542 4bc2e7e208c5401ebe2df56fe09ad8c8
msgid "ARG DELTA_CORE_VERSION=\"0.8.0\""
msgstr ""

#: ../../using/recipes.md:548 04a5ff13226841da944afa316fe789c3
msgid ""
"RUN echo \"spark.jars.packages io.delta:delta-"
"core_2.12:${DELTA_CORE_VERSION}\" >> $SPARK_HOME/conf/spark-defaults.conf"
" && \\"
msgstr ""

#: ../../using/recipes.md:547 a86f91f27d6743e1af6dcc3f0ad50bd3
msgid ""
"echo 'spark.sql.extensions io.delta.sql.DeltaSparkSessionExtension' >> "
"$SPARK_HOME/conf/spark-defaults.conf && \\ echo "
"'spark.sql.catalog.spark_catalog "
"org.apache.spark.sql.delta.catalog.DeltaCatalog' >> $SPARK_HOME/conf"
"/spark-defaults.conf"
msgstr ""

#: ../../using/recipes.md:552 df17f8aed1f64021b20e7f39618dffdb
msgid ""
"# Run pyspark and exit to trigger the download of the delta lake jars RUN"
" echo \"quit()\" > /tmp/init-delta.py && \\"
msgstr ""

#: ../../using/recipes.md:554 04b532a8aaf5464086b511eeb4ed3f2b
msgid "spark-submit /tmp/init-delta.py && \\ rm /tmp/init-delta.py"
msgstr ""

#: ../../using/running.md:1 fd01421ea13c4ee29d9cccb5c5ebf181
msgid "# Running a Container"
msgstr ""

# 1f345e7a53e94439b936b3f4bbc877da
# 324906e630c646b0ae10bbff6ed587fa
#: ../../using/running.md:3 ../../using/selecting.md:7
#: 3fb99b1bd42d440ab49a151e7b0bd492 d09599aa2e604ec0ba9910d5d189fce0
msgid "Using one of the Jupyter Docker Stacks requires two choices:"
msgstr ""

# 781cbaffaea24fb08451cc83327cfa9b
# 1c6c83776a3b4a27a8ed4128a0dceeb7
#: ../../using/running.md:5 ../../using/selecting.md:9
#: 35d12eca6f534f4caa8cd7c670f55b09 b3b93b67f46543fab82579c3c231b9ae
msgid "Which Docker image you wish to use"
msgstr ""

# 632f67c9207e4ed9ba01bf59c4d942f7
# ab191cfc95204429b7c0271ecdf69d33
#: ../../using/running.md:6 ../../using/selecting.md:10
#: 1d3699f067c7499ea09cb793610f4591 ea3baf467db6400ebaa3c15b1e69c994
msgid "How you wish to start Docker containers from that image"
msgstr ""

# ebf870aa1ede4e2ab8fdcb2cef0fd610
#: ../../using/running.md:8 8e21d46a45f5415287d64898560facf7
msgid "This section provides details about the second."
msgstr ""

#: ../../using/running.md:10 03a5a436ee6345b9940e4cf05346b6cb
msgid "## Using the Docker CLI"
msgstr ""

#: ../../using/running.md:12 c3d7243169c14da5a1f0712dfecec33d
msgid ""
"You can launch a local Docker container from the Jupyter Docker Stacks "
"using the [Docker command line "
"interface](https://docs.docker.com/engine/reference/commandline/cli/). "
"There are numerous ways to configure containers using the CLI. The "
"following are some common patterns."
msgstr ""

#: ../../using/running.md:14 1a3b424d67ae4d3ba1bfc1f753ec4d11
msgid ""
"**Example 1** This command pulls the `jupyter/scipy-notebook` image "
"tagged `2c80cf3537ca` from Docker Hub if it is not already present on the"
" local host. It then starts a container running a Jupyter Notebook server"
" and exposes the server on host port 8888. The server logs appear in the "
"terminal and include a URL to the notebook server."
msgstr ""

#: ../../using/running.md:16 2d54acef45c8427b842b3528b8d3fb51
msgid "```bash $ docker run -p 8888:8888 jupyter/scipy-notebook:2c80cf3537ca"
msgstr ""

#: ../../using/running.md:19 ba0d9e8dd6da4467a8517a3896b21936
msgid ""
"Executing the command: jupyter notebook [I 15:33:00.567 NotebookApp] "
"Writing notebook server cookie secret to "
"/home/jovyan/.local/share/jupyter/runtime/notebook_cookie_secret [W "
"15:33:01.084 NotebookApp] WARNING: The notebook server is listening on "
"all IP addresses and not using encryption. This is not recommended. [I "
"15:33:01.150 NotebookApp] JupyterLab alpha preview extension loaded from "
"/opt/conda/lib/python3.6/site-packages/jupyterlab [I 15:33:01.150 "
"NotebookApp] JupyterLab application directory is "
"/opt/conda/share/jupyter/lab [I 15:33:01.155 NotebookApp] Serving "
"notebooks from local directory: /home/jovyan [I 15:33:01.156 NotebookApp]"
" 0 active kernels [I 15:33:01.156 NotebookApp] The Jupyter Notebook is "
"running at: [I 15:33:01.157 NotebookApp] http://[all ip addresses on your"
" system]:8888/?token=112bb073331f1460b73768c76dffb2f87ac1d4ca7870d46a [I "
"15:33:01.157 NotebookApp] Use Control-C to stop this server and shut down"
" all kernels (twice to skip confirmation). [C 15:33:01.160 NotebookApp]"
msgstr ""

#: ../../using/running.md:31 ../../using/running.md:72
#: ../../using/running.md:94 2a2491db953c4b17b95d213da743c753
#: 99f7b2295d244df7aab471edb1a6b0fc aa987eeb4cb74b66884a888445fb3c00
msgid ""
"Copy/paste this URL into your browser when you connect for the first "
"time, to login with a token:"
msgstr ""

#: ../../using/running.md:33 66be370123f44edfa8c2ef8d5e4a6d3d
msgid "http://localhost:8888/?token=112bb073331f1460b73768c76dffb2f87ac1d4ca7870d46a"
msgstr ""

#: ../../using/running.md:36 5be31e38ce0948ffb344759a4dc35628
msgid ""
"Pressing `Ctrl-C` shuts down the notebook server but leaves the container"
" intact on disk for later restart or permanent deletion using commands "
"like the following:"
msgstr ""

#: ../../using/running.md:38 4bfcd62a82484d61a723c7a05f2c120e
msgid ""
"```bash # list containers $ docker ps -a CONTAINER ID        IMAGE"
"                   COMMAND                  CREATED    STATUS"
"                      PORTS               NAMES d67fe77f1a84        "
"jupyter/base-notebook   \"tini -- start-noteb…\"   44 seconds ago    "
"Exited (0) 39 seconds ago                       cocky_mirzakhani"
msgstr ""

#: ../../using/running.md:44 cbe60a2f7c614c05b16a4222c16b533f
msgid ""
"# start the stopped container $ docker start -a d67fe77f1a84 Executing "
"the command: jupyter notebook [W 16:45:02.020 NotebookApp] WARNING: The "
"notebook server is listening on all IP addresses and not using "
"encryption. This is not recommended. ..."
msgstr ""

#: ../../using/running.md:50 dc8fb7c14ad840c6bacfd5f60bce1550
msgid "# remove the stopped container $ docker rm d67fe77f1a84 d67fe77f1a84 ```"
msgstr ""

#: ../../using/running.md:55 cfc68cdbbd0a426db224d450f0b105d6
msgid ""
"**Example 2** This command pulls the `jupyter/r-notebook` image tagged "
"`e5c5a7d3e52d` from Docker Hub if it is not already present on the local "
"host. It then starts a container running a Jupyter Notebook server and "
"exposes the server on host port 10000. The server logs appear in the "
"terminal and include a URL to the notebook server, but with the internal "
"container port (8888) instead of the the correct host port (10000)."
msgstr ""

#: ../../using/running.md:57 5adc361574664dd7934a66a463d0e249
msgid ""
"```bash $ docker run --rm -p 10000:8888 -v \"$PWD\":/home/jovyan/work "
"jupyter/r-notebook:e5c5a7d3e52d"
msgstr ""

#: ../../using/running.md:60 e474faf54d054a7a877b453174c861ac
msgid ""
"Executing the command: jupyter notebook [I 19:31:09.573 NotebookApp] "
"Writing notebook server cookie secret to "
"/home/jovyan/.local/share/jupyter/runtime/notebook_cookie_secret [W "
"19:31:11.930 NotebookApp] WARNING: The notebook server is listening on "
"all IP addresses and not using encryption. This is not recommended. [I "
"19:31:12.085 NotebookApp] JupyterLab alpha preview extension loaded from "
"/opt/conda/lib/python3.6/site-packages/jupyterlab [I 19:31:12.086 "
"NotebookApp] JupyterLab application directory is "
"/opt/conda/share/jupyter/lab [I 19:31:12.117 NotebookApp] Serving "
"notebooks from local directory: /home/jovyan [I 19:31:12.117 NotebookApp]"
" 0 active kernels [I 19:31:12.118 NotebookApp] The Jupyter Notebook is "
"running at: [I 19:31:12.119 NotebookApp] http://[all ip addresses on your"
" system]:8888/?token=3b8dce890cb65570fb0d9c4a41ae067f7604873bd604f5ac [I "
"19:31:12.120 NotebookApp] Use Control-C to stop this server and shut down"
" all kernels (twice to skip confirmation). [C 19:31:12.122 NotebookApp]"
msgstr ""

#: ../../using/running.md:74 b5bc6f00ede443229492136e745399ef
msgid "http://localhost:8888/?token=3b8dce890cb65570fb0d9c4a41ae067f7604873bd604f5ac"
msgstr ""

#: ../../using/running.md:77 54da1bc331304e8dba6c0126ab38a866
msgid ""
"Pressing `Ctrl-C` shuts down the notebook server and immediately destroys"
" the Docker container. Files written to `~/work` in the container remain "
"touched. Any other changes made in the container are lost."
msgstr ""

#: ../../using/running.md:79 2bdcd2568c66405fa8d961a43674d66f
msgid ""
"**Example 3** This command pulls the `jupyter/all-spark-notebook` image "
"currently tagged `latest` from Docker Hub if an image tagged `latest` is "
"not already present on the local host. It then starts a container named "
"`notebook` running a JupyterLab server and exposes the server on a "
"randomly selected port."
msgstr ""

#: ../../using/running.md:81 5bfce8f37d89432cadddc981cbdc558c
msgid "```bash docker run -d -P --name notebook jupyter/all-spark-notebook ```"
msgstr ""

# 9a561b9bb5944059801c71862521d66a
#: ../../using/running.md:85 e02287f91e0e4ed88e507f130fd8c738
msgid ""
"The assigned port and notebook server token are visible using other "
"Docker commands."
msgstr ""

#: ../../using/running.md:87 b07f010010bd495f911cf39f0d0a88ba
msgid ""
"```bash # get the random host port assigned to the container port 8888 $ "
"docker port notebook 8888 0.0.0.0:32769"
msgstr ""

#: ../../using/running.md:92 e677621041ee460395cb854016560146
msgid "# get the notebook token from the logs $ docker logs --tail 3 notebook"
msgstr ""

#: ../../using/running.md:96 00f37a8aae9f4e27888515ff4ac687b8
msgid "http://localhost:8888/?token=15914ca95f495075c0aa7d0e060f1a78b6d94f70ea373b00"
msgstr ""

#: ../../using/running.md:99 581fe41cb85d4e0d8bd493a6cb7143e5
msgid ""
"Together, the URL to visit on the host machine to access the server in "
"this case is "
"<http://localhost:32769?token=15914ca95f495075c0aa7d0e060f1a78b6d94f70ea373b00>."
msgstr ""

# bf82931e197b40ad940d9969993120a2
#: ../../using/running.md:101 e0ba04a126454b7a83de8a0ffcbf23c1
msgid ""
"The container runs in the background until stopped and/or removed by "
"additional Docker commands."
msgstr ""

#: ../../using/running.md:103 916481d420bb4fbe9bc01ef6c8bd4958
msgid "```bash # stop the container docker stop notebook notebook"
msgstr ""

#: ../../using/running.md:108 18e9abbbe09448929f3dcbfcb367c787
msgid "# remove the container permanently docker rm notebook notebook ```"
msgstr ""

#: ../../using/running.md:113 c02c548917284847bd387d267c19897b
msgid "## Using Binder"
msgstr ""

#: ../../using/running.md:115 49e73c045caa40f98cefd583e243e98f
msgid ""
"[Binder](https://mybinder.org/) is a service that allows you to create "
"and share custom computing environments for projects in version control. "
"You can use any of the Jupyter Docker Stacks images as a basis for a "
"Binder-compatible Dockerfile. See the [docker-stacks "
"example](https://mybinder.readthedocs.io/en/latest/sample_repos.html#using-a"
"-docker-image-from-the-jupyter-docker-stacks-repository) and [Using a "
"Dockerfile](https://mybinder.readthedocs.io/en/latest/tutorials/dockerfile.html)"
" sections in the [Binder "
"documentation](https://mybinder.readthedocs.io/en/latest/index.html) for "
"instructions."
msgstr ""

#: ../../using/running.md:117 efa84bebc24a43d3a1f0c32353e0eeac
msgid "## Using JupyterHub"
msgstr ""

#: ../../using/running.md:119 09eff7f5da834c93b3bb19dcd57f2aae
msgid ""
"You can configure JupyterHub to launcher Docker containers from the "
"Jupyter Docker Stacks images. If you've been following the [Zero to "
"JupyterHub with Kubernetes](http://zero-to-"
"jupyterhub.readthedocs.io/en/latest/) guide, see the [Use an existing "
"Docker image](http://zero-to-jupyterhub.readthedocs.io/en/latest/user-"
"environment.html#use-an-existing-docker-image) section for details. If "
"you have a custom JupyterHub deployment, see the [Picking or building a "
"Docker image](https://github.com/jupyterhub/dockerspawner#picking-or-"
"building-a-docker-image) instructions for the "
"[dockerspawner](https://github.com/jupyterhub/dockerspawner) instead."
msgstr ""

#: ../../using/running.md:121 29c19df515754a5bab4c3e2a7d9ddd08
msgid "## Using Other Tools and Services"
msgstr ""

#: ../../using/running.md:123 39b3b002ea58412eb09426f4e5747a85
msgid ""
"You can use the Jupyter Docker Stacks with any Docker-compatible "
"technology (e.g., [Docker Compose](https://docs.docker.com/compose/), "
"[docker-py](https://github.com/docker/docker-py), your favorite cloud "
"container service). See the documentation of the tool, library, or "
"service for details about how to reference, configure, and launch "
"containers from these images."
msgstr ""

#: ../../using/selecting.md:1 c67550a2b9e64aeeb48ba8d37956efb5
msgid "# Selecting an Image"
msgstr ""

#: ../../using/selecting.md:3 2a1dceb1111d4066bd0d740b63b93e4b
msgid "[Core Stacks](#core-stacks)"
msgstr ""

#: ../../using/selecting.md:4 d760a840553d41f2a32e18e2d79cb837
msgid "[Image Relationships](#image-relationships)"
msgstr ""

#: ../../using/selecting.md:5 e39909d1ad694ef5863ae287d7b35bcf
msgid "[Community Stacks](#community-stacks)"
msgstr ""

# af7e19bb10ec44348e8121be4129ce8a
#: ../../using/selecting.md:12 0a3115d8552543f4967ce5be80e09452
msgid "This section provides details about the first."
msgstr ""

#: ../../using/selecting.md:14 a08f857cf1c34ed396f754a38f4512d2
msgid "## Core Stacks"
msgstr ""

#: ../../using/selecting.md:16 0a716cc671b6466c85c279e1ede7b424
msgid ""
"The Jupyter team maintains a set of Docker image definitions in the "
"[https://github.com/jupyter/docker-stacks](https://github.com/jupyter"
"/docker-stacks) GitHub repository. The following sections describe these "
"images including their contents, relationships, and versioning strategy."
msgstr ""

#: ../../using/selecting.md:21 551432ac326245558fec6b4d899ae2df
msgid "### jupyter/base-notebook"
msgstr ""

#: ../../using/selecting.md:23 6fe22cc95947469898de734366344177
msgid ""
"[Source on GitHub](https://github.com/jupyter/docker-stacks/tree/master"
"/base-notebook) | [Dockerfile commit history](https://github.com/jupyter"
"/docker-stacks/commits/master/base-notebook/Dockerfile) | [Docker Hub "
"image tags](https://hub.docker.com/r/jupyter/base-notebook/tags/)"
msgstr ""

#: ../../using/selecting.md:27 038b9ef51cc04d06b577c348db557e55
msgid ""
"`jupyter/base-notebook` is a small image supporting the [options common "
"across all core stacks](common.md). It is the basis for all other stacks."
msgstr ""

#: ../../using/selecting.md:30 5433ce1fdfae4b338a5d653957f5494d
msgid ""
"Minimally-functional Jupyter Notebook server (e.g., no LaTeX support for "
"saving notebooks as PDFs)"
msgstr ""

#: ../../using/selecting.md:31 32bcb2c27ab54df7a2215ac383270fc2
msgid ""
"[Miniforge](https://github.com/conda-forge/miniforge) Python 3.x in "
"`/opt/conda` with two package managers - "
"[conda](https://github.com/conda/conda): \"cross-platform, language-"
"agnostic binary package manager\". - [mamba](https://github.com/mamba-"
"org/mamba): \"reimplementation of the conda package manager in C++\"."
msgstr ""

# c5732a5536554f91b8dd7e8946beaab8
#: ../../using/selecting.md:34 1673e0b5f34c47948109db0a2036c125
msgid "No preinstalled scientific computing packages"
msgstr ""

#: ../../using/selecting.md:35 5ca09ce0233f463a8d71ee464e0dfa55
msgid ""
"Unprivileged user `jovyan` (`uid=1000`, configurable, see options) in "
"group `users` (`gid=100`) with ownership over the `/home/jovyan` and "
"`/opt/conda` paths"
msgstr ""

#: ../../using/selecting.md:37 b61a4f0053954e3793574eaefa3d4ce3
msgid ""
"`tini` as the container entrypoint and a `start-notebook.sh` script as "
"the default command"
msgstr ""

#: ../../using/selecting.md:38 33f5e77665294f708c6bf104365d8f40
msgid ""
"A `start-singleuser.sh` script useful for launching containers in "
"JupyterHub"
msgstr ""

#: ../../using/selecting.md:39 6963a1cd7f774700a2bfa1020263ebdc
msgid ""
"A `start.sh` script useful for running alternative commands in the "
"container (e.g. `ipython`, `jupyter kernelgateway`, `jupyter lab`)"
msgstr ""

# 075e6ffe0f5b4d508d555992f5dd6fe1
#: ../../using/selecting.md:41 1b7385b2c4ae4742abd2c6a01ba10041
msgid "Options for a self-signed HTTPS certificate and passwordless sudo"
msgstr ""

#: ../../using/selecting.md:43 f2fd2c13e0c6404fa07594c47e649218
msgid "### jupyter/minimal-notebook"
msgstr ""

#: ../../using/selecting.md:45 41a2a0ba9a0b4d12bd71bced77f8a3be
msgid ""
"[Source on GitHub](https://github.com/jupyter/docker-stacks/tree/master"
"/minimal-notebook) | [Dockerfile commit "
"history](https://github.com/jupyter/docker-stacks/commits/master/minimal-"
"notebook/Dockerfile) | [Docker Hub image "
"tags](https://hub.docker.com/r/jupyter/minimal-notebook/tags/)"
msgstr ""

#: ../../using/selecting.md:49 d7fc36aead894ca99c18f7085136a7f2
msgid ""
"`jupyter/minimal-notebook` adds command line tools useful when working in"
" Jupyter applications."
msgstr ""

#: ../../using/selecting.md:51 9d976186f3fa4f719e5d3ab4d878861e
msgid "Everything in `jupyter/base-notebook`"
msgstr ""

#: ../../using/selecting.md:52 61738ffdb03747f6b2b050a5e3f44754
msgid "[TeX Live](https://www.tug.org/texlive/) for notebook document conversion"
msgstr ""

#: ../../using/selecting.md:53 fc4c419a3a0547ed8620d87d75bd3d69
msgid ""
"[git](https://git-scm.com/), [vi](https://www.vim.org) (actually `vim-"
"tiny`), [nano](https://www.nano-editor.org/) (actually `nano-tiny`), "
"tzdata, and unzip"
msgstr ""

#: ../../using/selecting.md:57 e656263aba364bed9bc856c6e0c9b4fc
msgid "### jupyter/r-notebook"
msgstr ""

#: ../../using/selecting.md:59 ade251ee1e2a48ed9d4d216b864aa8df
msgid ""
"[Source on GitHub](https://github.com/jupyter/docker-"
"stacks/tree/master/r-notebook) | [Dockerfile commit "
"history](https://github.com/jupyter/docker-"
"stacks/commits/master/r-notebook/Dockerfile) | [Docker Hub image "
"tags](https://hub.docker.com/r/jupyter/r-notebook/tags/)"
msgstr ""

#: ../../using/selecting.md:63 89e9ab85127541d5b4f5dc811ba9289c
msgid "`jupyter/r-notebook` includes popular packages from the R ecosystem."
msgstr ""

#: ../../using/selecting.md:65 ../../using/selecting.md:88
#: 2f5f27ac800547d4bae6c5b8bac96c0f 59b5190ebc3848cf9652ecae5e0f1786
msgid "Everything in `jupyter/minimal-notebook` and its ancestor images"
msgstr ""

#: ../../using/selecting.md:66 1f120778a28a4b29b2770dec881b9eea
msgid "The [R](https://www.r-project.org/) interpreter and base environment"
msgstr ""

#: ../../using/selecting.md:67 ../../using/selecting.md:157
#: 137a4ba896a4495cadfe48870f63b20d ab48cf52d3034a37bc08173a6f9fcd76
msgid ""
"[IRKernel](https://irkernel.github.io/) to support R code in Jupyter "
"notebooks"
msgstr ""

#: ../../using/selecting.md:68 3f122ef102fc451ca18d211cbf30f4f7
msgid ""
"[tidyverse](https://www.tidyverse.org/) packages from [conda-forge](https"
"://conda-forge.github.io/feedstocks)"
msgstr ""

#: ../../using/selecting.md:70 a0f3e41713744fada541bc07b9b3d52d
msgid ""
"[devtools](https://cran.r-project.org/web/packages/devtools/index.html), "
"[shiny](https://shiny.rstudio.com/), "
"[rmarkdown](http://rmarkdown.rstudio.com/), "
"[forecast](https://cran.r-project.org/web/packages/forecast/forecast.pdf),"
" [rsqlite](https://cran.r-project.org/web/packages/RSQLite/index.html), "
"[nycflights13](https://cran.r-project.org/web/packages/nycflights13/index.html),"
" [caret](http://topepo.github.io/caret/index.html), "
"[tidymodels](https://www.tidymodels.org/), "
"[rcurl](https://cran.r-project.org/web/packages/RCurl/index.html), and "
"[randomforest](https://cran.r-project.org/web/packages/randomForest/randomForest.pdf)"
" packages from [conda-forge](https://conda-forge.github.io/feedstocks)"
msgstr ""

#: ../../using/selecting.md:80 de325c0741394389bd42a6786db5f25d
msgid "### jupyter/scipy-notebook"
msgstr ""

#: ../../using/selecting.md:82 f9ef43f443fa4886985c9356c629ee0f
msgid ""
"[Source on GitHub](https://github.com/jupyter/docker-stacks/tree/master"
"/scipy-notebook) | [Dockerfile commit history](https://github.com/jupyter"
"/docker-stacks/commits/master/scipy-notebook/Dockerfile) | [Docker Hub "
"image tags](https://hub.docker.com/r/jupyter/scipy-notebook/tags/)"
msgstr ""

#: ../../using/selecting.md:86 22bffea209144173b3aceb37bd4f8213
msgid ""
"`jupyter/scipy-notebook` includes popular packages from the scientific "
"Python ecosystem."
msgstr ""

#: ../../using/selecting.md:89 f7e8c1797c344dd6946adff31b8dc9e6
msgid ""
"[dask](https://dask.org/), [pandas](https://pandas.pydata.org/), "
"[numexpr](https://github.com/pydata/numexpr), "
"[matplotlib](https://matplotlib.org/), [scipy](https://www.scipy.org/), "
"[seaborn](https://seaborn.pydata.org/), [scikit-learn](http://scikit-"
"learn.org/stable/), [scikit-image](http://scikit-image.org/), "
"[sympy](http://www.sympy.org/en/index.html), "
"[cython](http://cython.org/), "
"[patsy](https://patsy.readthedocs.io/en/latest/), "
"[statsmodel](http://www.statsmodels.org/stable/index.html), "
"[cloudpickle](https://github.com/cloudpipe/cloudpickle), "
"[dill](https://pypi.python.org/pypi/dill), "
"[numba](https://numba.pydata.org/), "
"[bokeh](https://bokeh.pydata.org/en/latest/), "
"[sqlalchemy](https://www.sqlalchemy.org/), [hdf5](http://www.h5py.org/), "
"[vincent](http://vincent.readthedocs.io/en/latest/), "
"[beautifulsoup](https://www.crummy.com/software/BeautifulSoup/), "
"[protobuf](https://developers.google.com/protocol-"
"buffers/docs/pythontutorial), [xlrd](http://www.python-excel.org/), "
"[bottleneck](https://bottleneck.readthedocs.io/en/latest/), and "
"[pytables](https://www.pytables.org/) packages"
msgstr ""

#: ../../using/selecting.md:104 c8b327bbba59452cb4ee6213538a3d76
msgid ""
"[ipywidgets](https://ipywidgets.readthedocs.io/en/stable/) and "
"[ipympl](https://github.com/matplotlib/jupyter-matplotlib) for "
"interactive visualizations and plots in Python notebooks"
msgstr ""

#: ../../using/selecting.md:107 dc55948dc77e46ff96e18f16418ed4ce
msgid ""
"[Facets](https://github.com/PAIR-code/facets) for visualizing machine "
"learning datasets"
msgstr ""

#: ../../using/selecting.md:109 940c252f508747038206a99f6fdfd12e
msgid "### jupyter/tensorflow-notebook"
msgstr ""

#: ../../using/selecting.md:111 ed7d2db034e749e78060659aa693a1b0
msgid ""
"[Source on GitHub](https://github.com/jupyter/docker-stacks/tree/master"
"/tensorflow-notebook) | [Dockerfile commit "
"history](https://github.com/jupyter/docker-stacks/commits/master"
"/tensorflow-notebook/Dockerfile) | [Docker Hub image "
"tags](https://hub.docker.com/r/jupyter/tensorflow-notebook/tags/)"
msgstr ""

#: ../../using/selecting.md:115 cea907e3dbde4ffea06e9acb63d83220
msgid ""
"`jupyter/tensorflow-notebook` includes popular Python deep learning "
"libraries."
msgstr ""

#: ../../using/selecting.md:117 ../../using/selecting.md:145
#: 31fc2715bdd74c4f839ef2894d9bd204 f14ff84a805b45caacb576eb3de9a40a
msgid "Everything in `jupyter/scipy-notebook` and its ancestor images"
msgstr ""

#: ../../using/selecting.md:118 e2a94e358ea043a19b4ab1657e768210
msgid ""
"[tensorflow](https://www.tensorflow.org/) and [keras](https://keras.io/) "
"machine learning libraries"
msgstr ""

#: ../../using/selecting.md:121 855f0b14bd5e4341b1c6a89af60c0543
msgid "### jupyter/datascience-notebook"
msgstr ""

#: ../../using/selecting.md:123 30609ac1769b4caf914325d4d363bc01
msgid ""
"[Source on GitHub](https://github.com/jupyter/docker-stacks/tree/master"
"/datascience-notebook) | [Dockerfile commit "
"history](https://github.com/jupyter/docker-stacks/commits/master"
"/datascience-notebook/Dockerfile) | [Docker Hub image "
"tags](https://hub.docker.com/r/jupyter/datascience-notebook/tags/)"
msgstr ""

#: ../../using/selecting.md:127 929dfa9d16fa499ebc35d2545cf010df
msgid ""
"`jupyter/datascience-notebook` includes libraries for data analysis from "
"the Julia, Python, and R communities."
msgstr ""

#: ../../using/selecting.md:130 95225d7dd82342fc860626c0d694cce2
msgid ""
"Everything in the `jupyter/scipy-notebook` and `jupyter/r-notebook` "
"images, and their ancestor images"
msgstr ""

#: ../../using/selecting.md:132 43185495339f4d458a95ae26604b749b
msgid "The [Julia](https://julialang.org/) compiler and base environment"
msgstr ""

#: ../../using/selecting.md:133 dc1318ee425b43179edfba40d3ecabd4
msgid ""
"[IJulia](https://github.com/JuliaLang/IJulia.jl) to support Julia code in"
" Jupyter notebooks"
msgstr ""

#: ../../using/selecting.md:134 7a6cc91e841b4064aaced1f926475e92
msgid ""
"[HDF5](https://github.com/JuliaIO/HDF5.jl), "
"[Gadfly](http://gadflyjl.org/stable/), and "
"[RDatasets](https://github.com/johnmyleswhite/RDatasets.jl) packages"
msgstr ""

#: ../../using/selecting.md:137 59e3c8a417a64abc98f01f9e81bbe951
msgid "### jupyter/pyspark-notebook"
msgstr ""

#: ../../using/selecting.md:139 d7474a65b43b4766b25e39f6864f2970
msgid ""
"[Source on GitHub](https://github.com/jupyter/docker-stacks/tree/master"
"/pyspark-notebook) | [Dockerfile commit "
"history](https://github.com/jupyter/docker-stacks/commits/master/pyspark-"
"notebook/Dockerfile) | [Docker Hub image "
"tags](https://hub.docker.com/r/jupyter/pyspark-notebook/tags/)"
msgstr ""

#: ../../using/selecting.md:143 fd24a09405114e469ce53309bd487f1e
msgid "`jupyter/pyspark-notebook` includes Python support for Apache Spark."
msgstr ""

#: ../../using/selecting.md:146 ce4f3c7ca83f417c8121d1f5951e64f0
msgid "[Apache Spark](https://spark.apache.org/) with Hadoop binaries"
msgstr ""

#: ../../using/selecting.md:148 5c289a439bb142cb884d72fc00cbbbdf
msgid "### jupyter/all-spark-notebook"
msgstr ""

#: ../../using/selecting.md:150 e20836ea63e8491faf96256fc98e2053
msgid ""
"[Source on GitHub](https://github.com/jupyter/docker-stacks/tree/master"
"/all-spark-notebook) | [Dockerfile commit "
"history](https://github.com/jupyter/docker-stacks/commits/master/all-"
"spark-notebook/Dockerfile) | [Docker Hub image "
"tags](https://hub.docker.com/r/jupyter/all-spark-notebook/tags/)"
msgstr ""

#: ../../using/selecting.md:154 520b59cd9724427ea2af5f65a7261e02
msgid ""
"`jupyter/all-spark-notebook` includes Python, R, and Scala support for "
"Apache Spark."
msgstr ""

#: ../../using/selecting.md:156 656acd905b0a410e93844f0f372c3a57
msgid "Everything in `jupyter/pyspark-notebook` and its ancestor images"
msgstr ""

#: ../../using/selecting.md:158 953d11d8cea144c7af11e8d1ed59ed2b
msgid ""
"[Apache Toree](https://toree.apache.org/) and [spylon-"
"kernel](https://github.com/maxpoint/spylon-kernel) to support Scala code "
"in Jupyter notebooks"
msgstr ""

#: ../../using/selecting.md:161 b3004ef48a4b4adb9cc9ccf50febeb09
msgid ""
"[ggplot2](https://ggplot2.tidyverse.org), "
"[sparklyr](http://spark.rstudio.com/), and "
"[rcurl](https://cran.r-project.org/web/packages/RCurl/index.html) "
"packages"
msgstr ""

#: ../../using/selecting.md:164 37ab1dcbb56a49a6a71319d40d8e8a62
msgid "### Image Relationships"
msgstr ""

#: ../../using/selecting.md:166 719ef21645aa42c18822e39e3d0e4bb0
msgid ""
"The following diagram depicts the build dependency tree of the core "
"images. (i.e., the `FROM` statements in their Dockerfiles). Any given "
"image inherits the complete content of all ancestor images pointing to "
"it."
msgstr ""

#: ../../using/selecting.md:170 ba5ae0294d054a079770e65424d749f9
msgid ""
"[![Image inheritance "
"diagram](../images/inherit.svg)](http://interactive.blockdiag.com/?compression=deflate&src"
"=eJyFzTEPgjAQhuHdX9Gws5sQjGzujsaYKxzmQrlr2msMGv-"
"71K0srO_3XGud9NNA8DSfgzESCFlBSdi0xkvQAKTNugw4QnL6GIU10hvX-"
"Zh7Z24OLLq2SjaxpvP10lX35vCf6pOxELFmUbQiUz4oQhYzMc3gCrRt2cWe_FKosmSjyFHC6OS1AwdQWCtyj7sfh523_BI9hKlQ25YdOFdv5fcH0kiEMA)"
msgstr ""

#: ../../using/selecting.md:173 b8b3e0e17adf437fb6107aca31996017
msgid "### Builds"
msgstr ""

#: ../../using/selecting.md:175 5bee0d0af6114c8aa237f5a04ee55d44
msgid ""
"Pull requests to the `jupyter/docker-stacks` repository trigger builds of"
" all images on GitHub Actions. These images are for testing purposes only"
" and are not saved for use. When pull requests merge to master, all "
"images rebuild on Docker Hub and become available to `docker pull` from "
"Docker Hub."
msgstr ""

#: ../../using/selecting.md:180 276192f9ebc747f09f967760a791ee40
msgid "### Versioning"
msgstr ""

#: ../../using/selecting.md:182 1d7ce792205d4804886ab9d92ca5a6d1
msgid ""
"The `latest` tag in each Docker Hub repository tracks the master branch "
"`HEAD` reference on GitHub. `latest` is a moving target, by definition, "
"and will have backward-incompatible changes regularly."
msgstr ""

#: ../../using/selecting.md:185 da6b448ac42f4b53861ec2c2fa105dc4
msgid ""
"Every image on Docker Hub also receives a 12-character tag which "
"corresponds with the git commit SHA that triggered the image build. You "
"can inspect the state of the `jupyter/docker-stacks` repository for that "
"commit to review the definition of the image (e.g., images with tag "
"7c45ec67c8e7 were built from [https://github.com/jupyter/docker-"
"stacks/tree/7c45ec67c8e7](https://github.com/jupyter/docker-"
"stacks/tree/7c45ec67c8e7))."
msgstr ""

#: ../../using/selecting.md:191 d4cb7c291bcc4e909781e7f7426fd4da
msgid ""
"You must refer to git-SHA image tags when stability and reproducibility "
"are important in your work. (e.g. `FROM jupyter/scipy-"
"notebook:7c45ec67c8e7`, `docker run -it --rm jupyter/scipy-"
"notebook:7c45ec67c8e7`). You should only use `latest` when a one-off "
"container instance is acceptable (e.g., you want to briefly try a new "
"library in a notebook)."
msgstr ""

#: ../../using/selecting.md:197 a2251150e31347c8befff6ddaa1658bf
msgid "## Community Stacks"
msgstr ""

# a448d28293544f72b0e5de024b0a1ef5
#: ../../using/selecting.md:199 6f774547897347529077094caf820ace
msgid ""
"The core stacks are just a tiny sample of what's possible when combining "
"Jupyter with other technologies. We encourage members of the Jupyter "
"community to create their own stacks based on the core images and link "
"them below."
msgstr ""

#: ../../using/selecting.md:203 d54d965036cd47408108a969e459d4cc
msgid ""
"[csharp-notebook is a community Jupyter Docker Stack image. Try C# in "
"Jupyter Notebooks](https://github.com/tlinnet/csharp-notebook). The image"
" includes more than 200 Jupyter Notebooks with example C# code and can "
"readily be tried online via mybinder.org. Click here to launch "
"[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/tlinnet"
"/csharp-notebook/master)."
msgstr ""

#: ../../using/selecting.md:208 044210f3ae8e45379e0debeb635846a1
msgid ""
"[education-notebook is a community Jupyter Docker Stack "
"image](https://github.com/umsi-mads/education-notebook). The image "
"includes nbgrader and RISE on top of the datascience-notebook image. "
"Click here to launch it on "
"[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh"
"/umsi-mads/education-notebook/master)."
msgstr ""

#: ../../using/selecting.md:213 eba805c780f342409504f7738701545d
msgid "**crosscompass/ihaskell-notebook**"
msgstr ""

#: ../../using/selecting.md:215 2bf255e9bdf446d18650ccd1ce7f0586
msgid ""
"[Source on GitHub](https://github.com/jamesdbrock/ihaskell-notebook) | "
"[Dockerfile commit history](https://github.com/jamesdbrock/ihaskell-"
"notebook/commits/master/Dockerfile) | [Docker Hub image "
"tags](https://hub.docker.com/r/crosscompass/ihaskell-notebook/tags)"
msgstr ""

#: ../../using/selecting.md:219 aba3275f84844ffe8e322afb809035b9
msgid ""
"`crosscompass/ihaskell-notebook` is based on "
"[IHaskell](https://github.com/gibiansky/IHaskell). Includes popular "
"packages and example notebooks."
msgstr ""

#: ../../using/selecting.md:222 8392c240abd24d5aba656bd9c0bd1c24
msgid ""
"Try it on "
"[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/jamesdbrock"
"/learn-you-a-haskell-"
"notebook/master?urlpath=lab/tree/ihaskell_examples/ihaskell/IHaskell.ipynb)"
msgstr ""

#: ../../using/selecting.md:225 940587bd2d9742c796cd7d985db16c3b
msgid ""
"[java-notebook is a community Jupyter Docker Stack "
"image](https://github.com/jbindinga/java-notebook). The image includes "
"[IJava](https://github.com/SpencerPark/IJava) kernel on top of the "
"minimal-notebook image. Click here to launch it on "
"[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/jbindinga"
"/java-notebook/master)."
msgstr ""

#: ../../using/selecting.md:230 11fe154abfcf454988ed2a6da9d2d867
msgid ""
"[sage-notebook](https://github.com/sharpTrick/sage-notebook) is a "
"community Jupyter Docker Stack image with the "
"[sagemath](https://sagemath.org) kernel on top of the minimal-notebook "
"image. Click here to launch it on "
"[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/sharpTrick"
"/sage-notebook/master)."
msgstr ""

#: ../../using/selecting.md:235 33dc16e6ac4b4e17b6b3b2912c75dbe5
msgid ""
"[GPU-Jupyter](https://github.com/iot-salzburg/gpu-jupyter/): Leverage "
"Jupyter Notebooks with the power of your NVIDIA GPU and perform GPU "
"calculations using Tensorflow and Pytorch in collaborative notebooks. "
"This is done by generating a Dockerfile, that consists of the "
"**nvidia/cuda** base image, the well-maintained **docker-stacks** that is"
" integrated as submodule and GPU-able libraries like **Tensorflow**, "
"**Keras** and **PyTorch** on top of it."
msgstr ""

#: ../../using/selecting.md:241 7f970e05f88c4b55a41bad20082f2a3f
msgid ""
"[PRP GPU Jupyter repo](https://gitlab.nautilus.optiputer.net/prp/jupyter-"
"stack/-/tree/prp) and "
"[Registry](https://gitlab.nautilus.optiputer.net/prp/jupyter-"
"stack/container_registry): PRP (Pacific Research Platform) maintained "
"registry for jupyter stack based on NVIDIA CUDA-enabled image. Added the "
"PRP image with Pytorch and some other python packages, and GUI Desktop "
"notebook based on https://github.com/jupyterhub/jupyter-remote-desktop-"
"proxy."
msgstr ""

#: ../../using/selecting.md:243 438d22181a1848448c24b4a78b625d56
msgid ""
"[cgspatial-notebook](https://github.com/SCiO-systems/cgspatial-notebook) "
"is a community Jupyter Docker Stack image. The image includes major "
"geospatial Python & R libraries on top of the datascience-notebook image."
" Try it on "
"binder:[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh"
"/SCiO-systems/cgspatial-notebook/master)"
msgstr ""

#: ../../using/selecting.md:248 0a2d7bd5000b4f19a150795798d61051
msgid ""
"[kotlin-notebook](https://github.com/knonm/kotlin-notebook) is a "
"community Jupyter Docker Stack image. The image includes [Kotlin kernel "
"for Jupyter/IPython](https://github.com/Kotlin/kotlin-jupyter) on top of "
"the `base-notebook` image. Try it on Binder: "
"[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/knonm"
"/kotlin-notebook/main)"
msgstr ""

#: ../../using/selecting.md:253 bf37ebbababb495e8e3ad5dde5da5aa2
msgid ""
"See the [contributing guide](../contributing/stacks.md) for information "
"about how to create your own Jupyter Docker Stack."
msgstr ""

#: ../../using/specifics.md:1 6eb122a4d5214cf79cf1c18ab87443a3
msgid "# Image Specifics"
msgstr ""

# 06b0d21a881140a29e17e5b9fa5598ab
#: ../../using/specifics.md:3 ff41fc78829143af8c5fae0ed662a2e1
msgid "This page provides details about features specific to one or more images."
msgstr ""

#: ../../using/specifics.md:5 4f0044d31abd48d0a1eed222551fb8ed
msgid "## Apache Spark™"
msgstr ""

#: ../../using/specifics.md:7 e404a9f872fc4706b18ac80c159ca59e
msgid "### Specific Docker Image Options"
msgstr ""

#: ../../using/specifics.md:9 25e84d79adc24bd086d22cabe8c7e36d
msgid ""
"`-p 4040:4040` - The `jupyter/pyspark-notebook` and `jupyter/all-spark-"
"notebook` images open [SparkUI (Spark Monitoring and Instrumentation "
"UI)](http://spark.apache.org/docs/latest/monitoring.html) at default port"
" `4040`, this option map `4040` port inside docker container to `4040` "
"port on host machine . Note every new spark context that is created is "
"put onto an incrementing port (ie. 4040, 4041, 4042, etc.), and it might "
"be necessary to open multiple ports. For example: `docker run -d -p "
"8888:8888 -p 4040:4040 -p 4041:4041 jupyter/pyspark-notebook`."
msgstr ""

#: ../../using/specifics.md:11 c0e92fe91ae843f59948e3b61c77a924
msgid "### Build an Image with a Different Version of Spark"
msgstr ""

#: ../../using/specifics.md:13 f56c65a8b6c24d6c96f04e025d079673
msgid ""
"You can build a `pyspark-notebook` image (and also the downstream `all-"
"spark-notebook` image) with a different version of Spark by overriding "
"the default value of the following arguments at build time."
msgstr ""

#: ../../using/specifics.md:15 379949d1a9ff4de1b1f149ba1aad6a4f
msgid ""
"Spark distribution is defined by the combination of the Spark and the "
"Hadoop version and verified by the package checksum, see [Download Apache"
" Spark](https://spark.apache.org/downloads.html) and the [archive "
"repo](https://archive.apache.org/dist/spark/) for more information. * "
"`spark_version`: The Spark version to install (`3.0.0`). * "
"`hadoop_version`: The Hadoop version (`3.2`). * `spark_checksum`: The "
"package checksum (`BFE4540...`)."
msgstr ""

#: ../../using/specifics.md:19 93828386335d42df9fc7299ab1e6eaed
msgid ""
"Spark can run with different OpenJDK versions. * `openjdk_version`: The "
"version of (JRE headless) the OpenJDK distribution (`11`), see [Ubuntu "
"packages](https://packages.ubuntu.com/search?keywords=openjdk)."
msgstr ""

#: ../../using/specifics.md:22 e2d6a2b5bb044499b18c9cf5988956b1
msgid ""
"For example here is how to build a `pyspark-notebook` image with Spark "
"`2.4.6`, Hadoop `2.7` and OpenJDK `8`."
msgstr ""

#: ../../using/specifics.md:24 23a5958675304657aaa60fba6862bf91
msgid ""
"```bash # From the root of the project # Build the image with different "
"arguments docker build --rm --force-rm \\"
msgstr ""

#: ../../using/specifics.md:28 94861d3d7af34c3e92f0143d6871dda6
msgid ""
"-t jupyter/pyspark-notebook:spark-2.4.7 ./pyspark-notebook \\ --build-arg"
" spark_version=2.4.7 \\ --build-arg hadoop_version=2.7 \\ --build-arg "
"spark_checksum=0F5455672045F6110B030CE343C049855B7BA86C0ECB5E39A075FF9D093C7F648DA55DED12E72FFE65D84C32DCD5418A6D764F2D6295A3F894A4286CC80EF478"
" \\ --build-arg openjdk_version=8"
msgstr ""

#: ../../using/specifics.md:34 b42e4a47011b4be2987d806b05dd98f7
msgid ""
"# Check the newly built image docker run -it --rm jupyter/pyspark-"
"notebook:spark-2.4.7 pyspark --version"
msgstr ""

#: ../../using/specifics.md:37 d8398670e78b4c539ac5733b7454bf99
msgid ""
"# Welcome to #       ____              __ #      / __/__  ___ _____/ /__ "
"#     _\\ \\/ _ \\/ _ `/ __/  '_/ #    /___/ .__/\\_,_/_/ /_/\\_\\   "
"version 2.4.7 #       /_/ # # Using Scala version 2.11.12, OpenJDK 64-Bit"
" Server VM, 1.8.0_275 ```"
msgstr ""

#: ../../using/specifics.md:47 f3e5461c94e6408da41c6a2b07a2c28d
msgid "### Usage Examples"
msgstr ""

#: ../../using/specifics.md:49 f976080fe39b4b06803a85fc20b3adab
msgid ""
"The `jupyter/pyspark-notebook` and `jupyter/all-spark-notebook` images "
"support the use of [Apache Spark](https://spark.apache.org/) in Python, "
"R, and Scala notebooks. The following sections provide some examples of "
"how to get started using them."
msgstr ""

#: ../../using/specifics.md:51 c4c61293755140bb8da8ec711e9762c6
msgid "#### Using Spark Local Mode"
msgstr ""

#: ../../using/specifics.md:53 7af7f30dcd8a4b17820995e8098a2b02
msgid ""
"Spark **local mode** is useful for experimentation on small data when you"
" do not have a Spark cluster available."
msgstr ""

#: ../../using/specifics.md:55 d22e574af8064d5f82e29bc44dc65e07
msgid "##### Local Mode in Python"
msgstr ""

#: ../../using/specifics.md:57 8199222226794abb95925c2530fe809a
msgid "In a Python notebook."
msgstr ""

#: ../../using/specifics.md:59 ../../using/specifics.md:148
#: 2ab7027b7f9c4c67bc0b55a0a606a10f df85ff6ef4fc437c995eade5b0ee3310
msgid "```python from pyspark.sql import SparkSession"
msgstr ""

#: ../../using/specifics.md:62 3b8c5d74652740bba406a9c4a5f2fa57
msgid ""
"# Spark session & context spark = "
"SparkSession.builder.master('local').getOrCreate() sc = "
"spark.sparkContext"
msgstr ""

#: ../../using/specifics.md:66 ../../using/specifics.md:155
#: 7c875e0bb8cd4d3e8c3784a00dd92127 a58e9901428845a3b04eed58f6035661
msgid ""
"# Sum of the first 100 whole numbers rdd = sc.parallelize(range(100 + 1))"
" rdd.sum() # 5050 ```"
msgstr ""

#: ../../using/specifics.md:72 f16fcf769a8e40179cf45e79962b2d51
msgid "##### Local Mode in R"
msgstr ""

#: ../../using/specifics.md:74 ../../using/specifics.md:163
#: 6198a6a7ca4e46f69fd35ba64267a42b b8539fbd6a0e44a689b7705f4c81874b
msgid "In a R notebook with [SparkR][sparkr]."
msgstr ""

#: ../../using/specifics.md:76 ../../using/specifics.md:165
#: 7382866cff6e4b07a7030afac696e341 d8da924eec9c402dbe20d278a86090c3
msgid "```R library(SparkR)"
msgstr ""

#: ../../using/specifics.md:79 f952949b15a04a8c8f5cf47bfabc8090
msgid "# Spark session & context sc <- sparkR.session(\"local\")"
msgstr ""

#: ../../using/specifics.md:82 ../../using/specifics.md:171
#: 0172cd0c8fb649bda6fb5e90db7e62ee dcf6b983b36a4eebbfbc5c3dcd58bec9
msgid ""
"# Sum of the first 100 whole numbers sdf <- createDataFrame(list(1:100)) "
"dapplyCollect(sdf,"
msgstr ""

#: ../../using/specifics.md:85 ../../using/specifics.md:174
#: 3c9abff17a3c41bf9c5db51c5f6da29d d9bbddf628814b70a7f97acd7fc3faa5
msgid "function(x) { x <- sum(x)}"
msgstr ""

#: ../../using/specifics.md:87 ../../using/specifics.md:176
#: 42ee6d3db1bc46b4b430355b758ebfd2 5faf55b208b449d587a191837bf7d715
msgid ")"
msgstr ""

#: ../../using/specifics.md:88 ../../using/specifics.md:107
#: ../../using/specifics.md:177 ../../using/specifics.md:195
#: 2fb4482ce8194b06973f6da2d5f4926a 661e604b1a2d419ca7e2d2e396cd160e
#: 66d5fd214c864f72b2047306b4150eda fd4523853d4b411980fc3e027eacb27b
msgid "# 5050 ```"
msgstr ""

#: ../../using/specifics.md:91 ../../using/specifics.md:180
#: 0b9ec7967a86414c9d0c35724282a468 269577dc0d9840699c65e55558e944c3
msgid "In a R notebook with [sparklyr][sparklyr]."
msgstr ""

#: ../../using/specifics.md:93 ../../using/specifics.md:182
#: 03eb26a538fc48a9a92334bc4cfa83f0 73650322bf434413b0e2027bc5b0ff70
msgid "```R library(sparklyr)"
msgstr ""

#: ../../using/specifics.md:96 1106d0b97b034ae4b46acf256633b7f4
msgid ""
"# Spark configuration conf <- spark_config() # Set the catalog "
"implementation in-memory conf$spark.sql.catalogImplementation <- \"in-"
"memory\""
msgstr ""

#: ../../using/specifics.md:101 26e27224a0cc4574ae68147f2674180e
msgid ""
"# Spark session & context sc <- spark_connect(master = \"local\", config "
"= conf)"
msgstr ""

#: ../../using/specifics.md:104 ../../using/specifics.md:192
#: 1fe8d7348a294c92aba20cd977f9da3b 4fe881629a96464fa71e7f93ffb25106
msgid "# Sum of the first 100 whole numbers sdf_len(sc, 100, repartition = 1) %>%"
msgstr ""

#: ../../using/specifics.md:106 ../../using/specifics.md:194
#: 18bb58ee90e24cb78d334965f2b6dfa0 fa8d2ee8a21b45048572d8815a10dc84
msgid "spark_apply(function(e) sum(e))"
msgstr ""

#: ../../using/specifics.md:110 8521d472c22f4b2f9e5b5e9b6e6cee45
msgid "##### Local Mode in Scala"
msgstr ""

#: ../../using/specifics.md:112 ../../using/specifics.md:200
#: 8fd042e5b86245f3a3287f3697802c35 a3d289039d8a42f5b7cc7c576e8acc4a
#, python-format
msgid ""
"Spylon kernel instantiates a `SparkContext` for you in variable `sc` "
"after you configure Spark options in a `%%init_spark` magic cell."
msgstr ""

#: ../../using/specifics.md:115 8dec507df4364fbfa8465d7ec32d8027
#, python-format
msgid ""
"```python %%init_spark # Configure Spark to use a local master "
"launcher.master = \"local\" ```"
msgstr ""

#: ../../using/specifics.md:121 ../../using/specifics.md:209
#: 0d6626148bb54b64b9ded8f85abaa961 3ff7e76d998648ba98869117818c4ff8
msgid ""
"```scala // Sum of the first 100 whole numbers val rdd = sc.parallelize(0"
" to 100) rdd.sum() // 5050 ```"
msgstr ""

#: ../../using/specifics.md:128 36ca61ed55254d65a917c6a20466067b
msgid "#### Connecting to a Spark Cluster in Standalone Mode"
msgstr ""

#: ../../using/specifics.md:130 0c1c03a429194e6cb161be125a865079
msgid ""
"Connection to Spark Cluster on **[Standalone "
"Mode](https://spark.apache.org/docs/latest/spark-standalone.html)** "
"requires the following set of steps:"
msgstr ""

# 2c728588b6df4753a0c08f969364a79a
#: ../../using/specifics.md:132 3e034f21f0b04905a2f359451a868566
msgid ""
"Verify that the docker image (check the Dockerfile) and the Spark Cluster"
" which is being deployed, run the same version of Spark."
msgstr ""

#: ../../using/specifics.md:134 37307ff27de840858887723053b7a03b
msgid ""
"[Deploy Spark in Standalone Mode](http://spark.apache.org/docs/latest"
"/spark-standalone.html)."
msgstr ""

#: ../../using/specifics.md:135 90e9e0194b874789ae44852cd6819e7d
msgid ""
"Run the Docker container with `--net=host` in a location that is network "
"addressable by all of your Spark workers. (This is a [Spark networking "
"requirement](http://spark.apache.org/docs/latest/cluster-"
"overview.html#components).) * NOTE: When using `--net=host`, you must "
"also use the flags `--pid=host -e TINI_SUBREAPER=true`. See "
"<https://github.com/jupyter/docker-stacks/issues/64> for details."
msgstr ""

#: ../../using/specifics.md:141 b8385cf51e3f436691c8545b4f8aacff
msgid ""
"**Note**: In the following examples we are using the Spark master URL "
"`spark://master:7077` that shall be replaced by the URL of the Spark "
"master."
msgstr ""

#: ../../using/specifics.md:143 80c2545d794c4a37a128b963f7a7e046
msgid "##### Standalone Mode in Python"
msgstr ""

#: ../../using/specifics.md:145 1e0438aa18cd4ff7930ac99a13537800
msgid ""
"The **same Python version** need to be used on the notebook (where the "
"driver is located) and on the Spark workers. The python version used at "
"driver and worker side can be adjusted by setting the environment "
"variables `PYSPARK_PYTHON` and / or `PYSPARK_DRIVER_PYTHON`, see [Spark "
"Configuration][spark-conf] for more information."
msgstr ""

#: ../../using/specifics.md:151 e11920b486ba429a9fbca4ac0bf84445
msgid ""
"# Spark session & context spark = "
"SparkSession.builder.master('spark://master:7077').getOrCreate() sc = "
"spark.sparkContext"
msgstr ""

#: ../../using/specifics.md:161 c91980fee2094b0aa28d625a695030a5
msgid "##### Standalone Mode in R"
msgstr ""

#: ../../using/specifics.md:168 e3d6bcab9306487bbcb22bdac1d5bd1b
msgid "# Spark session & context sc <- sparkR.session(\"spark://master:7077\")"
msgstr ""

#: ../../using/specifics.md:185 426220b6dcbe4284b09ac5390511809c
msgid ""
"# Spark session & context # Spark configuration conf <- spark_config() # "
"Set the catalog implementation in-memory "
"conf$spark.sql.catalogImplementation <- \"in-memory\" sc <- "
"spark_connect(master = \"spark://master:7077\", config = conf)"
msgstr ""

#: ../../using/specifics.md:198 25624066c32b4d7c9fcf4285bba7ffef
msgid "##### Standalone Mode in Scala"
msgstr ""

#: ../../using/specifics.md:203 5209072787a0410c921630bd548d5958
#, python-format
msgid ""
"```python %%init_spark # Configure Spark to use a local master "
"launcher.master = \"spark://master:7077\" ```"
msgstr ""

#: ../../using/specifics.md:216 faed98313c4846a2b79d3e28b67e04fc
msgid "## Tensorflow"
msgstr ""

#: ../../using/specifics.md:218 a148742355984de4a71e1c76bf738f85
msgid ""
"The `jupyter/tensorflow-notebook` image supports the use of "
"[Tensorflow](https://www.tensorflow.org/) in single machine or "
"distributed mode."
msgstr ""

#: ../../using/specifics.md:221 5ffac465540e4ac681cad950435b4ca3
msgid "### Single Machine Mode"
msgstr ""

#: ../../using/specifics.md:223 ../../using/specifics.md:237
#: 57e9cb29ee124697ad24506d8bc02299 9969f1dca9734d77b3c45e47b2d596fd
msgid "```python import tensorflow as tf"
msgstr ""

#: ../../using/specifics.md:226 ed8364ec26ca4feda923cdb47854d347
msgid "hello = tf.Variable('Hello World!')"
msgstr ""

#: ../../using/specifics.md:228 e749a042229f403b937c6169ab7e1402
msgid "sess = tf.Session() init = tf.global_variables_initializer()"
msgstr ""

#: ../../using/specifics.md:231 ../../using/specifics.md:246
#: 6bd758aeeed04500980a292759c2c77b fe3fac1c4ae6484eb554b10bd63f28c9
msgid "sess.run(init) sess.run(hello) ```"
msgstr ""

#: ../../using/specifics.md:235 35382d3d15454acaa30e2970425e8b23
msgid "### Distributed Mode"
msgstr ""

#: ../../using/specifics.md:240 8fd28a1b5d01421b9c09e50b03b257d3
msgid "hello = tf.Variable('Hello Distributed World!')"
msgstr ""

#: ../../using/specifics.md:242 070ed8b2a066439e95113812e46589cd
msgid ""
"server = tf.train.Server.create_local_server() sess = "
"tf.Session(server.target) init = tf.global_variables_initializer()"
msgstr ""

#: ../../using/specifics.md:250 0e3c4b2adc914f05ac3184686a6004b8
msgid ""
"[sparkr]: https://spark.apache.org/docs/latest/sparkr.html [sparklyr]: "
"https://spark.rstudio.com/ [spark-conf]: "
"https://spark.apache.org/docs/latest/configuration.html"
msgstr ""

# 5e06096348924f51881d05f984e91381
#~ msgid "This list only has 2 examples. You can be the next!"
#~ msgstr ""

# 7ed4a7919dfd446c817c64a7e420e95e
#~ msgid ""
#~ "To use a requirements.txt file, first"
#~ " create your requirements.txt file with "
#~ "the listing of packages desired.  Next,"
#~ " create a new Dockerfile like the "
#~ "one shown below."
#~ msgstr ""

# 56f2354437c74650a70bd154647eed26
#~ msgid ""
#~ "Here is a quick example NGINX "
#~ "configuration to get started.  You'll "
#~ "need a server, a .crt and .key "
#~ "file for your server, and docker &"
#~ " docker-compose installed.  Then just "
#~ "download the files at that gist "
#~ "and run docker-compose up -d to"
#~ " test it out.  Customize the "
#~ "nginx.conf file to set the desired "
#~ "paths and add other services."
#~ msgstr ""

#~ msgid ""
#~ "You must refer to git-SHA image"
#~ " tags when stability and reproducibility"
#~ " are important in your work. (e.g."
#~ " FROM jupyter/scipy-notebook:7c45ec67c8e7, docker"
#~ " run -it --rm jupyter/scipy-"
#~ "notebook:7c45ec67c8e7). You should only use"
#~ " latest when a one-off container "
#~ "instance is acceptable (e.g., you want"
#~ " to briefly try a new library "
#~ "in a notebook)."
#~ msgstr ""

# 577f93f6511a4b17afcef782def7f802
#~ msgid "ipywidgets for interactive visualizations in Python notebooks"
#~ msgstr ""

#~ msgid ""
#~ "You must refer to git-SHA image"
#~ " tags when stability and reproducibility"
#~ " are important in your work. (e.g."
#~ " FROM jupyter/scipy-notebook:7c45ec67c8e7, docker"
#~ " run  -it --rm jupyter/scipy-"
#~ "notebook:7c45ec67c8e7). You should only use"
#~ " latest when a one-off container "
#~ "instance is acceptable (e.g., you want"
#~ " to briefly try a new library "
#~ "in a notebook)."
#~ msgstr ""

# 909f17eb57bc4e4e8df8216423d9c008
#~ msgid ""
#~ "You should only enable sudo if you"
#~ " trust the user and/or if the "
#~ "container is running on an isolated "
#~ "host."
#~ msgstr ""

# 7c56c3891bd94336b21fc82d5aeab6ae
#~ msgid "Common Features"
#~ msgstr ""

# bf4e4ace24d144538edc1d9a2605cfef
#~ msgid ""
#~ "A container launched from any Jupyter"
#~ " Docker Stacks image runs a Jupyter"
#~ " Notebook server by default. The "
#~ "container does so by executing a "
#~ "start-notebook.sh script. This script "
#~ "configures the internal container environment"
#~ " and then runs jupyter notebook, "
#~ "passing it any command line arguments"
#~ " received."
#~ msgstr ""

# 056d2f8a9a4343668131dfb9de71838a
#~ msgid "Notebook Options"
#~ msgstr ""

# d1c32336e1f545d496f7a411fb18cb4e
#~ msgid ""
#~ "You can pass Jupyter command line "
#~ "options to the start-notebook.sh script"
#~ " when launching the container. For "
#~ "example, to secure the Notebook server"
#~ " with a custom password hashed using"
#~ " IPython.lib.passwd() instead of the "
#~ "default token, you can run the "
#~ "following:"
#~ msgstr ""

# 58ad38b4300449da805bc67e73be5fd0
#~ msgid "Docker Options"
#~ msgstr ""

# 0118197966504e3ab1c03a0c49e68c97
#~ msgid ""
#~ "You may instruct the start-notebook.sh"
#~ " script to customize the container "
#~ "environment before launching the notebook "
#~ "server. You do so by passing "
#~ "arguments to the docker run command."
#~ msgstr ""

# 391efc925af248fa9bfa2220bdf0730b
#~ msgid ""
#~ "-e NB_USER=jovyan - Instructs the "
#~ "startup script to change the default "
#~ "container username from jovyan to the"
#~ " provided value. Causes the script to"
#~ " rename the jovyan user home folder."
#~ " For this option to take effect, "
#~ "you must run the container with "
#~ "--user root and set the working "
#~ "directory -w /home/$NB_USER. This feature "
#~ "is useful when mounting host volumes "
#~ "with specific home folder."
#~ msgstr ""

# 97929e34ea254dd289e235276b72068f
#~ msgid ""
#~ "-e NB_UID=1000 - Instructs the startup"
#~ " script to switch the numeric user"
#~ " ID of $NB_USER to the given "
#~ "value. This feature is useful when "
#~ "mounting host volumes with specific "
#~ "owner permissions. For this option to"
#~ " take effect, you must run the "
#~ "container with --user root. (The startup"
#~ " script will su $NB_USER after "
#~ "adjusting the user ID.) You might "
#~ "consider using modern Docker options "
#~ "--user and --group-add instead. See "
#~ "the last bullet below for details."
#~ msgstr ""

# 71cac0c045d342008ca80ce23ef32431
#~ msgid ""
#~ "-e NB_GID=100 - Instructs the startup"
#~ " script to change the primary group"
#~ " of$NB_USER to $NB_GID (the new group"
#~ " is added with a name of "
#~ "$NB_GROUP if it is defined, otherwise"
#~ " the group is named $NB_USER).  This"
#~ " feature is useful when mounting host"
#~ " volumes with specific group permissions."
#~ " For this option to take effect, "
#~ "you must run the container with "
#~ "--user root. (The startup script will"
#~ " su $NB_USER after adjusting the "
#~ "group ID.) You might consider using "
#~ "modern Docker options --user and "
#~ "--group-add instead. See the last "
#~ "bullet below for details.  The user "
#~ "is added to supplemental group users "
#~ "(gid 100) in order to allow write"
#~ " access to the home directory and "
#~ "/opt/conda.  If you override the "
#~ "user/group logic, ensure the user stays"
#~ " in group users if you want "
#~ "them to be able to modify files"
#~ " in the image."
#~ msgstr ""

# 5ca13bdafc214f8b997ca2752592f1be
#~ msgid ""
#~ "-e NB_GROUP=<name> - The name used "
#~ "for $NB_GID, which defaults to $NB_USER."
#~ "  This is only used if $NB_GID "
#~ "is specified and completely optional: "
#~ "there is only cosmetic effect."
#~ msgstr ""

# 4d57d0bd85ae417687747831670ec35f
#~ msgid ""
#~ "-e NB_UMASK=<umask> - Configures Jupyter "
#~ "to use a different umask value "
#~ "from default, i.e. 022. For example, "
#~ "if setting umask to 002, new files"
#~ " will be readable and writable by "
#~ "group members instead of just writable"
#~ " by the owner. Wikipedia has a "
#~ "good article about umask. Feel free "
#~ "to read it in order to choose "
#~ "the value that better fits your "
#~ "needs. Default value should fit most "
#~ "situations. Note that NB_UMASK when set"
#~ " only applies to the Jupyter process"
#~ " itself - you cannot use it to"
#~ " set a umask for additional files "
#~ "created during run-hooks e.g. via "
#~ "pip or conda - if you need "
#~ "to set a umask for these you "
#~ "must set umask for each command."
#~ msgstr ""

# 580637e7f00d4a36b69ce3f6ec43370e
#~ msgid ""
#~ "-e CHOWN_HOME=yes - Instructs the "
#~ "startup script to change the $NB_USER"
#~ " home directory owner and group to"
#~ " the current value of $NB_UID and "
#~ "$NB_GID. This change will take effect"
#~ " even if the user home directory "
#~ "is mounted from the host using -v"
#~ " as described below. The change is"
#~ " not applied recursively by default. "
#~ "You can change modify the chown "
#~ "behavior by setting CHOWN_HOME_OPTS (e.g., "
#~ "-e CHOWN_HOME_OPTS='-R')."
#~ msgstr ""

# 42bbfaf32b43482ba99263a74b383ac3
#~ msgid ""
#~ "-e CHOWN_EXTRA=\"<some dir>,<some other dir>\""
#~ " - Instructs the startup script to"
#~ " change the owner and group of "
#~ "each comma-separated container directory "
#~ "to the current value of $NB_UID "
#~ "and $NB_GID. The change is not "
#~ "applied recursively by default. You can"
#~ " change modify the chown behavior by"
#~ " setting CHOWN_EXTRA_OPTS (e.g., -e "
#~ "CHOWN_EXTRA_OPTS='-R')."
#~ msgstr ""

# 399a6318e3724410a4dcc93cc9d8736d
#~ msgid ""
#~ "-e GRANT_SUDO=yes - Instructs the "
#~ "startup script to grant the NB_USER "
#~ "user passwordless sudo capability. You "
#~ "do not need this option to allow"
#~ " the user to conda or pip "
#~ "install additional packages. This option "
#~ "is useful, however, when you wish "
#~ "to give $NB_USER the ability to "
#~ "install OS packages with apt or "
#~ "modify other root-owned files in "
#~ "the container. For this option to "
#~ "take effect, you must run the "
#~ "container with --user root. (The "
#~ "start-notebook.sh script will su $NB_USER"
#~ " after adding $NB_USER to sudoers.) "
#~ "You should only enable sudo if you"
#~ " trust the user or if the "
#~ "container is running on an isolated "
#~ "host."
#~ msgstr ""

# 3c6485fef5d44f72b4693c1a3d1ec35c
#~ msgid ""
#~ "-e GEN_CERT=yes - Instructs the startup"
#~ " script to generates a self-signed"
#~ " SSL certificate and configure Jupyter "
#~ "Notebook to use it to accept "
#~ "encrypted HTTPS connections."
#~ msgstr ""

# efe931ecaeac4348a6f0112a65371306
#~ msgid ""
#~ "-e JUPYTER_ENABLE_LAB=yes - Instructs the "
#~ "startup script to run jupyter lab "
#~ "instead of the default jupyter notebook"
#~ " command. Useful in container orchestration"
#~ " environments where setting environment "
#~ "variables is easier than change command"
#~ " line parameters."
#~ msgstr ""

# fe40b3a059e54a53a7a5fde86441ae72
#~ msgid ""
#~ "-e RESTARTABLE=yes - Runs Jupyter in "
#~ "a loop so that quitting Jupyter "
#~ "does not cause the container to "
#~ "exit.  This may be useful when you"
#~ " need to install extensions that "
#~ "require restarting Jupyter."
#~ msgstr ""

# bb82e70358e7452d86eb1b8e971fbf27
#~ msgid ""
#~ "-v /some/host/folder/for/work:/home/jovyan/work - "
#~ "Mounts a host machine directory as "
#~ "folder in the container. Useful when "
#~ "you want to preserve notebooks and "
#~ "other work even after the container "
#~ "is destroyed. You must grant the "
#~ "within-container notebook user or group "
#~ "(NB_UID or NB_GID) write access to "
#~ "the host directory (e.g., sudo chown "
#~ "1000 /some/host/folder/for/work)."
#~ msgstr ""

# 403f8e6101534bc0951bf5bb0b03c5a0
#~ msgid ""
#~ "--user 5000 --group-add users - "
#~ "Launches the container with a specific"
#~ " user ID and adds that user to"
#~ " the users group so that it can"
#~ " modify files in the default home "
#~ "directory and /opt/conda. You can use"
#~ " these arguments as alternatives to "
#~ "setting $NB_UID and $NB_GID."
#~ msgstr ""

# 565fbbe944ed4e68a5e202eaf07d1402
#~ msgid "Startup Hooks"
#~ msgstr ""

# 70f6f3501e1b43d3a95e200c39eef8d2
#~ msgid ""
#~ "You can further customize the container"
#~ " environment by adding shell scripts "
#~ "(*.sh) to be sourced or executables "
#~ "(chmod +x) to be run to the "
#~ "paths below:"
#~ msgstr ""

# bdc8d9262aea4329b09bac1deb92d6da
#~ msgid ""
#~ "/usr/local/bin/start-notebook.d/ - handled "
#~ "before any of the standard options "
#~ "noted above are applied"
#~ msgstr ""

# 786fba9678e24e3ba5ded6536dc0492a
#~ msgid ""
#~ "/usr/local/bin/before-notebook.d/ - handled "
#~ "after all of the standard options "
#~ "noted above are applied and just "
#~ "before the notebook server launches"
#~ msgstr ""

# 5903b6a921cb42a9a8b6db0e9592769c
#~ msgid ""
#~ "See the run-hooks function in the"
#~ " jupyter/base-notebook start.sh script for"
#~ " execution details."
#~ msgstr ""

# ffb01f3597d1453bb0299e9a4a888757
#~ msgid "SSL Certificates"
#~ msgstr ""

# 7b1a34debd094e02930aa7197377b691
#~ msgid ""
#~ "You may mount SSL key and "
#~ "certificate files into a container and"
#~ " configure Jupyter Notebook to use "
#~ "them to accept HTTPS connections. For"
#~ " example, to mount a host folder "
#~ "containing a notebook.key and notebook.crt "
#~ "and use them, you might run the"
#~ " following:"
#~ msgstr ""

# 11ef89b3d17b4bcf827e73a7ebb13756
#~ msgid ""
#~ "The docker-stacks/examples for information "
#~ "about how to use Let's Encrypt "
#~ "certificates when you run these stacks"
#~ " on a publicly visible domain."
#~ msgstr ""

# 4a42ccc5b624431bbacdc8c1d5624fb4
#~ msgid ""
#~ "The jupyter_notebook_config.py file for how"
#~ " this Docker image generates a "
#~ "self-signed certificate."
#~ msgstr ""

# 95d9c3081fa34def82e309c53ef2147b
#~ msgid ""
#~ "The Jupyter Notebook documentation for "
#~ "best practices about securing a public"
#~ " notebook server in general."
#~ msgstr ""

# 9950b2e426414111ad46c6ba1e9d29bb
#~ msgid "Alternative Commands"
#~ msgstr ""

# 2e90717352804ebd8086eef378fa411d
#~ msgid "start.sh"
#~ msgstr ""

# 11637ea03062425e94964f2c70ed8676
#~ msgid ""
#~ "The start-notebook.sh script actually "
#~ "inherits most of its option handling "
#~ "capability from a more generic start.sh"
#~ " script. The start.sh script supports "
#~ "all of the features described above, "
#~ "but allows you to specify an "
#~ "arbitrary command to execute. For "
#~ "example, to run the text-based "
#~ "ipython console in a container, do "
#~ "the following:"
#~ msgstr ""

# 3d92501fb3b940b385ee986095610391
#~ msgid ""
#~ "This script is particularly useful when"
#~ " you derive a new Dockerfile from "
#~ "this image and install additional "
#~ "Jupyter applications with subcommands like "
#~ "jupyter console, jupyter kernelgateway, etc."
#~ msgstr ""

# ff1b1af310d54eedb852dc5eff7a4f7e
#~ msgid "Others"
#~ msgstr ""

# 127ffe0a552b4dafaa77d173883350d7
#~ msgid ""
#~ "You can bypass the provided scripts "
#~ "and specify an arbitrary start command."
#~ " If you do, keep in mind that"
#~ " features supported by the start.sh "
#~ "script and its kin will not "
#~ "function (e.g., GRANT_SUDO)."
#~ msgstr ""

# 1d8bc4b15c3044b3932e0df72dd694a7
#~ msgid "Conda Environments"
#~ msgstr ""

# 97935ba423ed4a8787f9895f00015e4b
#~ msgid ""
#~ "The default Python 3.x Conda environment"
#~ " resides in /opt/conda. The /opt/conda/bin"
#~ " directory is part of the default "
#~ "jovyan user's $PATH. That directory is"
#~ " also whitelisted for use in sudo "
#~ "commands by the start.sh script."
#~ msgstr ""

# a8fe459cc9ff43b3b2f31efd4587f145
#~ msgid ""
#~ "The jovyan user has full read/write "
#~ "access to the /opt/conda directory. You"
#~ " can use either conda or pip to"
#~ " install new packages without any "
#~ "additional permissions."
#~ msgstr ""

# 36939901b3744e3fb67d2bae58ae8e25
#~ msgid "Contributed Recipes"
#~ msgstr ""

# 8bc65b7f51f4442c95ea0dec5b4b2704
#~ msgid ""
#~ "Users sometimes share interesting ways "
#~ "of using the Jupyter Docker Stacks. "
#~ "We encourage users to contribute these"
#~ " recipes to the documentation in case"
#~ " they prove useful to other members"
#~ " of the community by submitting a "
#~ "pull request to docs/using/recipes.md. The "
#~ "sections below capture this knowledge."
#~ msgstr ""

# 7447af86f4f3438ba413a7e9cc9764e5
#~ msgid "Using sudo within a container"
#~ msgstr ""

# ed8292c31667424184fe7515a30f79cd
#~ msgid ""
#~ "Password authentication is disabled for "
#~ "the NB_USER (e.g., jovyan). This choice"
#~ " was made to avoid distributing "
#~ "images with a weak default password "
#~ "that users ~might~ will forget to "
#~ "change before running a container on "
#~ "a publicly accessible host."
#~ msgstr ""

# d22ae301bebb4857b866359ddbfb7e53
#~ msgid ""
#~ "You can grant the within-container "
#~ "NB_USER passwordless sudo access by "
#~ "adding -e GRANT_SUDO=yes and --user root"
#~ " to your Docker command line or "
#~ "appropriate container orchestrator config."
#~ msgstr ""

#~ msgid ""
#~ "You should only enable sudo if you"
#~ " trust the user and/or if the "
#~ "container is running on an isolated "
#~ "host. See Docker security documentation "
#~ "for more information about running "
#~ "containers as root."
#~ msgstr ""

# 5b38bd48b58242788cc8b581b575241a
#~ msgid "Using pip install or conda install in a Child Docker image"
#~ msgstr ""

# c35347a79a2e4a7faffe139767808965
#~ msgid ""
#~ "To use a requirements.txt file, first"
#~ " create your requirements.txt file with "
#~ "the listing of packages desired. Next,"
#~ " create a new Dockerfile like the "
#~ "one shown below."
#~ msgstr ""

# fd2320ac3001480992ab2dd80285467b
#~ msgid "Ref: docker-stacks/commit/79169618d571506304934a7b29039085e77db78c"
#~ msgstr ""

# 179407610520450ea0e4b566eac8ec96
#~ msgid "Add a Python 2.x environment"
#~ msgstr ""

# 19bf98219e344b80b68fbf7f3aa68ec6
#~ msgid ""
#~ "Python 2.x was removed from all "
#~ "images on August 10th, 2017, starting"
#~ " in tag cc9feab481f7. You can add "
#~ "a Python 2.x environment by defining "
#~ "your own Dockerfile inheriting from one"
#~ " of the images like so:"
#~ msgstr ""

# be4f7d9b615d490c87cc6393ed0fabf2
#~ msgid "Ref: https://github.com/jupyter/docker-stacks/issues/440"
#~ msgstr ""

#~ msgid "Add a Python 3.x environment"
#~ msgstr ""

#~ msgid ""
#~ "The default version of Python that "
#~ "ships with conda/ubuntu may not be "
#~ "the version you want. To add a "
#~ "conda environment with a different "
#~ "version and make it accessible to "
#~ "Jupyter, the instructions are very "
#~ "similar to Python 2.x but are "
#~ "slightly simpler (no need to switch "
#~ "to root):"
#~ msgstr ""

# 747e87a9067b4870bad5aa335ab39f7d
#~ msgid "Run JupyterLab"
#~ msgstr ""

# e062399bbaee4f1eb3ab48dcc60289b8
#~ msgid ""
#~ "JupyterLab is preinstalled as a notebook"
#~ " extension starting in tag c33a7dc0eece."
#~ msgstr ""

# 7c0f192d197143698dd371fff8fa3ceb
#~ msgid ""
#~ "Run jupyterlab using a command such "
#~ "as docker run -it --rm -p "
#~ "8888:8888 jupyter/datascience-notebook start.sh "
#~ "jupyter lab"
#~ msgstr ""

#~ msgid "Dask JupyterLab Extension"
#~ msgstr ""

#~ msgid ""
#~ "Dask JupyterLab Extension provides a "
#~ "JupyterLab extension to manage Dask "
#~ "clusters, as well as embed Dask's "
#~ "dashboard plots directly into JupyterLab "
#~ "panes. Create the Dockerfile as:"
#~ msgstr ""

#~ msgid "And build the image as:"
#~ msgstr ""

#~ msgid "Once built, run using the command:"
#~ msgstr ""

#~ msgid "Ref: https://github.com/jupyter/docker-stacks/issues/999"
#~ msgstr ""

# e7842069e6ce432b9f1a12271e0ddc24
#~ msgid "Let's Encrypt a Notebook server"
#~ msgstr ""

# 4c00785b93734066b349b42b23c312af
#~ msgid ""
#~ "See the README for the simple "
#~ "automation here https://github.com/jupyter/docker-"
#~ "stacks/tree/master/examples/make-deploy which "
#~ "includes steps for requesting and "
#~ "renewing a Let's Encrypt certificate."
#~ msgstr ""

# c386f5913a78475487e9f12c76af9032
#~ msgid "Ref: https://github.com/jupyter/docker-stacks/issues/78"
#~ msgstr ""

# dd297c8f73a44707bf02064434a50a47
#~ msgid "Slideshows with Jupyter and RISE"
#~ msgstr ""

# a1834343ae3045ea962e0efc80f69443
#~ msgid ""
#~ "RISE allows via extension to create "
#~ "live slideshows of your notebooks, with"
#~ " no conversion, adding javascript "
#~ "Reveal.js:"
#~ msgstr ""

# 6e0c67b18d3546a9ab024c5663aa8f90
#~ msgid "Credit: Paolo D. based on docker-stacks/issues/43"
#~ msgstr ""

# 6bf66d68f2e5439b8403c0dd8ded40c5
#~ msgid "xgboost"
#~ msgstr ""

# a9bc4b88bd3d4bc1a7832f31677c298a
#~ msgid "Running behind a nginx proxy"
#~ msgstr ""

# dd58dbc3b08744a0b9415448d3bdbba6
#~ msgid ""
#~ "you would prefer to access the "
#~ "notebook at a server URL with a"
#~ " path (https://example.com/jupyter) rather than"
#~ " a port (https://example.com:8888)"
#~ msgstr ""

# cffd649e66ae4efb8122522e465ce3e3
#~ msgid ""
#~ "Here is a quick example NGINX "
#~ "configuration to get started. You'll "
#~ "need a server, a .crt and .key "
#~ "file for your server, and docker &"
#~ " docker-compose installed. Then just "
#~ "download the files at that gist "
#~ "and run docker-compose up -d to"
#~ " test it out. Customize the "
#~ "nginx.conf file to set the desired "
#~ "paths and add other services."
#~ msgstr ""

# 7ba37cfc11224013a862d6519168acd0
#~ msgid "Host volume mounts and notebook errors"
#~ msgstr ""

# 0fc6706374ee4a5d98517ec02ee24a03
#~ msgid ""
#~ "If you are mounting a host "
#~ "directory as /home/jovyan/work in your "
#~ "container and you receive permission "
#~ "errors or connection errors when you "
#~ "create a notebook, be sure that "
#~ "the jovyan user (UID=1000 by default)"
#~ " has read/write access to the "
#~ "directory on the host. Alternatively, "
#~ "specify the UID of the jovyan user"
#~ " on container startup using the -e"
#~ " NB_UID option described in the "
#~ "Common Features, Docker Options section"
#~ msgstr ""

# a6c910ab798b43ee91c0af160a3aadb6
#~ msgid "Ref: https://github.com/jupyter/docker-stacks/issues/199"
#~ msgstr ""

# 908924a0b4fa44d79fbca1413a0fb296
#~ msgid "Manpage installation"
#~ msgstr ""

# fb4a0f5bc3534bd9bb8909ce6512f4dd
#~ msgid ""
#~ "Adding the documentation on top of "
#~ "an existing singleuser image wastes a"
#~ " lot of space and requires "
#~ "reinstalling every system package, which "
#~ "can take additional time and bandwidth;"
#~ " the datascience-notebook image has "
#~ "been shown to grow by almost 3GB"
#~ " when adding manapages in this way."
#~ " Enabling manpages in the base Ubuntu"
#~ " layer prevents this container bloat:"
#~ msgstr ""

# 84b7fb0b5fd748ecba457f867a0e30bf
#~ msgid ""
#~ "Be sure to check the current base"
#~ " image in base-notebook before "
#~ "building."
#~ msgstr ""

# 5764b06de0d941a585e5107f313235f4
#~ msgid "JupyterHub"
#~ msgstr ""

# fbff97a16a2a4a53a69dd2d1c7dfbe91
#~ msgid "Use JupyterHub's dockerspawner"
#~ msgstr ""

# 8b1bc94531e7490fbaa012f5c4a257bd
#~ msgid ""
#~ "Swapping out the FROM line in the"
#~ " jupyterhub/singleuser Dockerfile should be "
#~ "enough for most cases."
#~ msgstr ""

# ce864521fffa4c89b7584d24296515d5
#~ msgid ""
#~ "Credit: Justin Tyberg, quanghoc, and Min"
#~ " RK based on docker-stacks/issues/124 "
#~ "and docker-stacks/pull/185"
#~ msgstr ""

# 6a5d92e7b071449686d148be90544e64
#~ msgid "Containers with a specific version of JupyterHub"
#~ msgstr ""

# 091b62f4a91c4d87b92554795a00744c
#~ msgid ""
#~ "To use a specific version of "
#~ "JupyterHub, the version of jupyterhub in"
#~ " your image should match the version"
#~ " in the Hub itself."
#~ msgstr ""

# 67db6ce9d62f499a9d9aaf675a86cddc
#~ msgid "Credit: MinRK"
#~ msgstr ""

# d4613cff20a140cbbbacc84ada8fcd87
#~ msgid "Ref: https://github.com/jupyter/docker-stacks/issues/177"
#~ msgstr ""

# 19439bd85c2946bb89f385651f8283dc
#~ msgid "Spark"
#~ msgstr ""

# 9c295c93db724e5fb11a8f870f805f41
#~ msgid "Using PySpark with AWS S3"
#~ msgstr ""

# 59f08373c7354fa4bb5b7c10441b5d69
#~ msgid "Ref: https://github.com/jupyter/docker-stacks/issues/127"
#~ msgstr ""

# c32dccc031664268983f72ed7927beff
#~ msgid "Using Local Spark JARs"
#~ msgstr ""

# 19614ffa973f49bab235cb5ac9cdf259
#~ msgid "Ref: https://github.com/jupyter/docker-stacks/issues/154"
#~ msgstr ""

# fc70801958a34e5aa578388147a8a1fb
#~ msgid "Using spark-packages.org"
#~ msgstr ""

# 031b9633ca0849e9a9035f4fa5ec2d29
#~ msgid ""
#~ "If you'd like to use packages from"
#~ " spark-packages.org, see "
#~ "https://gist.github.com/parente/c95fdaba5a9a066efaab for "
#~ "an example of how to specify the"
#~ " package identifier in the environment "
#~ "before creating a SparkContext."
#~ msgstr ""

# 08c4d39ccfa84551af78867ab37d3f18
#~ msgid "Ref: https://github.com/jupyter/docker-stacks/issues/43"
#~ msgstr ""

# 285d9bf0eefb480386dfdcd55fd76ef5
#~ msgid "Use jupyter/all-spark-notebooks with an existing Spark/YARN cluster"
#~ msgstr ""

# 1b1c743d85d542989f6a8f2c97a588d3
#~ msgid "Credit: britishbadger from docker-stacks/issues/369"
#~ msgstr ""

# 06d2e360eccb489abeeebada6c0b41eb
#~ msgid ""
#~ "Run Jupyter Notebook/Lab inside an "
#~ "already secured environment (i.e., with "
#~ "no token)"
#~ msgstr ""

# 42dd63565c4a4f67825f675972554d34
#~ msgid "(Adapted from issue 728)"
#~ msgstr ""

# 8af2ceb1414f46e1802681695b5917f8
#~ msgid ""
#~ "The default security is very good. "
#~ "There are use cases, encouraged by "
#~ "containers, where the jupyter container "
#~ "and the system it runs within, lie"
#~ " inside the security boundary. In "
#~ "these use cases it is convenient "
#~ "to launch the server without a "
#~ "password or token. In this case, "
#~ "you should use the start.sh script "
#~ "to launch the server with no "
#~ "token:"
#~ msgstr ""

# 158396013982441e9e62402c499dfb11
#~ msgid "Enable nbextension spellchecker for markdown (or any other nbextension)"
#~ msgstr ""

# 78ba1c20de2445fb9b76ec6202e4d794
#~ msgid "Ref: https://github.com/jupyter/docker-stacks/issues/675"
#~ msgstr ""

# f66d723263124285a641f0dee8a41565
#~ msgid "Running a Container"
#~ msgstr ""

# 3a614d7e864741199c1223a26fc37c03
#~ msgid "Using the Docker CLI"
#~ msgstr ""

# 3039d667df25426b84be7ab9d920cfee
#~ msgid ""
#~ "You can launch a local Docker "
#~ "container from the Jupyter Docker Stacks"
#~ " using the Docker command line "
#~ "interface. There are numerous ways to"
#~ " configure containers using the CLI. "
#~ "The following are some common patterns."
#~ msgstr ""

# 0ea4263c502142b2b3fa7f55a917af19
#~ msgid ""
#~ "Example 1 This command pulls the "
#~ "jupyter/scipy-notebook image tagged "
#~ "2c80cf3537ca from Docker Hub if it "
#~ "is not already present on the "
#~ "local host. It then starts a "
#~ "container running a Jupyter Notebook "
#~ "server and exposes the server on "
#~ "host port 8888. The server logs "
#~ "appear in the terminal and include "
#~ "a URL to the notebook server."
#~ msgstr ""

# 402a9d9ecccb479994d2903710aabaa6
#~ msgid ""
#~ "Pressing Ctrl-C shuts down the notebook"
#~ " server but leaves the container "
#~ "intact on disk for later restart "
#~ "or permanent deletion using commands "
#~ "like the following:"
#~ msgstr ""

# fe38eef5fbe24b90ab070cefeef42230
#~ msgid ""
#~ "Example 2 This command pulls the "
#~ "jupyter/r-notebook image tagged e5c5a7d3e52d "
#~ "from Docker Hub if it is not "
#~ "already present on the local host. "
#~ "It then starts a container running "
#~ "a Jupyter Notebook server and exposes"
#~ " the server on host port 10000. "
#~ "The server logs appear in the "
#~ "terminal and include a URL to the"
#~ " notebook server, but with the "
#~ "internal container port (8888) instead "
#~ "of the the correct host port "
#~ "(10000)."
#~ msgstr ""

# d911c29555904311b29d8eb79fcb9843
#~ msgid ""
#~ "Pressing Ctrl-C shuts down the notebook"
#~ " server and immediately destroys the "
#~ "Docker container. Files written to "
#~ "~/work in the container remain touched."
#~ " Any other changes made in the "
#~ "container are lost."
#~ msgstr ""

# 718d037e82a64d69aea592f76b3f047b
#~ msgid ""
#~ "Example 3 This command pulls the "
#~ "jupyter/all-spark-notebook image currently "
#~ "tagged latest from Docker Hub if "
#~ "an image tagged latest is not "
#~ "already present on the local host. "
#~ "It then starts a container named "
#~ "notebook running a JupyterLab server and"
#~ " exposes the server on a randomly "
#~ "selected port."
#~ msgstr ""

# f9627b2638ec498ebfd06d0475e1dc4c
#~ msgid "Using Binder"
#~ msgstr ""

# 6e355acc72ca41a2aca2972df65259c7
#~ msgid ""
#~ "Binder is a service that allows "
#~ "you to create and share custom "
#~ "computing environments for projects in "
#~ "version control. You can use any "
#~ "of the Jupyter Docker Stacks images "
#~ "as a basis for a Binder-compatible"
#~ " Dockerfile. See the docker-stacks "
#~ "example and Using a Dockerfile sections"
#~ " in the Binder documentation for "
#~ "instructions."
#~ msgstr ""

# d6f8d0ee10b542488dce87b84eb48036
#~ msgid "Using JupyterHub"
#~ msgstr ""

# ef9a37b25db542dea89c9c1fb31c18cd
#~ msgid ""
#~ "You can configure JupyterHub to launcher"
#~ " Docker containers from the Jupyter "
#~ "Docker Stacks images. If you've been "
#~ "following the Zero to JupyterHub with"
#~ " Kubernetes guide, see the Use an "
#~ "existing Docker image section for "
#~ "details. If you have a custom "
#~ "JupyterHub deployment, see the Picking "
#~ "or building a Docker image instructions"
#~ " for the dockerspawner instead."
#~ msgstr ""

# bf63b713aece4a7eacc2ad77f6f47c2c
#~ msgid "Using Other Tools and Services"
#~ msgstr ""

# fcce8862fc7a41a394c1e19d35363653
#~ msgid ""
#~ "You can use the Jupyter Docker "
#~ "Stacks with any Docker-compatible "
#~ "technology (e.g., Docker Compose, docker-"
#~ "py, your favorite cloud container "
#~ "service). See the documentation of the"
#~ " tool, library, or service for "
#~ "details about how to reference, "
#~ "configure, and launch containers from "
#~ "these images."
#~ msgstr ""

# 75674f1f85cb43bcbc020de3b84f18f7
#~ msgid "Selecting an Image"
#~ msgstr ""

# 686b01e6feaf4363930c16cecff5f462
# cdbd4076608348a182dc09701223093a
#~ msgid "Core Stacks"
#~ msgstr ""

# daaad3b4f13e4c6395b0e9186c73030d
# d0275f3e7b07428a85c62db44d774d71
#~ msgid "Image Relationships"
#~ msgstr ""

# 892152661ffc4ea096ba152334ff086f
# a6f02cacf6334057bdb5eb1339411a32
#~ msgid "Community Stacks"
#~ msgstr ""

# fc2fca9d04f442e9a313123cec1174ff
#~ msgid ""
#~ "The Jupyter team maintains a set "
#~ "of Docker image definitions in the "
#~ "https://github.com/jupyter/docker-stacks GitHub "
#~ "repository. The following sections describe"
#~ " these images including their contents, "
#~ "relationships, and versioning strategy."
#~ msgstr ""

# 4e9d03b93e964d16b23b30610d17b3e2
#~ msgid "jupyter/base-notebook"
#~ msgstr ""

# f43dd3334aac4971a67e5bb833dafcb8
# 93db5d969cea480a827c0d6d028fc717
# 4ff6dbde14924b73b3a54bdb94096ba2
# da116e35b2494285abe8447ab372324b
# 6fb499ae6636492b979bad5a17733c4b
# c10b1e6040c84241a77edb90ea3306a4
# 227408f175a24d1cb70e69ca32f11434
# b8ff65660ef14b0692edbe3a2fdff42b
# b50d8b1a5d3849279bcbda725f9f8e62
#~ msgid "Source on GitHub | Dockerfile commit history | Docker Hub image tags"
#~ msgstr ""

# eea41b7365bd4751ae599beb4edfa168
#~ msgid ""
#~ "jupyter/base-notebook is a small image"
#~ " supporting the options common across "
#~ "all core stacks. It is the basis"
#~ " for all other stacks."
#~ msgstr ""

# facfb37f7fa64b85930d8f12fdeef2dd
#~ msgid ""
#~ "Minimally-functional Jupyter Notebook server"
#~ " (e.g., no pandoc for saving "
#~ "notebooks as PDFs)"
#~ msgstr ""

# e90347274dd1459383e31a40bc6685f2
#~ msgid "Miniconda Python 3.x in /opt/conda"
#~ msgstr ""

# 0396d289dcdd49788f06c18efeca5013
#~ msgid ""
#~ "Unprivileged user jovyan (uid=1000, "
#~ "configurable, see options) in group "
#~ "users (gid=100) with ownership over the"
#~ " /home/jovyan and /opt/conda paths"
#~ msgstr ""

# 0e9211b01ef94b66bad9288682e1a833
#~ msgid ""
#~ "tini as the container entrypoint and "
#~ "a start-notebook.sh script as the "
#~ "default command"
#~ msgstr ""

# e38b63a14dae4b718a94c6e0523daf1e
#~ msgid ""
#~ "A start-singleuser.sh script useful for"
#~ " launching containers in JupyterHub"
#~ msgstr ""

# 0a603f43d1b34be28d2c1002f6686fda
#~ msgid ""
#~ "A start.sh script useful for running "
#~ "alternative commands in the container "
#~ "(e.g. ipython, jupyter kernelgateway, jupyter"
#~ " lab)"
#~ msgstr ""

# 9cff5da6908e42d5a7da093ba0bfcfe7
#~ msgid "jupyter/minimal-notebook"
#~ msgstr ""

# 8596676795f142d2912833d1320aa6a0
#~ msgid ""
#~ "jupyter/minimal-notebook adds command line "
#~ "tools useful when working in Jupyter "
#~ "applications."
#~ msgstr ""

# b1167e8a2430451fbb41ea876714d541
#~ msgid "Everything in jupyter/base-notebook"
#~ msgstr ""

# c46294c22bd44a86ac08b977f060a21d
#~ msgid "Pandoc and TeX Live for notebook document conversion"
#~ msgstr ""

# ad6fec23e1bf4a42b0cafd2f15e74574
#~ msgid "git, emacs, jed, nano, tzdata, and unzip"
#~ msgstr ""

# 1c7363e9e14148f7a302b0075598590a
#~ msgid "jupyter/r-notebook"
#~ msgstr ""

# a6bc72d21b0c4102b16a38df077a48dd
#~ msgid "jupyter/r-notebook includes popular packages from the R ecosystem."
#~ msgstr ""

# bfe937844bef465081bdd0cc74064b77
# eb5808624ae249d5aa6b1b06350035dc
#~ msgid "Everything in jupyter/minimal-notebook and its ancestor images"
#~ msgstr ""

# db6a08c9a21f4e1eae1f4a7c7656a60d
#~ msgid "The R interpreter and base environment"
#~ msgstr ""

# c1cf2ef729d04aacbbf220cbe78edb07
# 486896c4482443dcb0f7408c888f29e9
#~ msgid "IRKernel to support R code in Jupyter notebooks"
#~ msgstr ""

# ce8993612e2e44aea34dedc24740025d
#~ msgid ""
#~ "tidyverse packages, including ggplot2, dplyr,"
#~ " tidyr, readr, purrr, tibble, stringr, "
#~ "lubridate, and broom from conda-forge"
#~ msgstr ""

# dcf536112dad48369dbd06c240f5b337
#~ msgid ""
#~ "plyr, devtools, shiny, rmarkdown, forecast,"
#~ " rsqlite, reshape2, nycflights13, caret, "
#~ "rcurl, and randomforest packages from "
#~ "conda-forge"
#~ msgstr ""

# 3e8e6435e2b64a9fb9be8fe252ed2f3a
#~ msgid "jupyter/scipy-notebook"
#~ msgstr ""

# 7d06f0f385c844389eabb820a73b9cf1
#~ msgid ""
#~ "jupyter/scipy-notebook includes popular "
#~ "packages from the scientific Python "
#~ "ecosystem."
#~ msgstr ""

# 9b123df88f864a9f8bd0472877a47a23
#~ msgid ""
#~ "pandas, numexpr, matplotlib, scipy, seaborn,"
#~ " scikit-learn, scikit-image, sympy, "
#~ "cython, patsy, statsmodel, cloudpickle, dill,"
#~ " numba, bokeh, sqlalchemy, hdf5, vincent,"
#~ " beautifulsoup, protobuf, and xlrd packages"
#~ msgstr ""

#~ msgid ""
#~ "ipywidgets and ipympl for interactive "
#~ "visualizations and plots in Python "
#~ "notebooks"
#~ msgstr ""

# 538f0c0d60e84ac7b96c747c780dfd9e
#~ msgid "Facets for visualizing machine learning datasets"
#~ msgstr ""

# 91f89dafe55d46219648e753b94f3054
#~ msgid "jupyter/tensorflow-notebook"
#~ msgstr ""

# 183ce48c172144bc91143bc63797512d
#~ msgid ""
#~ "jupyter/tensorflow-notebook includes popular "
#~ "Python deep learning libraries."
#~ msgstr ""

# 5406ba3cf8a644a79a678c7968ef36cc
# 7dad34e3954840d69b1c418bfdc475c5
#~ msgid "Everything in jupyter/scipy-notebook and its ancestor images"
#~ msgstr ""

# 7698f92c854b4324a3371453e3ee1878
#~ msgid "tensorflow and keras machine learning libraries"
#~ msgstr ""

# e1403de76d344f4d93bd47a91dd00428
#~ msgid "jupyter/datascience-notebook"
#~ msgstr ""

# 2bd4e59533d04b86846cea01ccf36ed4
#~ msgid ""
#~ "jupyter/datascience-notebook includes libraries "
#~ "for data analysis from the Julia, "
#~ "Python, and R communities."
#~ msgstr ""

# ba7ecdc5c2444acd86073ac84157e7cf
#~ msgid ""
#~ "Everything in the jupyter/scipy-notebook "
#~ "and jupyter/r-notebook images, and their "
#~ "ancestor images"
#~ msgstr ""

# bfa2ae2246be45fdb389767d6f74baa6
#~ msgid "The Julia compiler and base environment"
#~ msgstr ""

# 31750842f94747f4a0ebd0ca4ac8f2af
#~ msgid "IJulia to support Julia code in Jupyter notebooks"
#~ msgstr ""

# d8985019373a4360a66ce8c6e32056fa
#~ msgid "HDF5, Gadfly, and RDatasets packages"
#~ msgstr ""

# 051a6e882e974e599bc0221add5e0c50
#~ msgid "jupyter/pyspark-notebook"
#~ msgstr ""

# a1a474f29c9047d6bb99e9a41e789351
#~ msgid ""
#~ "jupyter/pyspark-notebook includes Python "
#~ "support for Apache Spark, optionally on"
#~ " Mesos."
#~ msgstr ""

# 6d585f39fb334a5c95c7f9864baea8a9
#~ msgid "Apache Spark with Hadoop binaries"
#~ msgstr ""

# 33bbd9311c5640008e775210d3f75097
#~ msgid "Mesos client libraries"
#~ msgstr ""

#~ msgid "jupyter/all-spark-notebook"
#~ msgstr ""

# 954fbce53b9d4e3c90c88a65e7d138bd
#~ msgid ""
#~ "jupyter/all-spark-notebook includes Python,"
#~ " R, and Scala support for Apache "
#~ "Spark, optionally on Mesos."
#~ msgstr ""

# 671183aa9bcb4f4ba34933a4cc0e28c0
#~ msgid "Everything in jupyter/pyspark-notebook and its ancestor images"
#~ msgstr ""

# 0114a45f63054b1e9a56aff6c04bd670
#~ msgid ""
#~ "Apache Toree and spylon-kernel to "
#~ "support Scala code in Jupyter notebooks"
#~ msgstr ""

# aa21cb83205c4045960bcfd3f3fc1542
#~ msgid "ggplot2, sparklyr, and rcurl packages"
#~ msgstr ""

# 07d86ef0562f455abb691bffeaca467f
#~ msgid ""
#~ "The following diagram depicts the build"
#~ " dependency tree of the core images."
#~ " (i.e., the FROM statements in their"
#~ " Dockerfiles). Any given image inherits "
#~ "the complete content of all ancestor "
#~ "images pointing to it."
#~ msgstr ""

# fbf5d0a65b8748a5ba1b29a0e43ce9f4
#~ msgid "Builds"
#~ msgstr ""

# 75fc61a8cc874e9196ee00f7af15bb0b
#~ msgid ""
#~ "Pull requests to the jupyter/docker-"
#~ "stacks repository trigger builds of all"
#~ " images on Travis CI. These images"
#~ " are for testing purposes only and"
#~ " are not saved for use. When "
#~ "pull requests merge to master, all "
#~ "images rebuild on Docker Cloud and "
#~ "become available to docker pull from "
#~ "Docker Hub."
#~ msgstr ""

# d226a5a7f673440cbe70097864dda848
#~ msgid "Versioning"
#~ msgstr ""

# 34b4f765c48944bd939679eeb9810497
#~ msgid ""
#~ "The latest tag in each Docker Hub"
#~ " repository tracks the master branch "
#~ "HEAD reference on GitHub. latest is "
#~ "a moving target, by definition, and "
#~ "will have backward-incompatible changes "
#~ "regularly."
#~ msgstr ""

# 7ea772c3bc1d4463b29db3b57e48be8d
#~ msgid ""
#~ "Every image on Docker Hub also "
#~ "receives a 12-character tag which "
#~ "corresponds with the git commit SHA "
#~ "that triggered the image build. You "
#~ "can inspect the state of the "
#~ "jupyter/docker-stacks repository for that "
#~ "commit to review the definition of "
#~ "the image (e.g., images with tag "
#~ "7c45ec67c8e7 were built from "
#~ "https://github.com/jupyter/docker-stacks/tree/7c45ec67c8e7)."
#~ msgstr ""

# cf34bef9989940dda5de9dc026732a4c
#~ msgid ""
#~ "csharp-notebook is a community Jupyter"
#~ " Docker Stack image. Try C# in "
#~ "Jupyter Notebooks. The image includes "
#~ "more than 200 Jupyter Notebooks with "
#~ "example C# code and can readily be"
#~ " tried online via mybinder.org. Click "
#~ "here to launch ."
#~ msgstr ""

# e5c4a7b08c2f4b34b361a923f9fb3dbd
#~ msgid ""
#~ "education-notebook is a community "
#~ "Jupyter Docker Stack image. The image"
#~ " includes nbgrader and RISE on top"
#~ " of the datascience-notebook image. "
#~ "Click here to launch it on ."
#~ msgstr ""

# 8a550c70c3454d72b976cabc1cbdf465
#~ msgid "crosscompass/ihaskell-notebook"
#~ msgstr ""

# 997dafa5bad846f49a7eee78001ed3fc
#~ msgid ""
#~ "crosscompass/ihaskell-notebook is based on "
#~ "IHaskell. Includes popular packages and "
#~ "example notebooks."
#~ msgstr ""

# 9af612ef9b1847e9a537228c2d3bc77d
#~ msgid "Try it on binder:"
#~ msgstr ""

# d514a88096544a2ca92ceaf14b1323eb
#~ msgid ""
#~ "java-notebook is a community Jupyter "
#~ "Docker Stack image. The image includes"
#~ " IJava kernel on top of the "
#~ "minimal-notebook image. Click here to "
#~ "launch it on ."
#~ msgstr ""

# e5b3d27fa68b47d4a2c02c7a039d7daf
#~ msgid ""
#~ "sage-notebook is a community Jupyter "
#~ "Docker Stack image with the sagemath "
#~ "kernel on top of the minimal-"
#~ "notebook image. Click here to launch "
#~ "it on ."
#~ msgstr ""

#~ msgid ""
#~ "GPU-Jupyter: Leverage Jupyter Notebooks "
#~ "with the power of your NVIDIA GPU"
#~ " and perform GPU calculations using "
#~ "Tensorflow and Pytorch in collaborative "
#~ "notebooks. This is done by generating"
#~ " a Dockerfile, that consists of the"
#~ " nvidia/cuda base image, the well-"
#~ "maintained docker-stacks that is "
#~ "integrated as submodule and GPU-able "
#~ "libraries like Tensorflow, Keras and "
#~ "PyTorch on top of it."
#~ msgstr ""

#~ msgid ""
#~ "cgspatial-notebook is a community "
#~ "Jupyter Docker Stack image. The image"
#~ " includes major geospatial Python & R"
#~ " libraries on top of the "
#~ "datascience-notebook image. Try it on "
#~ "binder:"
#~ msgstr ""

# f9f4ef31795249d9bf2a752dfbb27a8f
#~ msgid ""
#~ "See the contributing guide for "
#~ "information about how to create your "
#~ "own Jupyter Docker Stack."
#~ msgstr ""

# 7b67588ff359486cb64810359db6704c
#~ msgid "Image Specifics"
#~ msgstr ""

# 4e5d822c2e1a410099f1ab5831e29927
#~ msgid "Apache Spark"
#~ msgstr ""

# 433d8d99798649029dafd444253567b4
#~ msgid "Specific Docker Image Options"
#~ msgstr ""

# 70083fc71521409895897387117748bc
#~ msgid ""
#~ "-p 4040:4040 - The jupyter/pyspark-"
#~ "notebook and jupyter/all-spark-notebook "
#~ "images open SparkUI (Spark Monitoring "
#~ "and Instrumentation UI) at default port"
#~ " 4040, this option map 4040 port "
#~ "inside docker container to 4040 port "
#~ "on host machine . Note every new"
#~ " spark context that is created is "
#~ "put onto an incrementing port (ie. "
#~ "4040, 4041, 4042, etc.), and it "
#~ "might be necessary to open multiple "
#~ "ports. For example: docker run -d "
#~ "-p 8888:8888 -p 4040:4040 -p 4041:4041"
#~ " jupyter/pyspark-notebook"
#~ msgstr ""

# 2449b18de82e4d129cbd49e52ce9e522
#~ msgid "Usage Examples"
#~ msgstr ""

# ec077f84f7394baba4071d0d8a9c9dbf
#~ msgid ""
#~ "The jupyter/pyspark-notebook and jupyter"
#~ "/all-spark-notebook images support the "
#~ "use of Apache Spark in Python, R,"
#~ " and Scala notebooks. The following "
#~ "sections provide some examples of how"
#~ " to get started using them."
#~ msgstr ""

# ca35b3b020914e2eb2e877199a90d4a4
#~ msgid "Using Spark Local Mode"
#~ msgstr ""

# 2c5367b84e444a1aa504910b22ba1454
# 09d8b02687704d368a670cb243e299fb
#~ msgid "In a Python Notebook"
#~ msgstr ""

# 2b5c49ea60184570a8b50622140c22e1
# 192add33e94844f080ae03254899e2ee
#~ msgid "In a R Notebook"
#~ msgstr ""

# 80cedeb3b4514de792dba8e03b1c8774
# 5f3159414ddc427699709ddef740d6fd
#~ msgid "In a Spylon Kernel Scala Notebook"
#~ msgstr ""

# 07c9256c669b488aaa2df48676d5a188
#~ msgid ""
#~ "Spylon kernel instantiates a SparkContext "
#~ "for you in variable sc after you"
#~ " configure Spark options in a "
#~ "%%init_spark magic cell."
#~ msgstr ""

# aeec453983524d3ab59f7241cf8bac7b
# 472a48e72aaf46ca86a89e1598595045
#~ msgid "In an Apache Toree Scala Notebook"
#~ msgstr ""

# 762d164260cd4938b5f9556b29b0e171
#~ msgid ""
#~ "Apache Toree instantiates a local "
#~ "SparkContext for you in variable sc "
#~ "when the kernel starts."
#~ msgstr ""

# 8da1ef6876324b61885c5dec2c6a9cbf
#~ msgid "Connecting to a Spark Cluster on Mesos"
#~ msgstr ""

# e8c29961728146a28c6581966a2d2341
#~ msgid "Deploy Spark on Mesos."
#~ msgstr ""

# 1838d7f4481246538ca4ffe89e02ff4d
#~ msgid ""
#~ "Configure each slave with the --no-"
#~ "switch_user flag or create the $NB_USER"
#~ " account on every slave node."
#~ msgstr ""

# d4ee49cc6cb547389ed3228e74a4a67c
# 4b8c4c1e7ea441f1af4b4e0fbed73888
#~ msgid ""
#~ "Run the Docker container with --net=host"
#~ " in a location that is network "
#~ "addressable by all of your Spark "
#~ "workers. (This is a Spark networking "
#~ "requirement.)"
#~ msgstr ""

# 9a026387155e46fa8e4e1ea3f00d3a63
# 68e479d8f50e4685a0fb5de56a978347
#~ msgid ""
#~ "NOTE: When using --net=host, you must"
#~ " also use the flags --pid=host -e "
#~ "TINI_SUBREAPER=true. See https://github.com/jupyter"
#~ "/docker-stacks/issues/64 for details."
#~ msgstr ""

# 929575857ae647aebbcb721af39bdd7e
#~ msgid ""
#~ "The Apache Toree kernel automatically "
#~ "creates a SparkContext when it starts"
#~ " based on configuration information from"
#~ " its command line arguments and "
#~ "environment variables. You can pass "
#~ "information about your Mesos cluster via"
#~ " the SPARK_OPTS environment variable when"
#~ " you spawn a container."
#~ msgstr ""

# da5d5d861e914df98df9dba50fb3d66a
#~ msgid "Connecting to a Spark Cluster in Standalone Mode"
#~ msgstr ""

# d5a341bb44524a8cb33f086803daaf63
#~ msgid "Deploy Spark in Standalone Mode."
#~ msgstr ""

# 85baa5bd4ed5426b96dad49dacfab9cb
#~ msgid "Tensorflow"
#~ msgstr ""

# 4249b4b266fc4aeeb85dc8386ab60592
#~ msgid ""
#~ "The jupyter/tensorflow-notebook image supports"
#~ " the use of Tensorflow in single "
#~ "machine or distributed mode."
#~ msgstr ""

# 68fba23f7cd94702a9dead3c51719206
#~ msgid "Single Machine Mode"
#~ msgstr ""

# d4b74babe01d4a3a86c46844a737151b
#~ msgid "Distributed Mode"
#~ msgstr ""

#~ msgid ""
#~ "[git](https://git-scm.com/), "
#~ "[emacs](https://www.gnu.org/software/emacs/), "
#~ "[jed](https://www.jedsoft.org/jed/), [nano](https://www.nano-"
#~ "editor.org/), tzdata, and"
#~ msgstr ""

#~ msgid ""
#~ "Minimally-functional Jupyter Notebook server"
#~ " (e.g., no [pandoc](https://pandoc.org/) for "
#~ "saving notebooks as PDFs)"
#~ msgstr ""

#~ msgid ""
#~ "[Pandoc](http://pandoc.org) and [TeX "
#~ "Live](https://www.tug.org/texlive/) for notebook "
#~ "document conversion"
#~ msgstr ""

#~ msgid ""
#~ "[git](https://git-scm.com/), "
#~ "[emacs](https://www.gnu.org/software/emacs/), "
#~ "[vi](https://vim.org/) (actually `vim-tiny`), "
#~ "[jed](https://www.jedsoft.org/jed/), [nano](https://www.nano-"
#~ "editor.org/), tzdata, and"
#~ msgstr ""

#~ msgid "unzip"
#~ msgstr ""

#~ msgid ""
#~ "[pandas](https://pandas.pydata.org/), "
#~ "[numexpr](https://github.com/pydata/numexpr), "
#~ "[matplotlib](https://matplotlib.org/), "
#~ "[scipy](https://www.scipy.org/),"
#~ msgstr ""

#~ msgid ""
#~ "[seaborn](https://seaborn.pydata.org/), [scikit-"
#~ "learn](http://scikit-learn.org/stable/), [scikit-"
#~ "image](http://scikit-image.org/), "
#~ "[sympy](http://www.sympy.org/en/index.html), "
#~ "[cython](http://cython.org/), "
#~ "[patsy](https://patsy.readthedocs.io/en/latest/), "
#~ "[statsmodel](http://www.statsmodels.org/stable/index.html), "
#~ "[cloudpickle](https://github.com/cloudpipe/cloudpickle), "
#~ "[dill](https://pypi.python.org/pypi/dill), "
#~ "[numba](https://numba.pydata.org/), "
#~ "[bokeh](https://bokeh.pydata.org/en/latest/), "
#~ "[sqlalchemy](https://www.sqlalchemy.org/), "
#~ "[hdf5](http://www.h5py.org/), "
#~ "[vincent](http://vincent.readthedocs.io/en/latest/), "
#~ "[beautifulsoup](https://www.crummy.com/software/BeautifulSoup/), "
#~ "[protobuf](https://developers.google.com/protocol-"
#~ "buffers/docs/pythontutorial), and [xlrd](http://www"
#~ ".python-excel.org/) packages * "
#~ "[ipywidgets](https://ipywidgets.readthedocs.io/en/stable/) and"
#~ " [ipympl](https://github.com/matplotlib/jupyter-matplotlib)"
#~ " for interactive visualizations and plots"
#~ " in Python notebooks * "
#~ "[Facets](https://github.com/PAIR-code/facets) for "
#~ "visualizing machine learning datasets"
#~ msgstr ""

#~ msgid "Try it on binder: [![launch Learn You a Haskell for Great"
#~ msgstr ""

#~ msgid ""
#~ "Good!](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/jamesdbrock"
#~ "/learn-you-a-haskell-"
#~ "notebook/master?urlpath=lab/tree/learn_you_a_haskell/00-preface.ipynb)"
#~ msgstr ""

#~ msgid ""
#~ "`-e NB_USER=jovyan` - Instructs the "
#~ "startup script to change the default "
#~ "container username from `jovyan` to the"
#~ " provided value. Causes the script to"
#~ " rename the `jovyan` user home "
#~ "folder. For this option to take "
#~ "effect, you must run the container "
#~ "with `--user root` and set the "
#~ "working directory `-w /home/$NB_USER`. This"
#~ " feature is useful when mounting host"
#~ " volumes with specific home folder."
#~ msgstr ""

#~ msgid ""
#~ "`jupyter/pyspark-notebook` includes Python "
#~ "support for Apache Spark, optionally on"
#~ " Mesos."
#~ msgstr ""

#~ msgid "[Mesos](http://mesos.apache.org/) client libraries"
#~ msgstr ""

#~ msgid ""
#~ "`jupyter/all-spark-notebook` includes Python,"
#~ " R, and Scala support for Apache "
#~ "Spark, optionally on Mesos."
#~ msgstr ""

#~ msgid "### Connecting to a Spark Cluster on Mesos"
#~ msgstr ""

# 4926e921fbd24baba9888b3f08cf4f51
#~ msgid "This configuration allows your compute cluster to scale with your data."
#~ msgstr ""

#~ msgid ""
#~ "[Deploy Spark on "
#~ "Mesos](http://spark.apache.org/docs/latest/running-on-"
#~ "mesos.html)."
#~ msgstr ""

#~ msgid ""
#~ "Configure each slave with [the `--no-"
#~ "switch_user` flag](https://open.mesosphere.com/reference"
#~ "/mesos-slave/) or create the `$NB_USER` "
#~ "account on every slave node."
#~ msgstr ""

# 16c4327879294075a64b4329f972321c
#~ msgid "Follow the language specific instructions below."
#~ msgstr ""

#~ msgid ""
#~ "# point to mesos master or "
#~ "zookeeper entry (e.g., zk://10.10.10.10:2181/mesos)"
#~ " conf.setMaster(\"mesos://10.10.10.10:5050\") # point"
#~ " to spark binary package in HDFS "
#~ "or on local filesystem on all "
#~ "slave # nodes (e.g., "
#~ "file:///opt/spark/spark-2.2.0-bin-hadoop2.7.tgz) "
#~ "conf.set(\"spark.executor.uri\", "
#~ "\"hdfs://10.10.10.10/spark/spark-2.2.0-bin-hadoop2.7.tgz\") "
#~ "# set other options as desired "
#~ "conf.set(\"spark.executor.memory\", \"8g\") "
#~ "conf.set(\"spark.core.connection.ack.wait.timeout\", \"1200\")"
#~ msgstr ""

#~ msgid ""
#~ "# Point to mesos master or "
#~ "zookeeper entry (e.g., zk://10.10.10.10:2181/mesos)"
#~ " # Point to spark binary package "
#~ "in HDFS or on local filesystem on"
#~ " all slave # nodes (e.g., "
#~ "file:///opt/spark/spark-2.2.0-bin-hadoop2.7.tgz) in "
#~ "sparkEnvir # Set other options in "
#~ "sparkEnvir sc <- "
#~ "sparkR.session(\"mesos://10.10.10.10:5050\", sparkEnvir=list("
#~ msgstr ""

#~ msgid ""
#~ "spark.executor.uri=\"hdfs://10.10.10.10/spark/spark-2.2.0-bin-"
#~ "hadoop2.7.tgz\", spark.executor.memory=\"8g\" )"
#~ msgstr ""

#~ msgid ""
#~ "```python %%init_spark # Configure the "
#~ "location of the mesos master and "
#~ "spark distribution on HDFS launcher.master "
#~ "= \"mesos://10.10.10.10:5050\" "
#~ "launcher.conf.spark.executor.uri=hdfs://10.10.10.10/spark/spark-2.2.0"
#~ "-bin-hadoop2.7.tgz ```"
#~ msgstr ""

#~ msgid ""
#~ "The Apache Toree kernel automatically "
#~ "creates a `SparkContext` when it starts"
#~ " based on configuration information from"
#~ " its command line arguments and "
#~ "environment variables. You can pass "
#~ "information about your Mesos cluster via"
#~ " the `SPARK_OPTS` environment variable when"
#~ " you spawn a container."
#~ msgstr ""

# 3e3d5ec9fa554e75989856139938f4f8
#~ msgid ""
#~ "For instance, to pass information about"
#~ " a Mesos master, Spark binary "
#~ "location in HDFS, and an executor "
#~ "options, you could start the container"
#~ " like so:"
#~ msgstr ""

#~ msgid ""
#~ "``` docker run -d -p 8888:8888 -e"
#~ " SPARK_OPTS='--master=mesos://10.10.10.10:5050 \\"
#~ msgstr ""

#~ msgid ""
#~ "--spark.executor.uri=hdfs://10.10.10.10/spark/spark-2.2.0-bin-"
#~ "hadoop2.7.tgz \\ --spark.executor.memory=8g' jupyter"
#~ "/all-spark-notebook"
#~ msgstr ""

# 3c781f06114240e28dcdb0c40a5d5cf5
#~ msgid ""
#~ "The language specific instructions are "
#~ "almost same as mentioned above for "
#~ "Mesos, only the master url would "
#~ "now be something like spark://10.10.10.10:7077"
#~ msgstr ""

#~ msgid ""
#~ "**Specific Docker Image Options** * `-p"
#~ " 4040:4040` - The `jupyter/pyspark-"
#~ "notebook` and `jupyter/all-spark-notebook` "
#~ "images open [SparkUI (Spark Monitoring "
#~ "and Instrumentation "
#~ "UI)](http://spark.apache.org/docs/latest/monitoring.html) at "
#~ "default port `4040`, this option map "
#~ "`4040` port inside docker container to"
#~ " `4040` port on host machine . "
#~ "Note every new spark context that "
#~ "is created is put onto an "
#~ "incrementing port (ie. 4040, 4041, 4042,"
#~ " etc.), and it might be necessary "
#~ "to open multiple ports. For example: "
#~ "`docker run -d -p 8888:8888 -p "
#~ "4040:4040 -p 4041:4041 jupyter/pyspark-"
#~ "notebook`"
#~ msgstr ""

# 15a0171869f3437481b9dfb2aec3db00
#~ msgid ""
#~ "Spark local mode is useful for "
#~ "experimentation on small data when you"
#~ " do not have a Spark cluster "
#~ "available."
#~ msgstr ""

#~ msgid "#### In a Python Notebook"
#~ msgstr ""

#~ msgid ""
#~ "```python from pyspark.sql import SparkSession"
#~ " spark = "
#~ "SparkSession.builder.appName(\"SimpleApp\").getOrCreate() # "
#~ "do something to prove it works "
#~ "spark.sql('SELECT \"Test\" as c1').show() ```"
#~ msgstr ""

#~ msgid "#### In a R Notebook"
#~ msgstr ""

#~ msgid "```r library(SparkR)"
#~ msgstr ""

#~ msgid "as <- sparkR.session(\"local[*]\")"
#~ msgstr ""

#~ msgid ""
#~ "# do something to prove it works"
#~ " df <- as.DataFrame(iris) head(filter(df, "
#~ "df$Petal_Width > 0.2)) ```"
#~ msgstr ""

#~ msgid "#### In a Spylon Kernel Scala Notebook"
#~ msgstr ""

#~ msgid ""
#~ "```python %%init_spark # Configure Spark "
#~ "to use a local master launcher.master"
#~ " = \"local[*]\" ```"
#~ msgstr ""

#~ msgid ""
#~ "```scala // Now run Scala code "
#~ "that uses the initialized SparkContext "
#~ "in sc val rdd = sc.parallelize(0 "
#~ "to 999) rdd.takeSample(false, 5) ```"
#~ msgstr ""

#~ msgid "#### In an Apache Toree Scala Notebook"
#~ msgstr ""

#~ msgid ""
#~ "```scala val rdd = sc.parallelize(0 to"
#~ " 999) rdd.takeSample(false, 5) ```"
#~ msgstr ""

# 79db0ba4244a4701aa8dfe0053d5579c
#~ msgid ""
#~ "Connection to Spark Cluster on "
#~ "Standalone Mode requires the following "
#~ "set of steps:"
#~ msgstr ""

#~ msgid ""
#~ "```python import os # make sure "
#~ "pyspark tells workers to use python3 "
#~ "not 2 if both are installed "
#~ "os.environ['PYSPARK_PYTHON'] = '/usr/bin/python3'"
#~ msgstr ""

#~ msgid "import pyspark conf = pyspark.SparkConf()"
#~ msgstr ""

#~ msgid ""
#~ "# Point to spark master "
#~ "conf.setMaster(\"spark://10.10.10.10:7070\") # point "
#~ "to spark binary package in HDFS or"
#~ " on local filesystem on all slave "
#~ "# nodes (e.g., file:///opt/spark/spark-2.2.0-bin-"
#~ "hadoop2.7.tgz) conf.set(\"spark.executor.uri\", "
#~ "\"hdfs://10.10.10.10/spark/spark-2.2.0-bin-hadoop2.7.tgz\") "
#~ "# set other options as desired "
#~ "conf.set(\"spark.executor.memory\", \"8g\") "
#~ "conf.set(\"spark.core.connection.ack.wait.timeout\", \"1200\")"
#~ msgstr ""

#~ msgid "# create the context sc = pyspark.SparkContext(conf=conf)"
#~ msgstr ""

#~ msgid ""
#~ "# do something to prove it works"
#~ " rdd = sc.parallelize(range(100000000)) "
#~ "rdd.sumApprox(3) ```"
#~ msgstr ""

#~ msgid ""
#~ "# Point to spark master # Point"
#~ " to spark binary package in HDFS "
#~ "or on local filesystem on all "
#~ "worker # nodes (e.g., "
#~ "file:///opt/spark/spark-2.2.0-bin-hadoop2.7.tgz) in "
#~ "sparkEnvir # Set other options in "
#~ "sparkEnvir sc <- "
#~ "sparkR.session(\"spark://10.10.10.10:7070\", sparkEnvir=list("
#~ msgstr ""

#~ msgid ""
#~ "spark.executor.uri=\"hdfs://10.10.10.10/spark/spark-2.4.3-bin-"
#~ "hadoop2.7.tgz\", spark.executor.memory=\"8g\" )"
#~ msgstr ""

#~ msgid ""
#~ "# do something to prove it works"
#~ " data(iris) df <- as.DataFrame(iris) "
#~ "head(filter(df, df$Petal_Width > 0.2)) ```"
#~ msgstr ""

#~ msgid ""
#~ "```python %%init_spark # Point to spark"
#~ " master launcher.master = "
#~ "\"spark://10.10.10.10:7070\" "
#~ "launcher.conf.spark.executor.uri=hdfs://10.10.10.10/spark/spark-2.4.3"
#~ "-bin-hadoop2.7.tgz ```"
#~ msgstr ""

#~ msgid ""
#~ "For instance, to pass information about"
#~ " a standalone Spark master, Spark "
#~ "binary location in HDFS, and an "
#~ "executor options, you could start the"
#~ " container like so:"
#~ msgstr ""

#~ msgid ""
#~ "``` docker run -d -p 8888:8888 -e"
#~ " SPARK_OPTS='--master=spark://10.10.10.10:7070 \\"
#~ msgstr ""

#~ msgid ""
#~ "--spark.executor.uri=hdfs://10.10.10.10/spark/spark-2.4.3-bin-"
#~ "hadoop2.7.tgz \\ --spark.executor.memory=8g' jupyter"
#~ "/all-spark-notebook"
#~ msgstr ""

#~ msgid ""
#~ "// do something to prove it works"
#~ " val rdd = sc.parallelize(0 to "
#~ "99999999) rdd.sum() ```"
#~ msgstr ""

#~ msgid ""
#~ "``` docker run -d -p 8888:8888 "
#~ "jupyter/base-notebook start-notebook.sh "
#~ "--NotebookApp.password='sha1:74ba40f8a388:c913541b7ee99d15d5ed31d4226bf7838f83a50e'"
#~ " ```"
#~ msgstr ""

#~ msgid ""
#~ "``` docker run -d -p 8888:8888 "
#~ "jupyter/base-notebook start-notebook.sh "
#~ "--NotebookApp.base_url=/some/path ```"
#~ msgstr ""

#~ msgid "``` docker run -d -p 8888:8888 \\"
#~ msgstr ""

#~ msgid "``` docker run -it --rm jupyter/base-notebook start.sh ipython ```"
#~ msgstr ""

#~ msgid ""
#~ "``` docker run -it --rm -p "
#~ "8888:8888 jupyter/base-notebook start.sh "
#~ "jupyter lab ```"
#~ msgstr ""

#~ msgid ""
#~ "``` # install a package into the"
#~ " default (python 3.x) environment pip "
#~ "install some-package conda install "
#~ "some-package ```"
#~ msgstr ""

#~ msgid ""
#~ "``` docker run -it -e GRANT_SUDO=yes "
#~ "--user root jupyter/minimal-notebook ```"
#~ msgstr ""

#~ msgid "``` # Choose your desired base image FROM jupyter/scipy-notebook:latest"
#~ msgstr ""

#~ msgid ""
#~ "``` # Choose your desired base "
#~ "image FROM jupyter/minimal-notebook:latest"
#~ msgstr ""

#~ msgid ""
#~ "And build the image as: ``` docker"
#~ " build -t jupyter/scipy-dasklabextension:latest"
#~ " . ```"
#~ msgstr ""

#~ msgid ""
#~ "Once built, run using the command: "
#~ "``` docker run -it --rm -p "
#~ "8888:8888 -p 8787:8787 jupyter/scipy-"
#~ "dasklabextension:latest ```"
#~ msgstr ""

#~ msgid ""
#~ "``` # Add Live slideshows with "
#~ "RISE RUN conda install -c damianavila82"
#~ " rise ```"
#~ msgstr ""

#~ msgid "``` %%bash conda install -y gcc pip install xgboost"
#~ msgstr ""

#~ msgid ""
#~ "``` FROM  jupyter/base-notebook:5ded1de07260 "
#~ "RUN pip install jupyterhub==0.8.0b1 ```"
#~ msgstr ""

#~ msgid ""
#~ "``` import os os.environ['PYSPARK_SUBMIT_ARGS'] "
#~ "= '--jars /home/jovyan/spark-streaming-"
#~ "kafka-assembly_2.10-1.6.1.jar pyspark-shell' "
#~ "import pyspark from pyspark.streaming.kafka "
#~ "import KafkaUtils from pyspark.streaming "
#~ "import StreamingContext sc = "
#~ "pyspark.SparkContext() ssc = StreamingContext(sc,1)"
#~ " broker = \"<my_broker_ip>\" directKafkaStream"
#~ " = KafkaUtils.createDirectStream(ssc, [\"test1\"], "
#~ "{\"metadata.broker.list\": broker}) "
#~ "directKafkaStream.pprint() ssc.start() ```"
#~ msgstr ""

#~ msgid "``` FROM jupyter/all-spark-notebook"
#~ msgstr ""

#~ msgid ""
#~ "``` docker run jupyter/base-"
#~ "notebook:6d2a05346196 start.sh jupyter lab "
#~ "--LabApp.token='' ```"
#~ msgstr ""

#~ msgid ""
#~ "``` docker run jupyter/base-"
#~ "notebook:6d2a05346196 start.sh jupyter notebook "
#~ "--NotebookApp.token='' ```"
#~ msgstr ""

#~ msgid ""
#~ "``` # Update with your base image"
#~ " of choice FROM jupyter/minimal-"
#~ "notebook:latest"
#~ msgstr ""

#~ msgid ""
#~ "``` ARG BASE_CONTAINER=jupyter/scipy-notebook "
#~ "FROM jupyter/scipy-notebook:latest"
#~ msgstr ""

#~ msgid ""
#~ "Run the Docker container with "
#~ "`--net=host` in a location that is "
#~ "network addressable by all of your "
#~ "Spark workers. (This is a [Spark "
#~ "networking requirement](http://spark.apache.org/docs/latest"
#~ "/cluster-overview.html#components).)"
#~ msgstr ""

#~ msgid ""
#~ "NOTE: When using `--net=host`, you must"
#~ " also use the flags `--pid=host -e"
#~ " TINI_SUBREAPER=true`. See https://github.com/jupyter"
#~ "/docker-stacks/issues/64 for details."
#~ msgstr ""

#~ msgid ""
#~ "# Workaround for a mandb bug, "
#~ "should be fixed in mandb > 2.8.5"
#~ " # https://git.savannah.gnu.org/cgit/man-"
#~ "db.git/commit/?id=8197d7824f814c5d4b992b4c8730b5b0f7ec589a RUN"
#~ " echo \"MANPATH_MAP ${CONDA_DIR}/bin "
#~ "${CONDA_DIR}/man\" >> /etc/manpath.config \\"
#~ msgstr ""

#~ msgid ""
#~ "Adding the documentation on top of "
#~ "an existing singleuser image wastes a"
#~ " lot of space and requires "
#~ "reinstalling every system package, which "
#~ "can take additional time and bandwidth;"
#~ " the `datascience-notebook` image has "
#~ "been shown to grow by almost 3GB"
#~ " when adding manapages in this way."
#~ " Enabling manpages in the base Ubuntu"
#~ " layer prevents this container bloat:"
#~ msgstr ""

#~ msgid ""
#~ "```Dockerfile # Ubuntu 18.04 (bionic) "
#~ "from 2018-05-26 # https://github.com/docker-"
#~ "library/official-"
#~ "images/commit/aac6a45b9eb2bffb8102353c350d341a410fb169 ARG "
#~ "BASE_CONTAINER=ubuntu:bionic-20180526@sha256:c8c275751219dadad8fa56b3ac41ca6cb22219ff117ca98fe82b42f24e1ba64e"
#~ " FROM $BASE_CONTAINER"
#~ msgstr ""

#~ msgid ""
#~ "ENV DEBIAN_FRONTEND noninteractive # Remove"
#~ " the manpage blacklist, install man, "
#~ "install docs RUN rm "
#~ "/etc/dpkg/dpkg.cfg.d/excludes \\"
#~ msgstr ""

#~ msgid ""
#~ "# Workaround for a mandb bug, "
#~ "should be fixed in mandb > 2.8.5"
#~ " # https://git.savannah.gnu.org/cgit/man-"
#~ "db.git/commit/?id=8197d7824f814c5d4b992b4c8730b5b0f7ec589a RUN"
#~ " echo \"MANPATH_MAP /opt/conda/bin "
#~ "/opt/conda/man\" >> /etc/manpath.config \\"
#~ msgstr ""

#~ msgid ""
#~ "&& echo \"MANPATH_MAP /opt/conda/bin "
#~ "/opt/conda/share/man\" >> /etc/manpath.config"
#~ msgstr ""

#~ msgid ""
#~ "[tidyr](http://tidyr.tidyverse.org/), "
#~ "[readr](http://readr.tidyverse.org/), "
#~ "[purrr](http://purrr.tidyverse.org/), "
#~ "[tibble](http://tibble.tidyverse.org/), "
#~ "[stringr](http://stringr.tidyverse.org/), "
#~ "[lubridate](http://lubridate.tidyverse.org/), and "
#~ "[broom](https://cran.r-project.org/web/packages/broom/vignettes/broom.html)"
#~ " from [conda-forge](https://conda-"
#~ "forge.github.io/feedstocks) * "
#~ "[plyr](https://cran.r-project.org/web/packages/plyr/index.html), "
#~ "[devtools](https://cran.r-project.org/web/packages/devtools/index.html),"
#~ " [shiny](https://shiny.rstudio.com/), "
#~ "[rmarkdown](http://rmarkdown.rstudio.com/), "
#~ "[forecast](https://cran.r-project.org/web/packages/forecast/forecast.pdf),"
#~ " "
#~ "[rsqlite](https://cran.r-project.org/web/packages/RSQLite/index.html),"
#~ " "
#~ "[reshape2](https://cran.r-project.org/web/packages/reshape2/reshape2.pdf),"
#~ " "
#~ "[nycflights13](https://cran.r-project.org/web/packages/nycflights13/index.html),"
#~ " [caret](http://topepo.github.io/caret/index.html), "
#~ "[rcurl](https://cran.r-project.org/web/packages/RCurl/index.html), "
#~ "and "
#~ "[randomforest](https://cran.r-project.org/web/packages/randomForest/randomForest.pdf)"
#~ " packages from [conda-forge](https://conda-"
#~ "forge.github.io/feedstocks)"
#~ msgstr ""

#~ msgid ""
#~ "[tidyverse](https://www.tidyverse.org/) packages, "
#~ "including [ggplot2](http://ggplot2.org/), "
#~ "[dplyr](http://dplyr.tidyverse.org/),"
#~ msgstr ""

#~ msgid ""
#~ "[tidyr](http://tidyr.tidyverse.org/), "
#~ "[readr](http://readr.tidyverse.org/), "
#~ "[purrr](http://purrr.tidyverse.org/), "
#~ "[tibble](http://tibble.tidyverse.org/), "
#~ "[stringr](http://stringr.tidyverse.org/), "
#~ "[lubridate](http://lubridate.tidyverse.org/), and "
#~ "[broom](https://cran.r-project.org/web/packages/broom/vignettes/broom.html)"
#~ " from [conda-forge](https://conda-"
#~ "forge.github.io/feedstocks) * "
#~ "[devtools](https://cran.r-project.org/web/packages/devtools/index.html),"
#~ " [shiny](https://shiny.rstudio.com/), "
#~ "[rmarkdown](http://rmarkdown.rstudio.com/), "
#~ "[forecast](https://cran.r-project.org/web/packages/forecast/forecast.pdf),"
#~ " "
#~ "[rsqlite](https://cran.r-project.org/web/packages/RSQLite/index.html),"
#~ " "
#~ "[nycflights13](https://cran.r-project.org/web/packages/nycflights13/index.html),"
#~ " [caret](http://topepo.github.io/caret/index.html), "
#~ "[tidymodels](https://www.tidymodels.org/), "
#~ "[rcurl](https://cran.r-project.org/web/packages/RCurl/index.html), "
#~ "and "
#~ "[randomforest](https://cran.r-project.org/web/packages/randomForest/randomForest.pdf)"
#~ " packages from [conda-forge](https://conda-"
#~ "forge.github.io/feedstocks)"
#~ msgstr ""

#~ msgid ""
#~ "[dask](https://dask.org/), [pandas](https://pandas.pydata.org/),"
#~ " [numexpr](https://github.com/pydata/numexpr), "
#~ "[matplotlib](https://matplotlib.org/), "
#~ "[scipy](https://www.scipy.org/),"
#~ msgstr ""

#~ msgid ""
#~ "[seaborn](https://seaborn.pydata.org/), [scikit-"
#~ "learn](http://scikit-learn.org/stable/), [scikit-"
#~ "image](http://scikit-image.org/), "
#~ "[sympy](http://www.sympy.org/en/index.html), "
#~ "[cython](http://cython.org/), "
#~ "[patsy](https://patsy.readthedocs.io/en/latest/), "
#~ "[statsmodel](http://www.statsmodels.org/stable/index.html), "
#~ "[cloudpickle](https://github.com/cloudpipe/cloudpickle), "
#~ "[dill](https://pypi.python.org/pypi/dill), "
#~ "[numba](https://numba.pydata.org/), "
#~ "[bokeh](https://bokeh.pydata.org/en/latest/), "
#~ "[sqlalchemy](https://www.sqlalchemy.org/), "
#~ "[hdf5](http://www.h5py.org/), "
#~ "[vincent](http://vincent.readthedocs.io/en/latest/), "
#~ "[beautifulsoup](https://www.crummy.com/software/BeautifulSoup/), "
#~ "[protobuf](https://developers.google.com/protocol-"
#~ "buffers/docs/pythontutorial), [xlrd](http://www.python-"
#~ "excel.org/), "
#~ "[bottleneck](https://bottleneck.readthedocs.io/en/latest/), and"
#~ " [pytables](https://www.pytables.org/) packages * "
#~ "[ipywidgets](https://ipywidgets.readthedocs.io/en/stable/) and"
#~ " [ipympl](https://github.com/matplotlib/jupyter-matplotlib)"
#~ " for interactive visualizations and plots"
#~ " in Python notebooks * "
#~ "[Facets](https://github.com/PAIR-code/facets) for "
#~ "visualizing machine learning datasets"
#~ msgstr ""

#~ msgid ""
#~ "Pull requests to the `jupyter/docker-"
#~ "stacks` repository trigger builds of all"
#~ " images on Travis CI. These images"
#~ " are for testing purposes only and"
#~ " are not saved for use. When "
#~ "pull requests merge to master, all "
#~ "images rebuild on Docker Cloud and "
#~ "become available to `docker pull` from"
#~ " Docker Hub."
#~ msgstr ""

#~ msgid ""
#~ "[csharp-notebook is a community Jupyter"
#~ " Docker Stack image. Try C# in "
#~ "Jupyter Notebooks](https://github.com/tlinnet/csharp-"
#~ "notebook). The image includes more"
#~ msgstr ""

#~ msgid ""
#~ "than 200 Jupyter Notebooks with example"
#~ " C# code and can readily be "
#~ "tried online via mybinder.org. Click "
#~ "here to launch "
#~ "[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/tlinnet"
#~ "/csharp-notebook/master)."
#~ msgstr ""

#~ msgid ""
#~ "[education-notebook is a community "
#~ "Jupyter Docker Stack image](https://github.com"
#~ "/umsi-mads/education-notebook). The image "
#~ "includes nbgrader and RISE on top "
#~ "of"
#~ msgstr ""

#~ msgid ""
#~ "the datascience-notebook image. Click "
#~ "here to launch it on "
#~ "[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh"
#~ "/umsi-mads/education-notebook/master)."
#~ msgstr ""

#~ msgid "__crosscompass/ihaskell-notebook__"
#~ msgstr ""

#~ msgid ""
#~ "[java-notebook is a community Jupyter"
#~ " Docker Stack image](https://github.com/jbindinga"
#~ "/java-notebook). The image includes"
#~ msgstr ""

#~ msgid ""
#~ "[IJava](https://github.com/SpencerPark/IJava) kernel on"
#~ " top of the minimal-notebook image."
#~ " Click here to launch it on "
#~ "[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/jbindinga"
#~ "/java-notebook/master)."
#~ msgstr ""

#~ msgid ""
#~ "[sage-notebook](https://github.com/sharpTrick/sage-"
#~ "notebook) is a community Jupyter Docker"
#~ " Stack image with the "
#~ "[sagemath](https://sagemath.org) kernel on top "
#~ "of"
#~ msgstr ""

#~ msgid ""
#~ "the minimal-notebook image. Click here"
#~ " to launch it on "
#~ "[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/sharpTrick"
#~ "/sage-notebook/master)."
#~ msgstr ""

#~ msgid ""
#~ "[GPU-Jupyter](https://github.com/iot-salzburg/gpu-"
#~ "jupyter/): Leverage Jupyter Notebooks with "
#~ "the power of your NVIDIA GPU and"
#~ " perform GPU calculations using"
#~ msgstr ""

#~ msgid ""
#~ "Tensorflow and Pytorch in collaborative "
#~ "notebooks. This is done by generating"
#~ " a Dockerfile, that consists of the"
#~ " **nvidia/cuda** base image, the well-"
#~ "maintained **docker-stacks** that is "
#~ "integrated as submodule and GPU-able "
#~ "libraries like **Tensorflow**, **Keras** and"
#~ " **PyTorch** on top of it."
#~ msgstr ""

#~ msgid ""
#~ "[cgspatial-notebook](https://github.com/SCiO-systems"
#~ "/cgspatial-notebook) is a community Jupyter"
#~ " Docker Stack image. The image "
#~ "includes major geospatial Python &"
#~ msgstr ""

#~ msgid ""
#~ "R libraries on top of the "
#~ "datascience-notebook image. Try it on "
#~ "binder:[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh"
#~ "/SCiO-systems/cgspatial-notebook/master)"
#~ msgstr ""

#~ msgid "## Apache Spark"
#~ msgstr ""

#~ msgid "**Specific Docker Image Options**"
#~ msgstr ""

#~ msgid "**Usage Examples**"
#~ msgstr ""

#~ msgid "### Using Spark Local Mode"
#~ msgstr ""

#~ msgid "#### In Python"
#~ msgstr ""

#~ msgid "#### In R"
#~ msgstr ""

#~ msgid "#### In Scala"
#~ msgstr ""

#~ msgid "##### In a Spylon Kernel"
#~ msgstr ""

#~ msgid "##### In an Apache Toree Kernel"
#~ msgstr ""

#~ msgid ""
#~ "Apache Toree instantiates a local "
#~ "`SparkContext` for you in variable `sc`"
#~ " when the kernel starts."
#~ msgstr ""

#~ msgid "### Connecting to a Spark Cluster in Standalone Mode"
#~ msgstr ""

#~ msgid "##### In an Apache Toree Scala Notebook"
#~ msgstr ""

#~ msgid ""
#~ "The Apache Toree kernel automatically "
#~ "creates a `SparkContext` when it starts"
#~ " based on configuration information from"
#~ " its command line arguments and "
#~ "environment variables. You can pass "
#~ "information about your cluster via the"
#~ " `SPARK_OPTS` environment variable when you"
#~ " spawn a container."
#~ msgstr ""

#~ msgid ""
#~ "For instance, to pass information about"
#~ " a standalone Spark master, you could"
#~ " start the container like so:"
#~ msgstr ""

#~ msgid ""
#~ "```bash docker run -d -p 8888:8888 "
#~ "-e SPARK_OPTS='--master=spark://master:7077' \\"
#~ msgstr ""

# fa8494a4dde544109b9f6f49ac28178f
#~ msgid ""
#~ "Note that this is the same "
#~ "information expressed in a notebook in"
#~ " the Python case above. Once the "
#~ "kernel spec has your cluster "
#~ "information, you can test your cluster"
#~ " in an Apache Toree notebook like "
#~ "so:"
#~ msgstr ""

#~ msgid ""
#~ "```scala // should print the value "
#~ "of --master in the kernel spec "
#~ "println(sc.master)"
#~ msgstr ""

#~ msgid ""
#~ "// Sum of the first 100 whole "
#~ "numbers val rdd = sc.parallelize(0 to"
#~ " 100) rdd.sum() // 5050 ```"
#~ msgstr ""

#~ msgid ""
#~ "Spark distribution is defined by the "
#~ "combination of the Spark and the "
#~ "Hadoop version and verified by the "
#~ "package checksum, see [Download Apache "
#~ "Spark](https://spark.apache.org/downloads.html) for more"
#~ " information. * `spark_version`: The Spark"
#~ " version to install (`3.0.0`). * "
#~ "`hadoop_version`: The Hadoop version (`3.2`)."
#~ " * `spark_checksum`: The package checksum"
#~ " (`BFE4540...`)."
#~ msgstr ""

#~ msgid ""
#~ "[git](https://git-scm.com/), "
#~ "[emacs](https://www.gnu.org/software/emacs/) (actually "
#~ "`emacs-nox`), [vi](https://vim.org/) (actually "
#~ "`vim-tiny`), [jed](https://www.jedsoft.org/jed/), "
#~ "[nano](https://www.nano-editor.org/), tzdata, and"
#~ " unzip"
#~ msgstr ""

#~ msgid ""
#~ "[tidyverse](https://www.tidyverse.org/) packages, "
#~ "including [ggplot2](http://ggplot2.org/), "
#~ "[dplyr](http://dplyr.tidyverse.org/), "
#~ "[tidyr](http://tidyr.tidyverse.org/), "
#~ "[readr](http://readr.tidyverse.org/), "
#~ "[purrr](http://purrr.tidyverse.org/), "
#~ "[tibble](http://tibble.tidyverse.org/), "
#~ "[stringr](http://stringr.tidyverse.org/), "
#~ "[lubridate](http://lubridate.tidyverse.org/), and "
#~ "[broom](https://cran.r-project.org/web/packages/broom/vignettes/broom.html)"
#~ " from [conda-forge](https://conda-"
#~ "forge.github.io/feedstocks)"
#~ msgstr ""

#~ msgid ""
#~ "```dockerfile # Start from a core "
#~ "stack version FROM jupyter/datascience-"
#~ "notebook:9f9e5ca8fe5a # Install from "
#~ "requirements.txt file COPY requirements.txt "
#~ "/tmp/ RUN pip install --requirement "
#~ "/tmp/requirements.txt && \\"
#~ msgstr ""

#~ msgid ""
#~ "```dockerfile # Start from a core "
#~ "stack version FROM jupyter/datascience-"
#~ "notebook:9f9e5ca8fe5a # Install from "
#~ "requirements.txt file COPY requirements.txt "
#~ "/tmp/ RUN conda install --yes --file "
#~ "/tmp/requirements.txt && \\"
#~ msgstr ""

#~ msgid ""
#~ "# COPY environment.yml /home/$NB_USER/tmp/ #"
#~ " RUN cd /home/$NB_USER/tmp/ && \\ #"
#~ "     conda env create -p "
#~ "$CONDA_DIR/envs/$conda_env -f environment.yml && "
#~ "\\ #     conda clean --all -f -y"
#~ msgstr ""

#~ msgid "[Miniconda](https://conda.io/miniconda.html) Python 3.x in `/opt/conda`"
#~ msgstr ""

#~ msgid ""
#~ "[git](https://git-scm.com/), "
#~ "[emacs](https://www.gnu.org/software/emacs/) (actually "
#~ "`emacs-nox`), [vi](https://vim.org/) (actually "
#~ "`vim-tiny`), [jed](https://www.jedsoft.org/jed/), "
#~ "[nano](https://www.nano-editor.org/) (actually "
#~ "`nano-tiny`), tzdata, and unzip"
#~ msgstr ""

#~ msgid ""
#~ "Spark is shipped with a version of"
#~ " Py4J that has to be referenced "
#~ "in the `PYTHONPATH`. * `py4j_version`: "
#~ "The Py4J version (`0.10.9`), see the "
#~ "tip below."
#~ msgstr ""

#~ msgid ""
#~ "-t jupyter/pyspark-notebook:spark-2.4.6 "
#~ "./pyspark-notebook \\ --build-arg "
#~ "spark_version=2.4.6 \\ --build-arg "
#~ "hadoop_version=2.7 \\ --build-arg "
#~ "spark_checksum=3A9F401EDA9B5749CDAFD246B1D14219229C26387017791C345A23A65782FB8B25A302BF4AC1ED7C16A1FE83108E94E55DAD9639A51C751D81C8C0534A4A9641"
#~ " \\ --build-arg openjdk_version=8 \\ "
#~ "--build-arg py4j_version=0.10.7"
#~ msgstr ""

#~ msgid ""
#~ "# Check the newly built image "
#~ "docker images jupyter/pyspark-notebook:spark-2.4.6"
#~ msgstr ""

#~ msgid ""
#~ "# REPOSITORY                 TAG                 "
#~ "IMAGE ID            CREATED             SIZE #"
#~ " jupyter/pyspark-notebook   spark-2.4.6         "
#~ "7ad7b5a9dbcd        4 minutes ago       3.44GB"
#~ msgstr ""

#~ msgid ""
#~ "# Check the Spark version docker "
#~ "run -it --rm jupyter/pyspark-"
#~ "notebook:spark-2.4.6 pyspark --version"
#~ msgstr ""

#~ msgid ""
#~ "# Welcome to #       ____              "
#~ "__ #      / __/__  ___ _____/ /__"
#~ " #     _\\ \\/ _ \\/ _ `/ "
#~ "__/  '_/ #    /___/ .__/\\_,_/_/ "
#~ "/_/\\_\\   version 2.4.6 #       /_/ #"
#~ " # Using Scala version 2.11.12, "
#~ "OpenJDK 64-Bit Server VM, 1.8.0_265 ```"
#~ msgstr ""

#~ msgid "**Tip**: to get the version of Py4J shipped with Spark:"
#~ msgstr ""

#~ msgid ""
#~ "Build a first image without changing "
#~ "`py4j_version` (it will not prevent the"
#~ " image to build it will just "
#~ "prevent Python to find the `pyspark` "
#~ "module),"
#~ msgstr ""

#~ msgid "get the version (`ls /usr/local/spark/python/lib/`),"
#~ msgstr ""

#~ msgid "set the version `--build-arg py4j_version=0.10.7`."
#~ msgstr ""

#~ msgid ""
#~ "```bash docker run -it --rm jupyter"
#~ "/pyspark-notebook:spark-2.4.6 ls "
#~ "/usr/local/spark/python/lib/ # py4j-0.10.7-src.zip  "
#~ "PY4J_LICENSE.txt  pyspark.zip # You can "
#~ "now set the build-arg # "
#~ "--build-arg py4j_version= ```"
#~ msgstr ""

#~ msgid ""
#~ "*Note: At the time of writing "
#~ "there is an issue preventing to "
#~ "use Spark `2.4.6` with Python `3.8`, "
#~ "see [this answer on "
#~ "SO](https://stackoverflow.com/a/62173969/4413446) for more"
#~ " information.*"
#~ msgstr ""

#~ msgid "# Install the Dask dashboard RUN pip install dask_labextension ; \\"
#~ msgstr ""

#~ msgid "jupyter labextension install -y --clean \\ dask-labextension"
#~ msgstr ""

#~ msgid ""
#~ "The `jovyan` user has full read/write"
#~ " access to the `/opt/conda` directory. "
#~ "You can use either `conda` or "
#~ "`pip` to install new packages without"
#~ " any additional permissions."
#~ msgstr ""

#~ msgid ""
#~ "```bash # install a package into "
#~ "the default (python 3.x) environment pip"
#~ " install some-package conda install "
#~ "some-package ```"
#~ msgstr ""

#~ msgid ""
#~ "[Miniforge](https://github.com/conda-forge/miniforge) "
#~ "Python 3.x in `/opt/conda`"
#~ msgstr ""

#~ msgid ""
#~ "Spark distribution is defined by the "
#~ "combination of the Spark and the "
#~ "Hadoop version and verified by the "
#~ "package checksum, see [Download Apache "
#~ "Spark](https://spark.apache.org/downloads.html) for more"
#~ " information. At this time the build"
#~ " will only work with the set of"
#~ " versions available on the Apache "
#~ "Spark download page, so it will "
#~ "not work with the archived versions. "
#~ "* `spark_version`: The Spark version to"
#~ " install (`3.0.0`). * `hadoop_version`: The"
#~ " Hadoop version (`3.2`). * "
#~ "`spark_checksum`: The package checksum "
#~ "(`BFE4540...`)."
#~ msgstr ""

#~ msgid ""
#~ "And build the image as: ```bash "
#~ "docker build -t jupyter/scipy-"
#~ "dasklabextension:latest . ```"
#~ msgstr ""

#~ msgid ""
#~ "Once built, run using the command: "
#~ "```bash docker run -it --rm -p "
#~ "8888:8888 -p 8787:8787 jupyter/scipy-"
#~ "dasklabextension:latest ```"
#~ msgstr ""

#~ msgid ""
#~ "For Ubuntu 18.04 (bionic) and earlier,"
#~ " you may also require to workaround"
#~ " for a mandb bug, which was "
#~ "fixed in mandb >= 2.8.6.1: ```dockerfile"
#~ " # https://git.savannah.gnu.org/cgit/man-"
#~ "db.git/commit/?id=8197d7824f814c5d4b992b4c8730b5b0f7ec589a # "
#~ "http://launchpadlibrarian.net/435841763/man-"
#~ "db_2.8.5-2_2.8.6-1.diff.gz"
#~ msgstr ""

#~ msgid "``` docker run -p 8888:8888 jupyter/scipy-notebook:2c80cf3537ca"
#~ msgstr ""

#~ msgid ""
#~ "``` # list containers docker ps -a"
#~ " CONTAINER ID        IMAGE                   "
#~ "COMMAND                  CREATED    STATUS"
#~ "                      PORTS               NAMES "
#~ "d67fe77f1a84        jupyter/base-notebook   \"tini"
#~ " -- start-noteb…\"   44 seconds ago"
#~ "    Exited (0) 39 seconds ago"
#~ "                       cocky_mirzakhani"
#~ msgstr ""

#~ msgid ""
#~ "# start the stopped container docker "
#~ "start -a d67fe77f1a84 Executing the "
#~ "command: jupyter notebook [W 16:45:02.020 "
#~ "NotebookApp] WARNING: The notebook server "
#~ "is listening on all IP addresses "
#~ "and not using encryption. This is "
#~ "not recommended. ..."
#~ msgstr ""

#~ msgid "# remove the stopped container docker rm d67fe77f1a84 d67fe77f1a84 ```"
#~ msgstr ""

#~ msgid ""
#~ "``` docker run --rm -p 10000:8888 "
#~ "-v \"$PWD\":/home/jovyan/work "
#~ "jupyter/r-notebook:e5c5a7d3e52d"
#~ msgstr ""

#~ msgid "``` docker run -d -P --name notebook jupyter/all-spark-notebook ```"
#~ msgstr ""

#~ msgid ""
#~ "``` # get the random host port "
#~ "assigned to the container port 8888 "
#~ "docker port notebook 8888 0.0.0.0:32769"
#~ msgstr ""

#~ msgid "# get the notebook token from the logs docker logs --tail 3 notebook"
#~ msgstr ""

# c4bc333e19324e2a93118e21b1f8f360
#~ msgid ""
#~ "Together, the URL to visit on the"
#~ " host machine to access the server"
#~ " in this case is "
#~ "http://localhost:32769?token=15914ca95f495075c0aa7d0e060f1a78b6d94f70ea373b00."
#~ msgstr ""

#~ msgid "``` # stop the container docker stop notebook notebook"
#~ msgstr ""

#~ msgid "##### In Python"
#~ msgstr ""

#~ msgid "##### In R"
#~ msgstr ""

#~ msgid "##### In Scala"
#~ msgstr ""

#~ msgid ""
#~ "Run the Docker container with "
#~ "`--net=host` in a location that is "
#~ "network addressable by all of your "
#~ "Spark workers. (This is a [Spark "
#~ "networking requirement](http://spark.apache.org/docs/latest"
#~ "/cluster-overview.html#components).) * NOTE: When"
#~ " using `--net=host`, you must also "
#~ "use the flags `--pid=host -e "
#~ "TINI_SUBREAPER=true`. See https://github.com/jupyter"
#~ "/docker-stacks/issues/64 for details."
#~ msgstr ""

#~ msgid ""
#~ "You can pass [Jupyter command line "
#~ "options](https://jupyter.readthedocs.io/en/latest/projects/jupyter-"
#~ "command.html) to the `start-notebook.sh` "
#~ "script when launching the container. For"
#~ " example, to secure the Notebook "
#~ "server with a custom password hashed "
#~ "using `IPython.lib.passwd()` instead of the"
#~ " default token, you can run the "
#~ "following:"
#~ msgstr ""

#~ msgid ""
#~ "[git](https://git-scm.com/), [vi](https://vim.org/) "
#~ "(actually `vim-tiny`), [nano](https://www.nano-"
#~ "editor.org/) (actually `nano-tiny`), tzdata,"
#~ " and unzip"
#~ msgstr ""

#~ msgid ""
#~ "[ggplot2](http://ggplot2.org/), "
#~ "[sparklyr](http://spark.rstudio.com/), and "
#~ "[rcurl](https://cran.r-project.org/web/packages/RCurl/index.html) "
#~ "packages"
#~ msgstr ""

#~ msgid ""
#~ "Pull requests to the `jupyter/docker-"
#~ "stacks` repository trigger builds of all"
#~ " images on GitHub Actions. These "
#~ "images are for testing purposes only "
#~ "and are not saved for use. When"
#~ " pull requests merge to master, all"
#~ " images rebuild on Docker Cloud and"
#~ " become available to `docker pull` "
#~ "from Docker Hub."
#~ msgstr ""

