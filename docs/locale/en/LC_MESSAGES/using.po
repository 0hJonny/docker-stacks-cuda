# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018- Project Jupyter
# This file is distributed under the same license as the docker-stacks
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: docker-stacks latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-25 12:52+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

# 7c56c3891bd94336b21fc82d5aeab6ae
#: ../../using/common.md:1 1c44fafbdfd04b0f8489ac57da3be0c9
msgid "Common Features"
msgstr ""

# bf4e4ace24d144538edc1d9a2605cfef
#: ../../using/common.md:3 c0b052ac75644ecbbe869437046c4a87
msgid ""
"A container launched from any Jupyter Docker Stacks image runs a Jupyter "
"Notebook server by default. The container does so by executing a start-"
"notebook.sh script. This script configures the internal container "
"environment and then runs jupyter notebook, passing it any command line "
"arguments received."
msgstr ""

# 298bc09d3aab4abcb413ad481d6242ff
#: ../../using/common.md:5 f8c1d12c2ca24abfb2a7d901e659c79b
msgid ""
"This page describes the options supported by the startup script as well "
"as how to bypass it to run alternative commands."
msgstr ""

# 056d2f8a9a4343668131dfb9de71838a
#: ../../using/common.md:7 fffdd71799684b1eb92df0b14d9d65a7
msgid "Notebook Options"
msgstr ""

# d1c32336e1f545d496f7a411fb18cb4e
#: ../../using/common.md:9 2d76c18837cd440ca0f5ef5892b734ec
msgid ""
"You can pass Jupyter command line options to the start-notebook.sh script"
" when launching the container. For example, to secure the Notebook server"
" with a custom password hashed using IPython.lib.passwd() instead of the "
"default token, you can run the following:"
msgstr ""

# 4c08f057def247cbbfc8231e628cb792
#: ../../using/common.md:15 53e03d31641242a6837f28a8fb341e59
msgid ""
"For example, to set the base URL of the notebook server, you can run the "
"following:"
msgstr ""

# 58ad38b4300449da805bc67e73be5fd0
#: ../../using/common.md:21 a1fce0d998534055bb969f508488413d
msgid "Docker Options"
msgstr ""

# 0118197966504e3ab1c03a0c49e68c97
#: ../../using/common.md:23 7107dee10a2a4b3193fabe63d67e6a76
msgid ""
"You may instruct the start-notebook.sh script to customize the container "
"environment before launching the notebook server. You do so by passing "
"arguments to the docker run command."
msgstr ""

# 391efc925af248fa9bfa2220bdf0730b
#: ../../using/common.md:26 51f0477bc9904affbc264f2a6d75a3ae
msgid ""
"-e NB_USER=jovyan - Instructs the startup script to change the default "
"container username from jovyan to the provided value. Causes the script "
"to rename the jovyan user home folder. For this option to take effect, "
"you must run the container with --user root and set the working directory"
" -w /home/$NB_USER. This feature is useful when mounting host volumes "
"with specific home folder."
msgstr ""

# 97929e34ea254dd289e235276b72068f
#: ../../using/common.md:27 931095dd6fa940bd9465c10540363061
msgid ""
"-e NB_UID=1000 - Instructs the startup script to switch the numeric user "
"ID of $NB_USER to the given value. This feature is useful when mounting "
"host volumes with specific owner permissions. For this option to take "
"effect, you must run the container with --user root. (The startup script "
"will su $NB_USER after adjusting the user ID.) You might consider using "
"modern Docker options --user and --group-add instead. See the last bullet"
" below for details."
msgstr ""

# 71cac0c045d342008ca80ce23ef32431
#: ../../using/common.md:28 b6a05af5c5ad4363862750dad9b5d444
msgid ""
"-e NB_GID=100 - Instructs the startup script to change the primary group "
"of$NB_USER to $NB_GID (the new group is added with a name of $NB_GROUP if"
" it is defined, otherwise the group is named $NB_USER).  This feature is "
"useful when mounting host volumes with specific group permissions. For "
"this option to take effect, you must run the container with --user root. "
"(The startup script will su $NB_USER after adjusting the group ID.) You "
"might consider using modern Docker options --user and --group-add "
"instead. See the last bullet below for details.  The user is added to "
"supplemental group users (gid 100) in order to allow write access to the "
"home directory and /opt/conda.  If you override the user/group logic, "
"ensure the user stays in group users if you want them to be able to "
"modify files in the image."
msgstr ""

# 5ca13bdafc214f8b997ca2752592f1be
#: ../../using/common.md:29 0d6431dbefe044b383df6458c4bc9e18
msgid ""
"-e NB_GROUP=<name> - The name used for $NB_GID, which defaults to "
"$NB_USER.  This is only used if $NB_GID is specified and completely "
"optional: there is only cosmetic effect."
msgstr ""

# 4d57d0bd85ae417687747831670ec35f
#: ../../using/common.md:30 dc5bc38f490442ebb0999962e4ad09d2
msgid ""
"-e NB_UMASK=<umask> - Configures Jupyter to use a different umask value "
"from default, i.e. 022. For example, if setting umask to 002, new files "
"will be readable and writable by group members instead of just writable "
"by the owner. Wikipedia has a good article about umask. Feel free to read"
" it in order to choose the value that better fits your needs. Default "
"value should fit most situations. Note that NB_UMASK when set only "
"applies to the Jupyter process itself - you cannot use it to set a umask "
"for additional files created during run-hooks e.g. via pip or conda - if "
"you need to set a umask for these you must set umask for each command."
msgstr ""

# 580637e7f00d4a36b69ce3f6ec43370e
#: ../../using/common.md:31 cd95a1e0dc14409ab403ac23bdc496dd
msgid ""
"-e CHOWN_HOME=yes - Instructs the startup script to change the $NB_USER "
"home directory owner and group to the current value of $NB_UID and "
"$NB_GID. This change will take effect even if the user home directory is "
"mounted from the host using -v as described below. The change is not "
"applied recursively by default. You can change modify the chown behavior "
"by setting CHOWN_HOME_OPTS (e.g., -e CHOWN_HOME_OPTS='-R')."
msgstr ""

# 42bbfaf32b43482ba99263a74b383ac3
#: ../../using/common.md:32 fa3894c477c64526ac699687f08cfa34
msgid ""
"-e CHOWN_EXTRA=\"<some dir>,<some other dir>\" - Instructs the startup "
"script to change the owner and group of each comma-separated container "
"directory to the current value of $NB_UID and $NB_GID. The change is not "
"applied recursively by default. You can change modify the chown behavior "
"by setting CHOWN_EXTRA_OPTS (e.g., -e CHOWN_EXTRA_OPTS='-R')."
msgstr ""

# 399a6318e3724410a4dcc93cc9d8736d
#: ../../using/common.md:33 b09cd2fb99d0469daa91a5e0be7b34a6
msgid ""
"-e GRANT_SUDO=yes - Instructs the startup script to grant the NB_USER "
"user passwordless sudo capability. You do not need this option to allow "
"the user to conda or pip install additional packages. This option is "
"useful, however, when you wish to give $NB_USER the ability to install OS"
" packages with apt or modify other root-owned files in the container. For"
" this option to take effect, you must run the container with --user root."
" (The start-notebook.sh script will su $NB_USER after adding $NB_USER to "
"sudoers.) You should only enable sudo if you trust the user or if the "
"container is running on an isolated host."
msgstr ""

# 3c6485fef5d44f72b4693c1a3d1ec35c
#: ../../using/common.md:34 00c47723cc8e4f9989bae184bd92585d
msgid ""
"-e GEN_CERT=yes - Instructs the startup script to generates a self-signed"
" SSL certificate and configure Jupyter Notebook to use it to accept "
"encrypted HTTPS connections."
msgstr ""

# efe931ecaeac4348a6f0112a65371306
#: ../../using/common.md:35 f450d13e97b948b8b886ccb163ad5d82
msgid ""
"-e JUPYTER_ENABLE_LAB=yes - Instructs the startup script to run jupyter "
"lab instead of the default jupyter notebook command. Useful in container "
"orchestration environments where setting environment variables is easier "
"than change command line parameters."
msgstr ""

# fe40b3a059e54a53a7a5fde86441ae72
#: ../../using/common.md:36 872e60feedbd4984afe0dc536bfa5545
msgid ""
"-e RESTARTABLE=yes - Runs Jupyter in a loop so that quitting Jupyter does"
" not cause the container to exit.  This may be useful when you need to "
"install extensions that require restarting Jupyter."
msgstr ""

# bb82e70358e7452d86eb1b8e971fbf27
#: ../../using/common.md:37 f9e87698ae2747e5ad8b0e930501c048
msgid ""
"-v /some/host/folder/for/work:/home/jovyan/work - Mounts a host machine "
"directory as folder in the container. Useful when you want to preserve "
"notebooks and other work even after the container is destroyed. You must "
"grant the within-container notebook user or group (NB_UID or NB_GID) "
"write access to the host directory (e.g., sudo chown 1000 "
"/some/host/folder/for/work)."
msgstr ""

# 403f8e6101534bc0951bf5bb0b03c5a0
#: ../../using/common.md:38 c9d555a6733242deb665a93530b45241
msgid ""
"--user 5000 --group-add users - Launches the container with a specific "
"user ID and adds that user to the users group so that it can modify files"
" in the default home directory and /opt/conda. You can use these "
"arguments as alternatives to setting $NB_UID and $NB_GID."
msgstr ""

# 565fbbe944ed4e68a5e202eaf07d1402
#: ../../using/common.md:40 a82e0b7e1f6a43c0aa1cc201098d8832
msgid "Startup Hooks"
msgstr ""

# 70f6f3501e1b43d3a95e200c39eef8d2
#: ../../using/common.md:42 17c4e582aeb848cd9abb97c980b55d64
msgid ""
"You can further customize the container environment by adding shell "
"scripts (*.sh) to be sourced or executables (chmod +x) to be run to the "
"paths below:"
msgstr ""

# bdc8d9262aea4329b09bac1deb92d6da
#: ../../using/common.md:45 d1cf0a304ea24cab9448a7a60206a8f3
msgid ""
"/usr/local/bin/start-notebook.d/ - handled before any of the standard "
"options noted above are applied"
msgstr ""

# 786fba9678e24e3ba5ded6536dc0492a
#: ../../using/common.md:47 3e17cc830550401d9ef53d3061e6e4e1
msgid ""
"/usr/local/bin/before-notebook.d/ - handled after all of the standard "
"options noted above are applied and just before the notebook server "
"launches"
msgstr ""

# 5903b6a921cb42a9a8b6db0e9592769c
#: ../../using/common.md:50 e0c8c469cbf54de7bf1c2fe42b434a46
msgid ""
"See the run-hooks function in the jupyter/base-notebook start.sh script "
"for execution details."
msgstr ""

# ffb01f3597d1453bb0299e9a4a888757
#: ../../using/common.md:53 11395e168f07421db00f92441f00ef9b
msgid "SSL Certificates"
msgstr ""

# 7b1a34debd094e02930aa7197377b691
#: ../../using/common.md:55 3fff1aa577eb4cb4a7b988af85e4db4c
msgid ""
"You may mount SSL key and certificate files into a container and "
"configure Jupyter Notebook to use them to accept HTTPS connections. For "
"example, to mount a host folder containing a notebook.key and "
"notebook.crt and use them, you might run the following:"
msgstr ""

# e496d62ce1b7489eabf40a55471247b4
#: ../../using/common.md:65 3be15d1b59da41deb1ebbd871220d786
msgid ""
"Alternatively, you may mount a single PEM file containing both the key "
"and certificate. For example:"
msgstr ""

# 6ada67b7d1a34f59ad235d7e49e6a298
#: ../../using/common.md:74 905c90327ec643ab91a306164ab7e39d
msgid ""
"In either case, Jupyter Notebook expects the key and certificate to be a "
"base64 encoded text file. The certificate file or PEM may contain one or "
"more certificates (e.g., server, intermediate, and root)."
msgstr ""

# c908965cf0084fc2b276b50b47b87d18
#: ../../using/common.md:76 7c9ce67e898b4dea88777c91415b1b08
msgid "For additional information about using SSL, see the following:"
msgstr ""

# 11ef89b3d17b4bcf827e73a7ebb13756
#: ../../using/common.md:78 30468f20364a4e51b8910dfb16f433d0
msgid ""
"The docker-stacks/examples for information about how to use Let's Encrypt"
" certificates when you run these stacks on a publicly visible domain."
msgstr ""

# 4a42ccc5b624431bbacdc8c1d5624fb4
#: ../../using/common.md:79 8bf865e53f704ce2a6c420a5a2fadc3f
msgid ""
"The jupyter_notebook_config.py file for how this Docker image generates a"
" self-signed certificate."
msgstr ""

# 95d9c3081fa34def82e309c53ef2147b
#: ../../using/common.md:80 1d822938d89a48e59017b7b6d39fbcea
msgid ""
"The Jupyter Notebook documentation for best practices about securing a "
"public notebook server in general."
msgstr ""

# 9950b2e426414111ad46c6ba1e9d29bb
#: ../../using/common.md:82 10f85408cc59407abbc1ac29934c7b3d
msgid "Alternative Commands"
msgstr ""

# 2e90717352804ebd8086eef378fa411d
#: ../../using/common.md:84 1501e4b03b50414e9478d40ad232ae8e
msgid "start.sh"
msgstr ""

# 11637ea03062425e94964f2c70ed8676
#: ../../using/common.md:86 38a7d8b7b24447008275ca6649c24001
msgid ""
"The start-notebook.sh script actually inherits most of its option "
"handling capability from a more generic start.sh script. The start.sh "
"script supports all of the features described above, but allows you to "
"specify an arbitrary command to execute. For example, to run the text-"
"based ipython console in a container, do the following:"
msgstr ""

# ad0be3e8095e4394afb367e9e56e1ca5
#: ../../using/common.md:92 6cd5bf8fd86845d99ab31bf7f6ffa8ce
msgid "Or, to run JupyterLab instead of the classic notebook, run the following:"
msgstr ""

# 3d92501fb3b940b385ee986095610391
#: ../../using/common.md:98 63b9787b1f42433bb64015283b4f6438
msgid ""
"This script is particularly useful when you derive a new Dockerfile from "
"this image and install additional Jupyter applications with subcommands "
"like jupyter console, jupyter kernelgateway, etc."
msgstr ""

# ff1b1af310d54eedb852dc5eff7a4f7e
#: ../../using/common.md:100 38072813153d48ceb4632166093c5135
msgid "Others"
msgstr ""

# 127ffe0a552b4dafaa77d173883350d7
#: ../../using/common.md:102 a8bb6181d9044e938fb507e65f3db839
msgid ""
"You can bypass the provided scripts and specify an arbitrary start "
"command. If you do, keep in mind that features supported by the start.sh "
"script and its kin will not function (e.g., GRANT_SUDO)."
msgstr ""

# 1d8bc4b15c3044b3932e0df72dd694a7
#: ../../using/common.md:104 5fd07ddf321c4568b7eb4ab3e182614b
msgid "Conda Environments"
msgstr ""

# 97935ba423ed4a8787f9895f00015e4b
#: ../../using/common.md:106 12155fdd77844df091dd9ad96f67a258
msgid ""
"The default Python 3.x Conda environment resides in /opt/conda. The "
"/opt/conda/bin directory is part of the default jovyan user's $PATH. That"
" directory is also whitelisted for use in sudo commands by the start.sh "
"script."
msgstr ""

# a8fe459cc9ff43b3b2f31efd4587f145
#: ../../using/common.md:108 ffa3856793224ea982ffff00c2507972
msgid ""
"The jovyan user has full read/write access to the /opt/conda directory. "
"You can use either conda or pip to install new packages without any "
"additional permissions."
msgstr ""

# 36939901b3744e3fb67d2bae58ae8e25
#: ../../using/recipes.md:1 6455da5997db4ae880aa5ab0f26951ab
msgid "Contributed Recipes"
msgstr ""

# 8bc65b7f51f4442c95ea0dec5b4b2704
#: ../../using/recipes.md:3 f0b8955eaaa2489aaf81062ba1adfdb1
msgid ""
"Users sometimes share interesting ways of using the Jupyter Docker "
"Stacks. We encourage users to contribute these recipes to the "
"documentation in case they prove useful to other members of the community"
" by submitting a pull request to docs/using/recipes.md. The sections "
"below capture this knowledge."
msgstr ""

# 7447af86f4f3438ba413a7e9cc9764e5
#: ../../using/recipes.md:8 2acc24b6854547b7b6b9219c2fe07efc
msgid "Using sudo within a container"
msgstr ""

# ed8292c31667424184fe7515a30f79cd
#: ../../using/recipes.md:10 b8179781380e43c8ad9e163159e1cbd3
msgid ""
"Password authentication is disabled for the NB_USER (e.g., jovyan). This "
"choice was made to avoid distributing images with a weak default password"
" that users ~might~ will forget to change before running a container on a"
" publicly accessible host."
msgstr ""

# d22ae301bebb4857b866359ddbfb7e53
#: ../../using/recipes.md:14 06a6b22f564b4131a994ec3dac6486a5
msgid ""
"You can grant the within-container NB_USER passwordless sudo access by "
"adding -e GRANT_SUDO=yes and --user root to your Docker command line or "
"appropriate container orchestrator config."
msgstr ""

# f75300183d66418d958651b713e3c81e
#: ../../using/recipes.md:18 1e9d86da0e5b426bbde13b29d2f26699
msgid "For example:"
msgstr ""

# 909f17eb57bc4e4e8df8216423d9c008
#: ../../using/recipes.md:24 1b43edd0a70e4c87b4ce9932f734a996
msgid ""
"You should only enable sudo if you trust the user and/or if the container"
" is running on an isolated host."
msgstr ""

# 5b38bd48b58242788cc8b581b575241a
#: ../../using/recipes.md:27 d2cd2fa0aea24764bfd6895ce65a7b8a
msgid "Using pip install or conda install in a Child Docker image"
msgstr ""

# cfb1a65ed1a4453e8b3355f1c0c23b1c
#: ../../using/recipes.md:29 21d75ee6c08d48499e8fbedaac2bec1d
msgid "Create a new Dockerfile like the one shown below."
msgstr ""

# 3ab615dc6fb6425d954cae4ce14f08b9
#: ../../using/recipes.md:38 3053ab82269645f69c1dd27b512512b3
msgid "Then build a new image."
msgstr ""

# c35347a79a2e4a7faffe139767808965
#: ../../using/recipes.md:44 6511ec4410b94df1b52d83631bb0a11d
msgid ""
"To use a requirements.txt file, first create your requirements.txt file "
"with the listing of packages desired. Next, create a new Dockerfile like "
"the one shown below."
msgstr ""

# f2f035925d764425b9999b19d36c1d30
#: ../../using/recipes.md:57 85cd67c995f3447ea80eb10568d092f9
msgid "For conda, the Dockerfile is similar:"
msgstr ""

# fd2320ac3001480992ab2dd80285467b
#: ../../using/recipes.md:69 8212ebdbb522489a9718f2818f27d1a5
msgid "Ref: docker-stacks/commit/79169618d571506304934a7b29039085e77db78c"
msgstr ""

# 179407610520450ea0e4b566eac8ec96
#: ../../using/recipes.md:72 1573bfdb17ba4e91985237a1d81bd253
msgid "Add a Python 2.x environment"
msgstr ""

# 19bf98219e344b80b68fbf7f3aa68ec6
#: ../../using/recipes.md:74 3af8e6ee72b140ec8a8b9b7d66e4fe6b
msgid ""
"Python 2.x was removed from all images on August 10th, 2017, starting in "
"tag cc9feab481f7. You can add a Python 2.x environment by defining your "
"own Dockerfile inheriting from one of the images like so:"
msgstr ""

# be4f7d9b615d490c87cc6393ed0fabf2
#: ../../using/recipes.md:98 47a1a6cc45cd4d59bd7feb3c8dfd134c
msgid "Ref: https://github.com/jupyter/docker-stacks/issues/440"
msgstr ""

#: ../../using/recipes.md:101 300b2fa5e67347ecb1963e4ef26be8a3
msgid "Add a Python 3.x environment"
msgstr ""

#: ../../using/recipes.md:103 3b222dd4e64b415191fc416dbe384fde
msgid ""
"The default version of Python that ships with conda/ubuntu may not be the"
" version you want. To add a conda environment with a different version "
"and make it accessible to Jupyter, the instructions are very similar to "
"Python 2.x but are slightly simpler (no need to switch to root):"
msgstr ""

# 747e87a9067b4870bad5aa335ab39f7d
#: ../../using/recipes.md:142 c323ef3d52c440338bdf9f3ff1cb7da6
msgid "Run JupyterLab"
msgstr ""

# e062399bbaee4f1eb3ab48dcc60289b8
#: ../../using/recipes.md:144 47c63829ad7e460ba3b48562be1362ff
msgid ""
"JupyterLab is preinstalled as a notebook extension starting in tag "
"c33a7dc0eece."
msgstr ""

# 7c0f192d197143698dd371fff8fa3ceb
#: ../../using/recipes.md:147 b2c3733b2acd452b9daae41b9f517c62
msgid ""
"Run jupyterlab using a command such as docker run -it --rm -p 8888:8888 "
"jupyter/datascience-notebook start.sh jupyter lab"
msgstr ""

# e7842069e6ce432b9f1a12271e0ddc24
#: ../../using/recipes.md:150 aad3c0bddd784f868e0edd97d40caaa1
msgid "Let's Encrypt a Notebook server"
msgstr ""

# 4c00785b93734066b349b42b23c312af
#: ../../using/recipes.md:152 f5c7f5a3e1054cd58bc973e34d8e46aa
msgid ""
"See the README for the simple automation here https://github.com/jupyter"
"/docker-stacks/tree/master/examples/make-deploy which includes steps for "
"requesting and renewing a Let's Encrypt certificate."
msgstr ""

# c386f5913a78475487e9f12c76af9032
#: ../../using/recipes.md:156 bbcd4dba56064786996d4612ef9479f6
msgid "Ref: https://github.com/jupyter/docker-stacks/issues/78"
msgstr ""

# dd297c8f73a44707bf02064434a50a47
#: ../../using/recipes.md:159 079d0e845e2a4dac9922476c05aacaa7
msgid "Slideshows with Jupyter and RISE"
msgstr ""

# a1834343ae3045ea962e0efc80f69443
#: ../../using/recipes.md:161 2c1bb1b6199b4838a356552107cabc80
msgid ""
"RISE allows via extension to create live slideshows of your notebooks, "
"with no conversion, adding javascript Reveal.js:"
msgstr ""

# 6e0c67b18d3546a9ab024c5663aa8f90
#: ../../using/recipes.md:169 7cf4022fd43e49e187249f274d3f6a21
msgid "Credit: Paolo D. based on docker-stacks/issues/43"
msgstr ""

# 6bf66d68f2e5439b8403c0dd8ded40c5
#: ../../using/recipes.md:172 fee046bfb4984bfaae416f39cd846bb1
msgid "xgboost"
msgstr ""

# ce204678c3af4aa9a0fb55bb6de7554b
#: ../../using/recipes.md:174 deca0b088f724ff7851ed1a22b715a1a
msgid ""
"You need to install conda's gcc for Python xgboost to work properly. "
"Otherwise, you'll get an exception about libgomp.so.1 missing GOMP_4.0."
msgstr ""

# a9bc4b88bd3d4bc1a7832f31677c298a
#: ../../using/recipes.md:185 d11777ce1f3646caaf4ca0241dc7d8ba
msgid "Running behind a nginx proxy"
msgstr ""

# ca7763a5a35a47bd9fb29ae9d00feab3
#: ../../using/recipes.md:187 156c5987c6334d83be36673407e5ffc0
msgid ""
"Sometimes it is useful to run the Jupyter instance behind a nginx proxy, "
"for instance:"
msgstr ""

# dd58dbc3b08744a0b9415448d3bdbba6
#: ../../using/recipes.md:189 cbbed1e909754e40b4ed344051890066
msgid ""
"you would prefer to access the notebook at a server URL with a path "
"(https://example.com/jupyter) rather than a port "
"(https://example.com:8888)"
msgstr ""

# a5129fb6e2b042f5b8161ed5318123f9
#: ../../using/recipes.md:191 9c05942b35f849b5867a84d1308f6600
msgid ""
"you may have many different services in addition to Jupyter running on "
"the same server, and want to nginx to help improve server performance in "
"manage the connections"
msgstr ""

# cffd649e66ae4efb8122522e465ce3e3
#: ../../using/recipes.md:194 4dd81c9aac3640208363d1b4d0427c6d
msgid ""
"Here is a quick example NGINX configuration to get started. You'll need a"
" server, a .crt and .key file for your server, and docker & docker-"
"compose installed. Then just download the files at that gist and run "
"docker-compose up -d to test it out. Customize the nginx.conf file to set"
" the desired paths and add other services."
msgstr ""

# 7ba37cfc11224013a862d6519168acd0
#: ../../using/recipes.md:199 975f341f58ca4eb7aacfcb42939e0786
msgid "Host volume mounts and notebook errors"
msgstr ""

# 0fc6706374ee4a5d98517ec02ee24a03
#: ../../using/recipes.md:201 ce520516c8c84093b64ce6582b7e5ef1
msgid ""
"If you are mounting a host directory as /home/jovyan/work in your "
"container and you receive permission errors or connection errors when you"
" create a notebook, be sure that the jovyan user (UID=1000 by default) "
"has read/write access to the directory on the host. Alternatively, "
"specify the UID of the jovyan user on container startup using the -e "
"NB_UID option described in the Common Features, Docker Options section"
msgstr ""

# a6c910ab798b43ee91c0af160a3aadb6
#: ../../using/recipes.md:207 b3bb10e78a6d4d27b40b4c40fec612b0
msgid "Ref: https://github.com/jupyter/docker-stacks/issues/199"
msgstr ""

# 908924a0b4fa44d79fbca1413a0fb296
#: ../../using/recipes.md:210 a0a732da676f48c6b1362bf2f82c99c1
msgid "Manpage installation"
msgstr ""

# 7fc6566074ee4ba3a4e579437d7f151d
#: ../../using/recipes.md:212 c8b77422d3b94fb1b6d81ec7f541d95c
msgid ""
"Most containers, including our Ubuntu base image, ship without manpages "
"installed to save space. You can use the following dockerfile to inherit "
"from one of our images to enable manpages:"
msgstr ""

# fb4a0f5bc3534bd9bb8909ce6512f4dd
#: ../../using/recipes.md:238 037ed3c135ad4ae2bc89f8873a600e0b
msgid ""
"Adding the documentation on top of an existing singleuser image wastes a "
"lot of space and requires reinstalling every system package, which can "
"take additional time and bandwidth; the datascience-notebook image has "
"been shown to grow by almost 3GB when adding manapages in this way. "
"Enabling manpages in the base Ubuntu layer prevents this container bloat:"
msgstr ""

# 84b7fb0b5fd748ecba457f867a0e30bf
#: ../../using/recipes.md:263 6b20d57a35ab42aabf2b153bb116348f
msgid "Be sure to check the current base image in base-notebook before building."
msgstr ""

# 5764b06de0d941a585e5107f313235f4
#: ../../using/recipes.md:265 8c0c252f5542484e8764563ec6135d4f
msgid "JupyterHub"
msgstr ""

# af0ca920391b419b805ae3809388fcf2
#: ../../using/recipes.md:267 b6c7f49d584c475b9830cfe22a469716
msgid "We also have contributed recipes for using JupyterHub."
msgstr ""

# fbff97a16a2a4a53a69dd2d1c7dfbe91
#: ../../using/recipes.md:269 26c653db942d4d34a90f50bbf694cf32
msgid "Use JupyterHub's dockerspawner"
msgstr ""

# 81e1dbb4c1c34f4c9e88630adff3d1e9
#: ../../using/recipes.md:271 b985033fe1364bad8fb10394c9573c90
msgid ""
"In most cases for use with DockerSpawner, given any image that already "
"has a notebook stack set up, you would only need to add:"
msgstr ""

# 837b7a2dac01402e8cd2cc398bd5d785
#: ../../using/recipes.md:274 5c6006e4c5974b61ad51e013a5189ef4
msgid "install the jupyterhub-singleuser script (for the right Python)"
msgstr ""

# d9816cb5ae2041e2a5fde9cdfb91262f
#: ../../using/recipes.md:275 bacf617fb03c40df8b8c5e13473fc1cb
msgid "change the command to launch the single-user server"
msgstr ""

# 8b1bc94531e7490fbaa012f5c4a257bd
#: ../../using/recipes.md:277 70db82b143e04a8d893fcbfbabd0030c
msgid ""
"Swapping out the FROM line in the jupyterhub/singleuser Dockerfile should"
" be enough for most cases."
msgstr ""

# ce864521fffa4c89b7584d24296515d5
#: ../../using/recipes.md:280 147dd0ae06f64830abbea9ca44d20a83
msgid ""
"Credit: Justin Tyberg, quanghoc, and Min RK based on docker-"
"stacks/issues/124 and docker-stacks/pull/185"
msgstr ""

# 6a5d92e7b071449686d148be90544e64
#: ../../using/recipes.md:285 43414a5b2ef24cd3b0595d7b65ca0872
msgid "Containers with a specific version of JupyterHub"
msgstr ""

# 091b62f4a91c4d87b92554795a00744c
#: ../../using/recipes.md:287 b803eb8657de4b1a9ace1412682ce32b
msgid ""
"To use a specific version of JupyterHub, the version of jupyterhub in "
"your image should match the version in the Hub itself."
msgstr ""

# 67db6ce9d62f499a9d9aaf675a86cddc
#: ../../using/recipes.md:295 c4c7294b579f4305bf566e7ea80f9152
msgid "Credit: MinRK"
msgstr ""

# d4613cff20a140cbbbacc84ada8fcd87
#: ../../using/recipes.md:297 b588433dd3ea4621ae3802e38d96a3f4
msgid "Ref: https://github.com/jupyter/docker-stacks/issues/177"
msgstr ""

# 19439bd85c2946bb89f385651f8283dc
#: ../../using/recipes.md:300 a984c0d442584480b4aa95d13479cfc0
msgid "Spark"
msgstr ""

# 975c96d6a0b843dfabd889c753671c93
#: ../../using/recipes.md:302 7f761b10084b4de182bd379b3c655056
msgid "A few suggestions have been made regarding using Docker Stacks with spark."
msgstr ""

# 9c295c93db724e5fb11a8f870f805f41
#: ../../using/recipes.md:304 ef8d904a3dec4863954d9410250a57af
msgid "Using PySpark with AWS S3"
msgstr ""

# dc4059d42eaa495f8ebca84ebc91ac09
#: ../../using/recipes.md:306 c5672957c6f94f83879debc84703f54f
msgid "Using Spark session for hadoop 2.7.3"
msgstr ""

# d2c12e3525bf4d9ca518fef02c4a79d3
#: ../../using/recipes.md:326 69c00dda317d4f448be7e955ee933793
msgid "Using Spark context for hadoop 2.6.0"
msgstr ""

# 59f08373c7354fa4bb5b7c10441b5d69
#: ../../using/recipes.md:348 e8112055a74449209392686a70ede073
msgid "Ref: https://github.com/jupyter/docker-stacks/issues/127"
msgstr ""

# c32dccc031664268983f72ed7927beff
#: ../../using/recipes.md:351 771e77e0dc224916bcd1b9e52a1681ed
msgid "Using Local Spark JARs"
msgstr ""

# 19614ffa973f49bab235cb5ac9cdf259
#: ../../using/recipes.md:367 351212efa46f49db9139e522437199b7
msgid "Ref: https://github.com/jupyter/docker-stacks/issues/154"
msgstr ""

# fc70801958a34e5aa578388147a8a1fb
#: ../../using/recipes.md:370 4bf696e13a0a40f6aa4bf824f91c2774
msgid "Using spark-packages.org"
msgstr ""

# 031b9633ca0849e9a9035f4fa5ec2d29
#: ../../using/recipes.md:372 e3d31685321f466b835f5be3902ec0bd
msgid ""
"If you'd like to use packages from spark-packages.org, see "
"https://gist.github.com/parente/c95fdaba5a9a066efaab for an example of "
"how to specify the package identifier in the environment before creating "
"a SparkContext."
msgstr ""

# 08c4d39ccfa84551af78867ab37d3f18
#: ../../using/recipes.md:377 88418150c371458597ce5783086ebade
msgid "Ref: https://github.com/jupyter/docker-stacks/issues/43"
msgstr ""

# 285d9bf0eefb480386dfdcd55fd76ef5
#: ../../using/recipes.md:380 6e286874432a480ba83879d3aa2a5b1b
msgid "Use jupyter/all-spark-notebooks with an existing Spark/YARN cluster"
msgstr ""

# 1b1c743d85d542989f6a8f2c97a588d3
#: ../../using/recipes.md:444 61fca671eafb410fa2461db0b085d649
msgid "Credit: britishbadger from docker-stacks/issues/369"
msgstr ""

# 06d2e360eccb489abeeebada6c0b41eb
#: ../../using/recipes.md:447 c4161db25e7e4d7681e72e51597c33b6
msgid ""
"Run Jupyter Notebook/Lab inside an already secured environment (i.e., "
"with no token)"
msgstr ""

# 42dd63565c4a4f67825f675972554d34
#: ../../using/recipes.md:449 52ad712365ea45c596c4a6470fe48d79
msgid "(Adapted from issue 728)"
msgstr ""

# 8af2ceb1414f46e1802681695b5917f8
#: ../../using/recipes.md:451 d570950aea9b4c2ea793dcbfb518ecc5
msgid ""
"The default security is very good. There are use cases, encouraged by "
"containers, where the jupyter container and the system it runs within, "
"lie inside the security boundary. In these use cases it is convenient to "
"launch the server without a password or token. In this case, you should "
"use the start.sh script to launch the server with no token:"
msgstr ""

# 7476a6d5eae74ecaae966e56390c096e
#: ../../using/recipes.md:456 65f055ccd2ce41068f57227db675851b
msgid "For jupyterlab:"
msgstr ""

# f2efc5a0ba6b4c53b2047cc5f22bdbaa
#: ../../using/recipes.md:462 2b87a9c9f697436eae7b5e22b50601d4
msgid "For jupyter classic:"
msgstr ""

# 158396013982441e9e62402c499dfb11
#: ../../using/recipes.md:468 229feef769a14cd7a9fc88bbe4f13273
msgid "Enable nbextension spellchecker for markdown (or any other nbextension)"
msgstr ""

# 8ccfbcb4264f48d0b6709fe81aa0a86d
#: ../../using/recipes.md:470 6777263229974181a79742de9751b6a6
msgid "NB: this works for classic notebooks only"
msgstr ""

# 78ba1c20de2445fb9b76ec6202e4d794
#: ../../using/recipes.md:484 866eb33a68534be7b67052a612ae3cd1
msgid "Ref: https://github.com/jupyter/docker-stacks/issues/675"
msgstr ""

# f66d723263124285a641f0dee8a41565
#: ../../using/running.md:1 c540b41f3a514eebae3a67e19b273137
msgid "Running a Container"
msgstr ""

# 1f345e7a53e94439b936b3f4bbc877da
# 324906e630c646b0ae10bbff6ed587fa
#: ../../using/running.md:3 ../../using/selecting.md:7
#: 685760868dba4461b991bb9dc2195f8a fa05c80b2a934f71947d5ccac5129fa2
msgid "Using one of the Jupyter Docker Stacks requires two choices:"
msgstr ""

# 781cbaffaea24fb08451cc83327cfa9b
# 1c6c83776a3b4a27a8ed4128a0dceeb7
#: ../../using/running.md:5 ../../using/selecting.md:9
#: 62816237a2934251aab0956be4d3344b 87acbce3484341249f337d42db451feb
msgid "Which Docker image you wish to use"
msgstr ""

# 632f67c9207e4ed9ba01bf59c4d942f7
# ab191cfc95204429b7c0271ecdf69d33
#: ../../using/running.md:6 ../../using/selecting.md:10
#: a571698f2f0944dcb649ce566b4bba76 b24d6fd48c074beda0c2f64f1ff19a69
msgid "How you wish to start Docker containers from that image"
msgstr ""

# ebf870aa1ede4e2ab8fdcb2cef0fd610
#: ../../using/running.md:8 189924f848e14f33aa90b01218908078
msgid "This section provides details about the second."
msgstr ""

# 3a614d7e864741199c1223a26fc37c03
#: ../../using/running.md:10 c483b54e481e4e3e8dace6273d43f38a
msgid "Using the Docker CLI"
msgstr ""

# 3039d667df25426b84be7ab9d920cfee
#: ../../using/running.md:12 0f9f6e7e8efa4946a878a3636957a214
msgid ""
"You can launch a local Docker container from the Jupyter Docker Stacks "
"using the Docker command line interface. There are numerous ways to "
"configure containers using the CLI. The following are some common "
"patterns."
msgstr ""

# 0ea4263c502142b2b3fa7f55a917af19
#: ../../using/running.md:14 7c51a4a862d54cea8f245cb20b3a6ca2
msgid ""
"Example 1 This command pulls the jupyter/scipy-notebook image tagged "
"2c80cf3537ca from Docker Hub if it is not already present on the local "
"host. It then starts a container running a Jupyter Notebook server and "
"exposes the server on host port 8888. The server logs appear in the "
"terminal and include a URL to the notebook server."
msgstr ""

# 402a9d9ecccb479994d2903710aabaa6
#: ../../using/running.md:36 a2c575a398c54717895a47bdf151cd35
msgid ""
"Pressing Ctrl-C shuts down the notebook server but leaves the container "
"intact on disk for later restart or permanent deletion using commands "
"like the following:"
msgstr ""

# fe38eef5fbe24b90ab070cefeef42230
#: ../../using/running.md:55 2596ffd7108f47d6b0fb74ed23b295ef
msgid ""
"Example 2 This command pulls the jupyter/r-notebook image tagged "
"e5c5a7d3e52d from Docker Hub if it is not already present on the local "
"host. It then starts a container running a Jupyter Notebook server and "
"exposes the server on host port 10000. The server logs appear in the "
"terminal and include a URL to the notebook server, but with the internal "
"container port (8888) instead of the the correct host port (10000)."
msgstr ""

# d911c29555904311b29d8eb79fcb9843
#: ../../using/running.md:77 653baef24957477a8950f173ec75d9bc
msgid ""
"Pressing Ctrl-C shuts down the notebook server and immediately destroys "
"the Docker container. Files written to ~/work in the container remain "
"touched. Any other changes made in the container are lost."
msgstr ""

# 718d037e82a64d69aea592f76b3f047b
#: ../../using/running.md:79 b90b3d5c31db4719a082e62f330168b6
msgid ""
"Example 3 This command pulls the jupyter/all-spark-notebook image "
"currently tagged latest from Docker Hub if an image tagged latest is not "
"already present on the local host. It then starts a container named "
"notebook running a JupyterLab server and exposes the server on a randomly"
" selected port."
msgstr ""

# 9a561b9bb5944059801c71862521d66a
#: ../../using/running.md:85 07a9c29dc6fb4469a2e55445e268e242
msgid ""
"The assigned port and notebook server token are visible using other "
"Docker commands."
msgstr ""

# c4bc333e19324e2a93118e21b1f8f360
#: ../../using/running.md:99 373c133016274f0b8455f9d26d3b2ff3
msgid ""
"Together, the URL to visit on the host machine to access the server in "
"this case is "
"http://localhost:32769?token=15914ca95f495075c0aa7d0e060f1a78b6d94f70ea373b00."
msgstr ""

# bf82931e197b40ad940d9969993120a2
#: ../../using/running.md:101 e203033cdf7f45678b7325429d572b8d
msgid ""
"The container runs in the background until stopped and/or removed by "
"additional Docker commands."
msgstr ""

# f9627b2638ec498ebfd06d0475e1dc4c
#: ../../using/running.md:113 c1b5c340b3a7435ea1c8e664dc2c2cab
msgid "Using Binder"
msgstr ""

# 6e355acc72ca41a2aca2972df65259c7
#: ../../using/running.md:115 1c57772e0fb14498bdc5dfbf865ca1cc
msgid ""
"Binder is a service that allows you to create and share custom computing "
"environments for projects in version control. You can use any of the "
"Jupyter Docker Stacks images as a basis for a Binder-compatible "
"Dockerfile. See the docker-stacks example and Using a Dockerfile sections"
" in the Binder documentation for instructions."
msgstr ""

# d6f8d0ee10b542488dce87b84eb48036
#: ../../using/running.md:117 1b6b010d01e644158f369a7e8180325f
msgid "Using JupyterHub"
msgstr ""

# ef9a37b25db542dea89c9c1fb31c18cd
#: ../../using/running.md:119 3bb9fa5f30c74845ae5041f805346a72
msgid ""
"You can configure JupyterHub to launcher Docker containers from the "
"Jupyter Docker Stacks images. If you've been following the Zero to "
"JupyterHub with Kubernetes guide, see the Use an existing Docker image "
"section for details. If you have a custom JupyterHub deployment, see the "
"Picking or building a Docker image instructions for the dockerspawner "
"instead."
msgstr ""

# bf63b713aece4a7eacc2ad77f6f47c2c
#: ../../using/running.md:121 72baefb228c74c49b571149ebc86151c
msgid "Using Other Tools and Services"
msgstr ""

# fcce8862fc7a41a394c1e19d35363653
#: ../../using/running.md:123 65dac6cf5d7e4022aa7c7f0687e46b0b
msgid ""
"You can use the Jupyter Docker Stacks with any Docker-compatible "
"technology (e.g., Docker Compose, docker-py, your favorite cloud "
"container service). See the documentation of the tool, library, or "
"service for details about how to reference, configure, and launch "
"containers from these images."
msgstr ""

# 75674f1f85cb43bcbc020de3b84f18f7
#: ../../using/selecting.md:1 8db14e6cbd8747bd84423c81bbe67c3e
msgid "Selecting an Image"
msgstr ""

# 686b01e6feaf4363930c16cecff5f462
# cdbd4076608348a182dc09701223093a
#: ../../using/selecting.md:3 ../../using/selecting.md:14
#: 1e13810e802d46589dbd7b8ac1d6a50c f2c6d853622c4a7199a27356bf4dc464
msgid "Core Stacks"
msgstr ""

# daaad3b4f13e4c6395b0e9186c73030d
# d0275f3e7b07428a85c62db44d774d71
#: ../../using/selecting.md:4 ../../using/selecting.md:123
#: 193ca537cdf847fc9a33e62eb6a5a8d9 8e0e69295d8b443d8b837dd641cd7501
msgid "Image Relationships"
msgstr ""

# 892152661ffc4ea096ba152334ff086f
# a6f02cacf6334057bdb5eb1339411a32
#: ../../using/selecting.md:5 ../../using/selecting.md:141
#: 1899f93b909c42aa8572bdff6f5bed4f edd3ce1cfe2b46e59c11031421cecb65
msgid "Community Stacks"
msgstr ""

# af7e19bb10ec44348e8121be4129ce8a
#: ../../using/selecting.md:12 0cac1e1de3ae4fac9379ee793fcf6172
msgid "This section provides details about the first."
msgstr ""

# fc2fca9d04f442e9a313123cec1174ff
#: ../../using/selecting.md:16 7ea53fb1c68c4fae91c7745f36fbe442
msgid ""
"The Jupyter team maintains a set of Docker image definitions in the "
"https://github.com/jupyter/docker-stacks GitHub repository. The following"
" sections describe these images including their contents, relationships, "
"and versioning strategy."
msgstr ""

# 4e9d03b93e964d16b23b30610d17b3e2
#: ../../using/selecting.md:18 00814813d0a5411cafb72333bf94caed
msgid "jupyter/base-notebook"
msgstr ""

# f43dd3334aac4971a67e5bb833dafcb8
# 93db5d969cea480a827c0d6d028fc717
# 4ff6dbde14924b73b3a54bdb94096ba2
# da116e35b2494285abe8447ab372324b
# 6fb499ae6636492b979bad5a17733c4b
# c10b1e6040c84241a77edb90ea3306a4
# 227408f175a24d1cb70e69ca32f11434
# b8ff65660ef14b0692edbe3a2fdff42b
# b50d8b1a5d3849279bcbda725f9f8e62
#: ../../using/selecting.md:20 ../../using/selecting.md:37
#: ../../using/selecting.md:49 ../../using/selecting.md:63
#: ../../using/selecting.md:76 ../../using/selecting.md:87
#: ../../using/selecting.md:100 ../../using/selecting.md:112
#: ../../using/selecting.md:151 004abb1a959840db8de92ad91d9c3011
#: 2b12483148e0492e8759591286468775 309ffddc6a2141818f1cd919267d0255
#: 3ab8ac2172a14449b4a314e6f49014b6 6670829536654ada8656391407e42623
#: a60509b081864f038dc90799258af0e2 b1dca580d9b048b58f772846e75f73f5
#: d5cdb1983ac346549d7e11b5e7c37235 f93f3512779a4e0a8d399e18e1544bc1
msgid "Source on GitHub | Dockerfile commit history | Docker Hub image tags"
msgstr ""

# eea41b7365bd4751ae599beb4edfa168
#: ../../using/selecting.md:24 1efdd86f6ee8410595479c20fd176e87
msgid ""
"jupyter/base-notebook is a small image supporting the options common "
"across all core stacks. It is the basis for all other stacks."
msgstr ""

# facfb37f7fa64b85930d8f12fdeef2dd
#: ../../using/selecting.md:26 a77ebc1d0bc6465f9413c6e3de50ba19
msgid ""
"Minimally-functional Jupyter Notebook server (e.g., no pandoc for saving "
"notebooks as PDFs)"
msgstr ""

# e90347274dd1459383e31a40bc6685f2
#: ../../using/selecting.md:27 5598188396554031970d8dfbd5352f65
msgid "Miniconda Python 3.x in /opt/conda"
msgstr ""

# c5732a5536554f91b8dd7e8946beaab8
#: ../../using/selecting.md:28 5df0d18b5f82471b8c3b59d39f30e5c0
msgid "No preinstalled scientific computing packages"
msgstr ""

# 0396d289dcdd49788f06c18efeca5013
#: ../../using/selecting.md:29 29fc2ab02e53491bb59cba6caf7b3392
msgid ""
"Unprivileged user jovyan (uid=1000, configurable, see options) in group "
"users (gid=100) with ownership over the /home/jovyan and /opt/conda paths"
msgstr ""

# 0e9211b01ef94b66bad9288682e1a833
#: ../../using/selecting.md:30 fc54deccb34b4d05a0d021345cf63536
msgid ""
"tini as the container entrypoint and a start-notebook.sh script as the "
"default command"
msgstr ""

# e38b63a14dae4b718a94c6e0523daf1e
#: ../../using/selecting.md:31 3efe8b5b22944c3ea35d21499de21b90
msgid "A start-singleuser.sh script useful for launching containers in JupyterHub"
msgstr ""

# 0a603f43d1b34be28d2c1002f6686fda
#: ../../using/selecting.md:32 831aa64e551546a9bbec708d7f54ba18
msgid ""
"A start.sh script useful for running alternative commands in the "
"container (e.g. ipython, jupyter kernelgateway, jupyter lab)"
msgstr ""

# 075e6ffe0f5b4d508d555992f5dd6fe1
#: ../../using/selecting.md:33 d02d7dea6167405381909e3a515093e0
msgid "Options for a self-signed HTTPS certificate and passwordless sudo"
msgstr ""

# 9cff5da6908e42d5a7da093ba0bfcfe7
#: ../../using/selecting.md:35 4c09acf8d98b478f81ae3b1858835565
msgid "jupyter/minimal-notebook"
msgstr ""

# 8596676795f142d2912833d1320aa6a0
#: ../../using/selecting.md:41 79718ff1e3df4ebaacb29dcc8067f90d
msgid ""
"jupyter/minimal-notebook adds command line tools useful when working in "
"Jupyter applications."
msgstr ""

# b1167e8a2430451fbb41ea876714d541
#: ../../using/selecting.md:43 2018837abee54fda853b97534661cdee
msgid "Everything in jupyter/base-notebook"
msgstr ""

# c46294c22bd44a86ac08b977f060a21d
#: ../../using/selecting.md:44 0bb0d6dcd1a041e4998ed53bf8db6448
msgid "Pandoc and TeX Live for notebook document conversion"
msgstr ""

# ad6fec23e1bf4a42b0cafd2f15e74574
#: ../../using/selecting.md:45 720522bfbd4e4918b3ab19e55b310898
msgid "git, emacs, jed, nano, tzdata, and unzip"
msgstr ""

# 1c7363e9e14148f7a302b0075598590a
#: ../../using/selecting.md:47 b837aae5a8c84de889d306fb0e7a4dbf
msgid "jupyter/r-notebook"
msgstr ""

# a6bc72d21b0c4102b16a38df077a48dd
#: ../../using/selecting.md:53 a8bbb6d8595c4de7a1e07edc6fefae93
msgid "jupyter/r-notebook includes popular packages from the R ecosystem."
msgstr ""

# bfe937844bef465081bdd0cc74064b77
# eb5808624ae249d5aa6b1b06350035dc
#: ../../using/selecting.md:55 ../../using/selecting.md:69
#: 49f409ff895747b1a200a30c7eb09ffd 849f265153ae4e67bf9b98639236a40e
msgid "Everything in jupyter/minimal-notebook and its ancestor images"
msgstr ""

# db6a08c9a21f4e1eae1f4a7c7656a60d
#: ../../using/selecting.md:56 5f272f5c40c943d387b3d3f17161ba83
msgid "The R interpreter and base environment"
msgstr ""

# c1cf2ef729d04aacbbf220cbe78edb07
# 486896c4482443dcb0f7408c888f29e9
#: ../../using/selecting.md:57 ../../using/selecting.md:119
#: 48287f74f06144a093a06a3f3a0de4d9 8b34613d12e2464abf26fa30eebd3cfd
msgid "IRKernel to support R code in Jupyter notebooks"
msgstr ""

# ce8993612e2e44aea34dedc24740025d
#: ../../using/selecting.md:58 729d3f82d62644d3bf7e800c89dd1333
msgid ""
"tidyverse packages, including ggplot2, dplyr, tidyr, readr, purrr, "
"tibble, stringr, lubridate, and broom from conda-forge"
msgstr ""

# dcf536112dad48369dbd06c240f5b337
#: ../../using/selecting.md:59 c6ad7a52dbeb4314bf2c31bed330a262
msgid ""
"plyr, devtools, shiny, rmarkdown, forecast, rsqlite, reshape2, "
"nycflights13, caret, rcurl, and randomforest packages from conda-forge"
msgstr ""

# 3e8e6435e2b64a9fb9be8fe252ed2f3a
#: ../../using/selecting.md:61 16e4a23496394c3c96fc7584038ba88c
msgid "jupyter/scipy-notebook"
msgstr ""

# 7d06f0f385c844389eabb820a73b9cf1
#: ../../using/selecting.md:67 72ca56d2bf7c4db7978c57686db3b7c5
msgid ""
"jupyter/scipy-notebook includes popular packages from the scientific "
"Python ecosystem."
msgstr ""

# 9b123df88f864a9f8bd0472877a47a23
#: ../../using/selecting.md:70 9942fdfd55d94d50a3ea232f53e60b7f
msgid ""
"pandas, numexpr, matplotlib, scipy, seaborn, scikit-learn, scikit-image, "
"sympy, cython, patsy, statsmodel, cloudpickle, dill, numba, bokeh, "
"sqlalchemy, hdf5, vincent, beautifulsoup, protobuf, and xlrd packages"
msgstr ""

# 577f93f6511a4b17afcef782def7f802
#: ../../using/selecting.md:71 3ee10a05c31d4cb88badf0b8b21037e9
msgid "ipywidgets for interactive visualizations in Python notebooks"
msgstr ""

# 538f0c0d60e84ac7b96c747c780dfd9e
#: ../../using/selecting.md:72 97902cddf52842d8865b974d07e18ad8
msgid "Facets for visualizing machine learning datasets"
msgstr ""

# 91f89dafe55d46219648e753b94f3054
#: ../../using/selecting.md:74 5c9f0b503a964f1fa706df1afbffab05
msgid "jupyter/tensorflow-notebook"
msgstr ""

# 183ce48c172144bc91143bc63797512d
#: ../../using/selecting.md:80 304c744d6b284f7ab8173ad5ceca8d45
msgid ""
"jupyter/tensorflow-notebook includes popular Python deep learning "
"libraries."
msgstr ""

# 5406ba3cf8a644a79a678c7968ef36cc
# 7dad34e3954840d69b1c418bfdc475c5
#: ../../using/selecting.md:82 ../../using/selecting.md:106
#: 01f6cfe1dcbf434caea7171b227d6718 cf10204e2f744e29a8b6a9b7c3db4ad7
msgid "Everything in jupyter/scipy-notebook and its ancestor images"
msgstr ""

# 7698f92c854b4324a3371453e3ee1878
#: ../../using/selecting.md:83 16cb2c227d934a29afaec44ac25907c7
msgid "tensorflow and keras machine learning libraries"
msgstr ""

# e1403de76d344f4d93bd47a91dd00428
#: ../../using/selecting.md:85 73d022224ec54db29ee5eddf4e893aa3
msgid "jupyter/datascience-notebook"
msgstr ""

# 2bd4e59533d04b86846cea01ccf36ed4
#: ../../using/selecting.md:91 52d93678a35540b0bd0c545a5f59ac9a
msgid ""
"jupyter/datascience-notebook includes libraries for data analysis from "
"the Julia, Python, and R communities."
msgstr ""

# ba7ecdc5c2444acd86073ac84157e7cf
#: ../../using/selecting.md:93 3ac8cc94ad0040f29c1d20c17b280d14
msgid ""
"Everything in the jupyter/scipy-notebook and jupyter/r-notebook images, "
"and their ancestor images"
msgstr ""

# bfa2ae2246be45fdb389767d6f74baa6
#: ../../using/selecting.md:94 a9e26eddc80745a297f3fa3906fda97d
msgid "The Julia compiler and base environment"
msgstr ""

# 31750842f94747f4a0ebd0ca4ac8f2af
#: ../../using/selecting.md:95 142d8ade218346b399ceb3505aa9d7de
msgid "IJulia to support Julia code in Jupyter notebooks"
msgstr ""

# d8985019373a4360a66ce8c6e32056fa
#: ../../using/selecting.md:96 15c9bc4082c5424099739248fae0ee19
msgid "HDF5, Gadfly, and RDatasets packages"
msgstr ""

# 051a6e882e974e599bc0221add5e0c50
#: ../../using/selecting.md:98 fd78c8da8958499982db13b7bcf17f5d
msgid "jupyter/pyspark-notebook"
msgstr ""

# a1a474f29c9047d6bb99e9a41e789351
#: ../../using/selecting.md:104 cccef2ef1a5246998e4f04e455bdf010
msgid ""
"jupyter/pyspark-notebook includes Python support for Apache Spark, "
"optionally on Mesos."
msgstr ""

# 6d585f39fb334a5c95c7f9864baea8a9
#: ../../using/selecting.md:107 791fa3ac7793485caf282c6c14839bb7
msgid "Apache Spark with Hadoop binaries"
msgstr ""

# 33bbd9311c5640008e775210d3f75097
#: ../../using/selecting.md:108 d52aada42f244082a5e0ef42867de15e
msgid "Mesos client libraries"
msgstr ""

# dcdbe62ca177455881f879d5809648d9
#: ../../using/selecting.md:110 5ed5b492e30e41959227d31593dc5b52
msgid "jupyter/all-spark-notebook"
msgstr ""

# 954fbce53b9d4e3c90c88a65e7d138bd
#: ../../using/selecting.md:116 fee768c4c66945b3ba31914bc0c0b4c0
msgid ""
"jupyter/all-spark-notebook includes Python, R, and Scala support for "
"Apache Spark, optionally on Mesos."
msgstr ""

# 671183aa9bcb4f4ba34933a4cc0e28c0
#: ../../using/selecting.md:118 443a06ee94be4854a1fc26a58fbae8d6
msgid "Everything in jupyter/pyspark-notebook and its ancestor images"
msgstr ""

# 0114a45f63054b1e9a56aff6c04bd670
#: ../../using/selecting.md:120 64e462ead50342debd9c15c04f42b5b8
msgid "Apache Toree and spylon-kernel to support Scala code in Jupyter notebooks"
msgstr ""

# aa21cb83205c4045960bcfd3f3fc1542
#: ../../using/selecting.md:121 8d4ad513707844498a5ee2725f683592
msgid "ggplot2, sparklyr, and rcurl packages"
msgstr ""

# 07d86ef0562f455abb691bffeaca467f
#: ../../using/selecting.md:125 922ebca33fc74c5fa758322c38f51cac
msgid ""
"The following diagram depicts the build dependency tree of the core "
"images. (i.e., the FROM statements in their Dockerfiles). Any given image"
" inherits the complete content of all ancestor images pointing to it."
msgstr ""

# fbf5d0a65b8748a5ba1b29a0e43ce9f4
#: ../../using/selecting.md:129 db363910b39140cf9b2157308f550acd
msgid "Builds"
msgstr ""

# 75fc61a8cc874e9196ee00f7af15bb0b
#: ../../using/selecting.md:131 a81909bc01c04af79ec202ebd131c447
msgid ""
"Pull requests to the jupyter/docker-stacks repository trigger builds of "
"all images on Travis CI. These images are for testing purposes only and "
"are not saved for use. When pull requests merge to master, all images "
"rebuild on Docker Cloud and become available to docker pull from Docker "
"Hub."
msgstr ""

# d226a5a7f673440cbe70097864dda848
#: ../../using/selecting.md:133 aa669e1a9b314ae3821b51ea7c3c3559
msgid "Versioning"
msgstr ""

# 34b4f765c48944bd939679eeb9810497
#: ../../using/selecting.md:135 1f660470f49d4b68adfcf146123011b9
msgid ""
"The latest tag in each Docker Hub repository tracks the master branch "
"HEAD reference on GitHub. latest is a moving target, by definition, and "
"will have backward-incompatible changes regularly."
msgstr ""

# 7ea772c3bc1d4463b29db3b57e48be8d
#: ../../using/selecting.md:137 8af1005404ec40a1a129b8f62b02b336
msgid ""
"Every image on Docker Hub also receives a 12-character tag which "
"corresponds with the git commit SHA that triggered the image build. You "
"can inspect the state of the jupyter/docker-stacks repository for that "
"commit to review the definition of the image (e.g., images with tag "
"7c45ec67c8e7 were built from https://github.com/jupyter/docker-"
"stacks/tree/7c45ec67c8e7)."
msgstr ""

# 5fd22c23fa3b430fb6c2259e962b02fd
#: ../../using/selecting.md:139 82d782ecc09a426aa5257a9e693272ae
msgid ""
"You must refer to git-SHA image tags when stability and reproducibility "
"are important in your work. (e.g. FROM jupyter/scipy-"
"notebook:7c45ec67c8e7, docker run -it --rm jupyter/scipy-"
"notebook:7c45ec67c8e7). You should only use latest when a one-off "
"container instance is acceptable (e.g., you want to briefly try a new "
"library in a notebook)."
msgstr ""

# a448d28293544f72b0e5de024b0a1ef5
#: ../../using/selecting.md:143 723419758a454e978eb0bd6dc2f30dec
msgid ""
"The core stacks are just a tiny sample of what's possible when combining "
"Jupyter with other technologies. We encourage members of the Jupyter "
"community to create their own stacks based on the core images and link "
"them below."
msgstr ""

# cf34bef9989940dda5de9dc026732a4c
#: ../../using/selecting.md:145 f431d14703034f538c96170eea716966
msgid ""
"csharp-notebook is a community Jupyter Docker Stack image. Try C# in "
"Jupyter Notebooks. The image includes more than 200 Jupyter Notebooks "
"with example C# code and can readily be tried online via mybinder.org. "
"Click here to launch ."
msgstr ""

# e5c4a7b08c2f4b34b361a923f9fb3dbd
#: ../../using/selecting.md:147 877b9a419e7b4ea9b83e3797b47ca3e9
msgid ""
"education-notebook is a community Jupyter Docker Stack image. The image "
"includes nbgrader and RISE on top of the datascience-notebook image. "
"Click here to launch it on ."
msgstr ""

# 8a550c70c3454d72b976cabc1cbdf465
#: ../../using/selecting.md:149 71c277d47acf425e872a7780d1c8ae55
msgid "crosscompass/ihaskell-notebook"
msgstr ""

# 997dafa5bad846f49a7eee78001ed3fc
#: ../../using/selecting.md:155 153bef5e5aaa46eabd3782b94679a4b0
msgid ""
"crosscompass/ihaskell-notebook is based on IHaskell. Includes popular "
"packages and example notebooks."
msgstr ""

# 9af612ef9b1847e9a537228c2d3bc77d
#: ../../using/selecting.md:157 84b78e5ea35147fab2f15c7fa367cfc3
msgid "Try it on binder:"
msgstr ""

# d514a88096544a2ca92ceaf14b1323eb
#: ../../using/selecting.md:159 147937a3e03944abb3a1bfa18c0cf03c
msgid ""
"java-notebook is a community Jupyter Docker Stack image. The image "
"includes IJava kernel on top of the minimal-notebook image. Click here to"
" launch it on ."
msgstr ""

# e5b3d27fa68b47d4a2c02c7a039d7daf
#: ../../using/selecting.md:161 672bfc2e3c3f403191c6f305172b6e50
msgid ""
"sage-notebook is a community Jupyter Docker Stack image with the sagemath"
" kernel on top of the minimal-notebook image. Click here to launch it on "
"."
msgstr ""

#: ../../using/selecting.md:163 c983c62eceaf41829e6e5d2612ffe17f
msgid ""
"GPU-Jupyter: Leverage Jupyter Notebooks with the power of your NVIDIA GPU"
" and perform GPU calculations using Tensorflow and Pytorch in "
"collaborative notebooks. This is done by generating a Dockerfile, that "
"consists of the nvidia/cuda base image, the well-maintained docker-stacks"
" that is integrated as submodule and GPU-able libraries like Tensorflow, "
"Keras and PyTorch on top of it."
msgstr ""

# f9f4ef31795249d9bf2a752dfbb27a8f
#: ../../using/selecting.md:168 cfda998b29b8494cb363b6458bb56cdc
msgid ""
"See the contributing guide for information about how to create your own "
"Jupyter Docker Stack."
msgstr ""

# 7b67588ff359486cb64810359db6704c
#: ../../using/specifics.md:1 9019e8cef5444a77894943d96c5046cb
msgid "Image Specifics"
msgstr ""

# 06b0d21a881140a29e17e5b9fa5598ab
#: ../../using/specifics.md:3 b1abc38b4c414365b3033f1668b502d5
msgid "This page provides details about features specific to one or more images."
msgstr ""

# 4e5d822c2e1a410099f1ab5831e29927
#: ../../using/specifics.md:5 d02bf9dcac8f4162a65adbca66e8b494
msgid "Apache Spark"
msgstr ""

# 433d8d99798649029dafd444253567b4
#: ../../using/specifics.md:7 e480831d9fb94fada524e9f38763894e
msgid "Specific Docker Image Options"
msgstr ""

# 70083fc71521409895897387117748bc
#: ../../using/specifics.md:8 a5560eee3cec4e06a1df9ec3f49fc288
msgid ""
"-p 4040:4040 - The jupyter/pyspark-notebook and jupyter/all-spark-"
"notebook images open SparkUI (Spark Monitoring and Instrumentation UI) at"
" default port 4040, this option map 4040 port inside docker container to "
"4040 port on host machine . Note every new spark context that is created "
"is put onto an incrementing port (ie. 4040, 4041, 4042, etc.), and it "
"might be necessary to open multiple ports. For example: docker run -d -p "
"8888:8888 -p 4040:4040 -p 4041:4041 jupyter/pyspark-notebook"
msgstr ""

# 2449b18de82e4d129cbd49e52ce9e522
#: ../../using/specifics.md:10 2eb26f88a6334203b9fa719e713d6892
msgid "Usage Examples"
msgstr ""

# ec077f84f7394baba4071d0d8a9c9dbf
#: ../../using/specifics.md:12 ae7971677dcd4cb8add6ec25bd6d0854
msgid ""
"The jupyter/pyspark-notebook and jupyter/all-spark-notebook images "
"support the use of Apache Spark in Python, R, and Scala notebooks. The "
"following sections provide some examples of how to get started using "
"them."
msgstr ""

# ca35b3b020914e2eb2e877199a90d4a4
#: ../../using/specifics.md:14 f49797070a77447fb8c0fec6546630ee
msgid "Using Spark Local Mode"
msgstr ""

# 15a0171869f3437481b9dfb2aec3db00
#: ../../using/specifics.md:16 2b9a8e2419d94d659174b10dbd6702a6
msgid ""
"Spark local mode is useful for experimentation on small data when you do "
"not have a Spark cluster available."
msgstr ""

# 2c5367b84e444a1aa504910b22ba1454
# 09d8b02687704d368a670cb243e299fb
#: ../../using/specifics.md:18 ../../using/specifics.md:74
#: 5046b80f4ea640b79fa38f496e2bb880 601316011a864dc890c1fe4231e598c8
msgid "In a Python Notebook"
msgstr ""

# 2b5c49ea60184570a8b50622140c22e1
# 192add33e94844f080ae03254899e2ee
#: ../../using/specifics.md:27 ../../using/specifics.md:101
#: 08e5f3aee7044a90abfec6a149905a8e ec6ca4bb14d34125a971f4e822a6214c
msgid "In a R Notebook"
msgstr ""

# 80cedeb3b4514de792dba8e03b1c8774
# 5f3159414ddc427699709ddef740d6fd
#: ../../using/specifics.md:39 ../../using/specifics.md:122
#: 669d46eb0dcb4ad1a2b2a320cfb71ca6 ace2b56b455340ffb8f0fd39a96571d4
msgid "In a Spylon Kernel Scala Notebook"
msgstr ""

# 07c9256c669b488aaa2df48676d5a188
#: ../../using/specifics.md:41 6426a015d46b4456967e4577c408a379
#, python-format
msgid ""
"Spylon kernel instantiates a SparkContext for you in variable sc after "
"you configure Spark options in a %%init_spark magic cell."
msgstr ""

# aeec453983524d3ab59f7241cf8bac7b
# 472a48e72aaf46ca86a89e1598595045
#: ../../using/specifics.md:55 ../../using/specifics.md:137
#: 78b5838bc13a4e82ad44d6cd9e304c4d bef1c075c7534ce3bbdd8d37af9f89f7
msgid "In an Apache Toree Scala Notebook"
msgstr ""

# 762d164260cd4938b5f9556b29b0e171
#: ../../using/specifics.md:57 062446578d0547b2a41c5980285b0e4e
msgid ""
"Apache Toree instantiates a local SparkContext for you in variable sc "
"when the kernel starts."
msgstr ""

# 8da1ef6876324b61885c5dec2c6a9cbf
#: ../../using/specifics.md:64 b0a0ffaa9be7432a8d623483f8b436f7
msgid "Connecting to a Spark Cluster on Mesos"
msgstr ""

# 4926e921fbd24baba9888b3f08cf4f51
#: ../../using/specifics.md:66 303c1cd295614e49aca3e15cbc47855f
msgid "This configuration allows your compute cluster to scale with your data."
msgstr ""

# e8c29961728146a28c6581966a2d2341
#: ../../using/specifics.md:68 574119187c9147debe7f23e020f74551
msgid "Deploy Spark on Mesos."
msgstr ""

# 1838d7f4481246538ca4ffe89e02ff4d
#: ../../using/specifics.md:69 e5c8bca2081a4cf483cec7e5e6a18bcb
msgid ""
"Configure each slave with the --no-switch_user flag or create the "
"$NB_USER account on every slave node."
msgstr ""

# d4ee49cc6cb547389ed3228e74a4a67c
# 4b8c4c1e7ea441f1af4b4e0fbed73888
#: ../../using/specifics.md:70 ../../using/specifics.md:166
#: 6f5522ead974447383693ff14614f967 9c3df1daf9d1426bbac6f2c9fe68dc57
msgid ""
"Run the Docker container with --net=host in a location that is network "
"addressable by all of your Spark workers. (This is a Spark networking "
"requirement.)"
msgstr ""

# 9a026387155e46fa8e4e1ea3f00d3a63
# 68e479d8f50e4685a0fb5de56a978347
#: ../../using/specifics.md:71 ../../using/specifics.md:167
#: 4bd75bcdba5049c1b571e906ccbf27fa e1771d7b7a944b16a0633120741abe12
msgid ""
"NOTE: When using --net=host, you must also use the flags --pid=host -e "
"TINI_SUBREAPER=true. See https://github.com/jupyter/docker-"
"stacks/issues/64 for details."
msgstr ""

# 16c4327879294075a64b4329f972321c
#: ../../using/specifics.md:72 9f6809036e8a4ffda26809bab3b8017e
msgid "Follow the language specific instructions below."
msgstr ""

# 929575857ae647aebbcb721af39bdd7e
#: ../../using/specifics.md:139 475f41266893486ca55a9dfaa218aad5
msgid ""
"The Apache Toree kernel automatically creates a SparkContext when it "
"starts based on configuration information from its command line arguments"
" and environment variables. You can pass information about your Mesos "
"cluster via the SPARK_OPTS environment variable when you spawn a "
"container."
msgstr ""

# 3e3d5ec9fa554e75989856139938f4f8
#: ../../using/specifics.md:141 b2a9f9fe316a4524900b2e2e44306c93
msgid ""
"For instance, to pass information about a Mesos master, Spark binary "
"location in HDFS, and an executor options, you could start the container "
"like so:"
msgstr ""

# fa8494a4dde544109b9f6f49ac28178f
#: ../../using/specifics.md:149 e4df64670225453d8f9be63def3bc9c1
msgid ""
"Note that this is the same information expressed in a notebook in the "
"Python case above. Once the kernel spec has your cluster information, you"
" can test your cluster in an Apache Toree notebook like so:"
msgstr ""

# da5d5d861e914df98df9dba50fb3d66a
#: ../../using/specifics.md:160 e1fb4d61c33d41868a5fffd38d28cfd5
msgid "Connecting to a Spark Cluster in Standalone Mode"
msgstr ""

# 79db0ba4244a4701aa8dfe0053d5579c
#: ../../using/specifics.md:162 eab8b1b8c3f44b1bac73959a0a041eff
msgid ""
"Connection to Spark Cluster on Standalone Mode requires the following set"
" of steps:"
msgstr ""

# 2c728588b6df4753a0c08f969364a79a
#: ../../using/specifics.md:164 0fe2a57145ed4bfca09e8a15495052a7
msgid ""
"Verify that the docker image (check the Dockerfile) and the Spark Cluster"
" which is being deployed, run the same version of Spark."
msgstr ""

# d5a341bb44524a8cb33f086803daaf63
#: ../../using/specifics.md:165 21844960921a44ba87fbbec906fad6f3
msgid "Deploy Spark in Standalone Mode."
msgstr ""

# 3c781f06114240e28dcdb0c40a5d5cf5
#: ../../using/specifics.md:168 2b0b89ecf9f14a3a8ff3533cc4ecfd0d
msgid ""
"The language specific instructions are almost same as mentioned above for"
" Mesos, only the master url would now be something like "
"spark://10.10.10.10:7077"
msgstr ""

# 85baa5bd4ed5426b96dad49dacfab9cb
#: ../../using/specifics.md:170 9da309ba7dbf4ad29312f2a688427254
msgid "Tensorflow"
msgstr ""

# 4249b4b266fc4aeeb85dc8386ab60592
#: ../../using/specifics.md:172 f1b97eb62ab24a3d9e0419f7367dfcc5
msgid ""
"The jupyter/tensorflow-notebook image supports the use of Tensorflow in "
"single machine or distributed mode."
msgstr ""

# 68fba23f7cd94702a9dead3c51719206
#: ../../using/specifics.md:174 7efbc6f8be7c488ab8a4e69a3bd359d6
msgid "Single Machine Mode"
msgstr ""

# d4b74babe01d4a3a86c46844a737151b
#: ../../using/specifics.md:188 ec1f6cb0c663451992757bfe155a356d
msgid "Distributed Mode"
msgstr ""

# 5e06096348924f51881d05f984e91381
#~ msgid "This list only has 2 examples. You can be the next!"
#~ msgstr ""

# 7ed4a7919dfd446c817c64a7e420e95e
#~ msgid ""
#~ "To use a requirements.txt file, first"
#~ " create your requirements.txt file with "
#~ "the listing of packages desired.  Next,"
#~ " create a new Dockerfile like the "
#~ "one shown below."
#~ msgstr ""

# 56f2354437c74650a70bd154647eed26
#~ msgid ""
#~ "Here is a quick example NGINX "
#~ "configuration to get started.  You'll "
#~ "need a server, a .crt and .key "
#~ "file for your server, and docker &"
#~ " docker-compose installed.  Then just "
#~ "download the files at that gist "
#~ "and run docker-compose up -d to"
#~ " test it out.  Customize the "
#~ "nginx.conf file to set the desired "
#~ "paths and add other services."
#~ msgstr ""

