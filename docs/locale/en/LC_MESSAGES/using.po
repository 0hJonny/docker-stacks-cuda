# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018- Project Jupyter
# This file is distributed under the same license as the docker-stacks
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: docker-stacks latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-05-19 01:43+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../using/common.md:1 f16c87b42132489b8297ee3c04fabe6d
msgid "# Common Features"
msgstr ""

#: ../../using/common.md:3 aa62beda63934e768fed6a622bfa4eb1
msgid ""
"A container launched from any Jupyter Docker Stacks image runs a Jupyter "
"Notebook server by default. The container does so by executing a `start-"
"notebook.sh` script. This script configures the internal container "
"environment and then runs `jupyter notebook`, passing it any command line"
" arguments received."
msgstr ""

# 298bc09d3aab4abcb413ad481d6242ff
#: ../../using/common.md:5 9e943a36959a47d7b9ba5f238f710172
msgid ""
"This page describes the options supported by the startup script as well "
"as how to bypass it to run alternative commands."
msgstr ""

#: ../../using/common.md:7 efae65c4e0b74039ad83e4860c53cb37
msgid "## Notebook Options"
msgstr ""

#: ../../using/common.md:9 5f512191ac284947a9938cdc23180f49
msgid ""
"You can pass [Jupyter command line options](https://jupyter-"
"notebook.readthedocs.io/en/stable/config.html#options) to the `start-"
"notebook.sh` script when launching the container. For example, to secure "
"the Notebook server with a custom password hashed using "
"`IPython.lib.passwd()` instead of the default token, you can run the "
"following:"
msgstr ""

#: ../../using/common.md:11 33880e34bdec4ca2a246645e3c38d450
msgid ""
"```bash docker run -d -p 8888:8888 jupyter/base-notebook start-"
"notebook.sh "
"--NotebookApp.password='sha1:74ba40f8a388:c913541b7ee99d15d5ed31d4226bf7838f83a50e'"
" ```"
msgstr ""

# 4c08f057def247cbbfc8231e628cb792
#: ../../using/common.md:15 6f27ba00480c41489136d530d791f8f9
msgid ""
"For example, to set the base URL of the notebook server, you can run the "
"following:"
msgstr ""

#: ../../using/common.md:17 aeffbfc5d3b04fd6bb198351a1c2a98b
msgid ""
"```bash docker run -d -p 8888:8888 jupyter/base-notebook start-"
"notebook.sh --NotebookApp.base_url=/some/path ```"
msgstr ""

#: ../../using/common.md:21 2201b71a845247e68bd5c157b8d5b2e3
msgid "## Docker Options"
msgstr ""

#: ../../using/common.md:23 9db8a7cf185c4ae3aa53e1999f2fdbd2
msgid ""
"You may instruct the `start-notebook.sh` script to customize the "
"container environment before launching the notebook server. You do so by "
"passing arguments to the `docker run` command."
msgstr ""

#: ../../using/common.md:26 c992cac39fad4052b9986eb325a98acd
msgid ""
"`-e NB_USER=jovyan` - Instructs the startup script to change the default "
"container username from `jovyan` to the provided value. Causes the script"
" to rename the `jovyan` user home folder. For this option to take effect,"
" you must run the container with `--user root`, set the working directory"
" `-w /home/$NB_USER` and set the environment variable `-e CHOWN_HOME=yes`"
" (see below for detail). This feature is useful when mounting host "
"volumes with specific home folder."
msgstr ""

#: ../../using/common.md:27 81c4ada2698f42538faeeccb03df36da
msgid ""
"`-e NB_UID=1000` - Instructs the startup script to switch the numeric "
"user ID of `$NB_USER` to the given value. This feature is useful when "
"mounting host volumes with specific owner permissions. For this option to"
" take effect, you must run the container with `--user root`. (The startup"
" script will `su $NB_USER` after adjusting the user ID.) You might "
"consider using modern Docker options `--user` and `--group-add` instead. "
"See the last bullet below for details."
msgstr ""

#: ../../using/common.md:28 e0286a834af04cedb823bb96a59d1be7
msgid ""
"`-e NB_GID=100` - Instructs the startup script to change the primary "
"group of`$NB_USER` to `$NB_GID` (the new group is added with a name of "
"`$NB_GROUP` if it is defined, otherwise the group is named `$NB_USER`).  "
"This feature is useful when mounting host volumes with specific group "
"permissions. For this option to take effect, you must run the container "
"with `--user root`. (The startup script will `su $NB_USER` after "
"adjusting the group ID.) You might consider using modern Docker options "
"`--user` and `--group-add` instead. See the last bullet below for "
"details.  The user is added to supplemental group `users` (gid 100) in "
"order to allow write access to the home directory and `/opt/conda`.  If "
"you override the user/group logic, ensure the user stays in group `users`"
" if you want them to be able to modify files in the image."
msgstr ""

#: ../../using/common.md:29 4accd00debf3467c99aa53e3ac625dea
msgid ""
"`-e NB_GROUP=<name>` - The name used for `$NB_GID`, which defaults to "
"`$NB_USER`.  This is only used if `$NB_GID` is specified and completely "
"optional: there is only cosmetic effect."
msgstr ""

#: ../../using/common.md:30 12d13f39e6ee4d3fb2290f999823e328
msgid ""
"`-e NB_UMASK=<umask>` - Configures Jupyter to use a different umask value"
" from default, i.e. `022`. For example, if setting umask to `002`, new "
"files will be readable and writable by group members instead of just "
"writable by the owner. Wikipedia has a good article about "
"[umask](https://en.wikipedia.org/wiki/Umask). Feel free to read it in "
"order to choose the value that better fits your needs. Default value "
"should fit most situations. Note that `NB_UMASK` when set only applies to"
" the Jupyter process itself - you cannot use it to set a umask for "
"additional files created during run-hooks e.g. via `pip` or `conda` - if "
"you need to set a umask for these you must set `umask` for each command."
msgstr ""

#: ../../using/common.md:31 78ffffb51b414c9da0111e7226f9f177
msgid ""
"`-e CHOWN_HOME=yes` - Instructs the startup script to change the "
"`$NB_USER` home directory owner and group to the current value of "
"`$NB_UID` and `$NB_GID`. This change will take effect even if the user "
"home directory is mounted from the host using `-v` as described below. "
"The change is **not** applied recursively by default. You can change "
"modify the `chown` behavior by setting `CHOWN_HOME_OPTS` (e.g., `-e "
"CHOWN_HOME_OPTS='-R'`)."
msgstr ""

#: ../../using/common.md:32 299018a22a8a4347a934ec84694a8446
msgid ""
"`-e CHOWN_EXTRA=\"<some dir>,<some other dir>\"` - Instructs the startup "
"script to change the owner and group of each comma-separated container "
"directory to the current value of `$NB_UID` and `$NB_GID`. The change is "
"**not** applied recursively by default. You can change modify the `chown`"
" behavior by setting `CHOWN_EXTRA_OPTS` (e.g., `-e "
"CHOWN_EXTRA_OPTS='-R'`)."
msgstr ""

#: ../../using/common.md:33 d6878c8f725c4a839869de1d2f3c5e0a
msgid ""
"`-e GRANT_SUDO=yes` - Instructs the startup script to grant the `NB_USER`"
" user passwordless `sudo` capability. You do **not** need this option to "
"allow the user to `conda` or `pip` install additional packages. This "
"option is useful, however, when you wish to give `$NB_USER` the ability "
"to install OS packages with `apt` or modify other root-owned files in the"
" container. For this option to take effect, you must run the container "
"with `--user root`. (The `start-notebook.sh` script will `su $NB_USER` "
"after adding `$NB_USER` to sudoers.) **You should only enable `sudo` if "
"you trust the user or if the container is running on an isolated host.**"
msgstr ""

#: ../../using/common.md:34 d6f648efc00b4b34b7621545893373c6
msgid ""
"`-e GEN_CERT=yes` - Instructs the startup script to generates a self-"
"signed SSL certificate and configure Jupyter Notebook to use it to accept"
" encrypted HTTPS connections."
msgstr ""

#: ../../using/common.md:35 9603b7a2b5494569bd9c56bfc307419b
msgid ""
"`-e JUPYTER_ENABLE_LAB=yes` - Instructs the startup script to run "
"`jupyter lab` instead of the default `jupyter notebook` command. Useful "
"in container orchestration environments where setting environment "
"variables is easier than change command line parameters."
msgstr ""

#: ../../using/common.md:36 f463cd69a7a34ff99ad127fcc957e681
msgid ""
"`-e RESTARTABLE=yes` - Runs Jupyter in a loop so that quitting Jupyter "
"does not cause the container to exit.  This may be useful when you need "
"to install extensions that require restarting Jupyter."
msgstr ""

#: ../../using/common.md:37 60d3028b35324286948a0b5cd73154dc
msgid ""
"`-v /some/host/folder/for/work:/home/jovyan/work` - Mounts a host machine"
" directory as folder in the container. Useful when you want to preserve "
"notebooks and other work even after the container is destroyed. **You "
"must grant the within-container notebook user or group (`NB_UID` or "
"`NB_GID`) write access to the host directory (e.g., `sudo chown 1000 "
"/some/host/folder/for/work`).**"
msgstr ""

#: ../../using/common.md:38 c13b8e8ba9af4aaf96a7cbd6dacf257d
msgid ""
"`--user 5000 --group-add users` - Launches the container with a specific "
"user ID and adds that user to the `users` group so that it can modify "
"files in the default home directory and `/opt/conda`. You can use these "
"arguments as alternatives to setting `$NB_UID` and `$NB_GID`."
msgstr ""

#: ../../using/common.md:40 00ee9ec0ac5340e594a7237744a25cdc
msgid "## Startup Hooks"
msgstr ""

#: ../../using/common.md:42 ab0a3f7811d04ab087106e2ab305cb01
msgid ""
"You can further customize the container environment by adding shell "
"scripts (`*.sh`) to be sourced or executables (`chmod +x`) to be run to "
"the paths below:"
msgstr ""

#: ../../using/common.md:45 b860f75f25db4099bf04e795c79f9eca
msgid ""
"`/usr/local/bin/start-notebook.d/` - handled before any of the standard "
"options noted above are applied"
msgstr ""

#: ../../using/common.md:47 f4a74ed5d7a44425a7108877af6b8f48
msgid ""
"`/usr/local/bin/before-notebook.d/` - handled after all of the standard "
"options noted above are applied and just before the notebook server "
"launches"
msgstr ""

#: ../../using/common.md:50 08248174822747ada2ac5570f1b78500
msgid ""
"See the `run-hooks` function in the [`jupyter/base-notebook "
"start.sh`](https://github.com/jupyter/docker-stacks/blob/master/base-"
"notebook/start.sh) script for execution details."
msgstr ""

#: ../../using/common.md:53 8d79543ef2634583bdb10e55fa5f2da2
msgid "## SSL Certificates"
msgstr ""

#: ../../using/common.md:55 3718bc19e7cd49afbbc8fc97d4d37daf
msgid ""
"You may mount SSL key and certificate files into a container and "
"configure Jupyter Notebook to use them to accept HTTPS connections. For "
"example, to mount a host folder containing a `notebook.key` and "
"`notebook.crt` and use them, you might run the following:"
msgstr ""

#: ../../using/common.md:57 ../../using/common.md:67
#: 43d67057e701492c9873905de48d0330 c53d86d883cd4c28b4d469aaad3f8508
msgid "```bash docker run -d -p 8888:8888 \\"
msgstr ""

#: ../../using/common.md:59 f02cd028928c44da9e943b650a2c7b86
msgid ""
"-v /some/host/folder:/etc/ssl/notebook \\ jupyter/base-notebook start-"
"notebook.sh \\ --NotebookApp.keyfile=/etc/ssl/notebook/notebook.key "
"--NotebookApp.certfile=/etc/ssl/notebook/notebook.crt"
msgstr ""

#: ../../using/common.md:63 ../../using/common.md:72 ../../using/recipes.md:55
#: ../../using/recipes.md:67 ../../using/recipes.md:287
#: ../../using/recipes.md:508 ../../using/recipes.md:556
#: ../../using/running.md:34 ../../using/running.md:75
#: ../../using/running.md:97 16054742e6134df9bea8db21b38e01f4
#: 296cce7726f244da9694283f19055f38 4beee57570264b3fb9dfb790db801e35
#: 5331b3e0ff9341449dfeeb88946a6a16 93c26eb036d9466ca64227684d2b6385
#: a3ae288c709e4e2fb9aeec81f740779a a4f4c6fdeb0f4fb28cac92c3b54cdebe
#: b7571503ccc44072a4441e88729b15f1 c86acedd72864ba3ad718ba986a681c3
#: df79d0acd480416384d812b8d44ca340
msgid "```"
msgstr ""

# e496d62ce1b7489eabf40a55471247b4
#: ../../using/common.md:65 7d50172efda34b9e895ef4a101b195de
msgid ""
"Alternatively, you may mount a single PEM file containing both the key "
"and certificate. For example:"
msgstr ""

#: ../../using/common.md:69 db317f2444c849b4a3e36d48f9ca90a5
msgid ""
"-v /some/host/folder/notebook.pem:/etc/ssl/notebook.pem \\ jupyter/base-"
"notebook start-notebook.sh \\ "
"--NotebookApp.certfile=/etc/ssl/notebook.pem"
msgstr ""

# 6ada67b7d1a34f59ad235d7e49e6a298
#: ../../using/common.md:74 684c1e066532466ead792b6f21cb558b
msgid ""
"In either case, Jupyter Notebook expects the key and certificate to be a "
"base64 encoded text file. The certificate file or PEM may contain one or "
"more certificates (e.g., server, intermediate, and root)."
msgstr ""

# c908965cf0084fc2b276b50b47b87d18
#: ../../using/common.md:76 8a91a3efaa614115a6ede45178d034f9
msgid "For additional information about using SSL, see the following:"
msgstr ""

#: ../../using/common.md:78 cfe021f781f24cfc9ecc434be29782f9
msgid ""
"The [docker-stacks/examples](https://github.com/jupyter/docker-"
"stacks/tree/master/examples) for information about how to use [Let's "
"Encrypt](https://letsencrypt.org/) certificates when you run these stacks"
" on a publicly visible domain."
msgstr ""

#: ../../using/common.md:79 a505da572561485fbc8a1b1bd76c600b
msgid ""
"The [jupyter_notebook_config.py](https://github.com/jupyter/docker-"
"stacks/blob/master/base-notebook/jupyter_notebook_config.py) file for how"
" this Docker image generates a self-signed certificate."
msgstr ""

#: ../../using/common.md:80 6507ccbc861245a486da2d51a6ba78d4
msgid ""
"The [Jupyter Notebook documentation](https://jupyter-"
"notebook.readthedocs.io/en/latest/public_server.html#securing-a-notebook-"
"server) for best practices about securing a public notebook server in "
"general."
msgstr ""

#: ../../using/common.md:82 19185e7b53f243cfa42c1ad5db49468e
msgid "## Alternative Commands"
msgstr ""

#: ../../using/common.md:84 1fbb0fec70674328b55690907e2cede8
msgid "### start.sh"
msgstr ""

#: ../../using/common.md:86 5afcb833b248432498d389090f02921a
msgid ""
"The `start-notebook.sh` script actually inherits most of its option "
"handling capability from a more generic `start.sh` script. The `start.sh`"
" script supports all of the features described above, but allows you to "
"specify an arbitrary command to execute. For example, to run the text-"
"based `ipython` console in a container, do the following:"
msgstr ""

#: ../../using/common.md:88 45ffa37af47f4b8f98f344ba08c05446
msgid "```bash docker run -it --rm jupyter/base-notebook start.sh ipython ```"
msgstr ""

# ad0be3e8095e4394afb367e9e56e1ca5
#: ../../using/common.md:92 3ad72a1bb15448b395a2979b992b30c2
msgid "Or, to run JupyterLab instead of the classic notebook, run the following:"
msgstr ""

#: ../../using/common.md:94 9023bfee3e8e47d5acb0bab99896fd3e
msgid ""
"```bash docker run -it --rm -p 8888:8888 jupyter/base-notebook start.sh "
"jupyter lab ```"
msgstr ""

#: ../../using/common.md:98 6c4325e243d9430e9b3b0883694ccad3
msgid ""
"This script is particularly useful when you derive a new Dockerfile from "
"this image and install additional Jupyter applications with subcommands "
"like `jupyter console`, `jupyter kernelgateway`, etc."
msgstr ""

#: ../../using/common.md:100 184174f3ea3e4dfa9c4ec7487350f7be
msgid "### Others"
msgstr ""

#: ../../using/common.md:102 f3de1f75036d4af298326a036dc5a581
msgid ""
"You can bypass the provided scripts and specify an arbitrary start "
"command. If you do, keep in mind that features supported by the "
"`start.sh` script and its kin will not function (e.g., `GRANT_SUDO`)."
msgstr ""

#: ../../using/common.md:104 f7598d423bbf4e368739d2badfa90486
msgid "## Conda Environments"
msgstr ""

#: ../../using/common.md:106 e556be04ca5247d2bdafe732e72a17ab
msgid ""
"The default Python 3.x [Conda "
"environment](http://conda.pydata.org/docs/using/envs.html) resides in "
"`/opt/conda`. The `/opt/conda/bin` directory is part of the default "
"`jovyan` user's `$PATH`. That directory is also whitelisted for use in "
"`sudo` commands by the `start.sh` script."
msgstr ""

#: ../../using/common.md:108 40d309f5e2f44135a79ab833ec9fcef9
msgid ""
"The `jovyan` user has full read/write access to the `/opt/conda` "
"directory. You can use either `conda`, `mamba` or `pip` to install new "
"packages without any additional permissions."
msgstr ""

#: ../../using/common.md:110 3cd16e9996f14735898f9387cb6afae6
msgid ""
"```bash # install a package into the default (python 3.x) environment pip"
" install some-package conda install some-package mamba install some-"
"package ```"
msgstr ""

#: ../../using/common.md:117 cd4e9929a27942dd9cf6423f00cb8d2c
msgid "### Using alternative channels"
msgstr ""

#: ../../using/common.md:119 53c9689cd76845aca4b464a2a8bc2d21
msgid ""
"Conda is configured by default to use only the [`conda-"
"forge`](https://anaconda.org/conda-forge) channel. However, alternative "
"channels can be used either one shot by overwriting the default channel "
"in the installation command or by configuring `conda` to use different "
"channels. The examples below show how to use the [anaconda default "
"channels](https://repo.anaconda.com/pkgs/main) instead of `conda-forge` "
"to install packages."
msgstr ""

#: ../../using/common.md:123 6332743126ea4a5a89eb5516224495fe
msgid ""
"```bash # using defaults channels to install a package conda install "
"--channel defaults humanize # configure conda to add default channels at "
"the top of the list conda config --system --prepend channels defaults # "
"install a package conda install humanize ```"
msgstr ""

#: ../../using/recipes.md:1 ffb0ff84a55648c0a81b244a6e2c06a3
msgid "# Contributed Recipes"
msgstr ""

#: ../../using/recipes.md:3 24b7db8aadf4429086d0e7a2fff80834
msgid ""
"Users sometimes share interesting ways of using the Jupyter Docker "
"Stacks. We encourage users to [contribute these "
"recipes](../contributing/recipes.md) to the documentation in case they "
"prove useful to other members of the community by submitting a pull "
"request to `docs/using/recipes.md`. The sections below capture this "
"knowledge."
msgstr ""

#: ../../using/recipes.md:8 71864a714d8b4650b113d530a13ec741
msgid "## Using `sudo` within a container"
msgstr ""

#: ../../using/recipes.md:10 f51aa2a4e01c45d8b58d169092e3ad65
msgid ""
"Password authentication is disabled for the `NB_USER` (e.g., `jovyan`). "
"This choice was made to avoid distributing images with a weak default "
"password that users ~might~ will forget to change before running a "
"container on a publicly accessible host."
msgstr ""

#: ../../using/recipes.md:14 924677750e0f4268be9039cabec4bfe2
msgid ""
"You can grant the within-container `NB_USER` passwordless `sudo` access "
"by adding `-e GRANT_SUDO=yes` and `--user root` to your Docker command "
"line or appropriate container orchestrator config."
msgstr ""

# f75300183d66418d958651b713e3c81e
#: ../../using/recipes.md:18 f1023379bd654012bed3974992d77c71
msgid "For example:"
msgstr ""

#: ../../using/recipes.md:20 db495e2e77934a79a80637d4c4db094d
msgid ""
"```bash docker run -it -e GRANT_SUDO=yes --user root jupyter/minimal-"
"notebook ```"
msgstr ""

#: ../../using/recipes.md:24 9ea1f52c66b0484e8d7aedc1ff717a0c
msgid ""
"**You should only enable `sudo` if you trust the user and/or if the "
"container is running on an isolated host.** See [Docker security "
"documentation](https://docs.docker.com/engine/security/userns-remap/) for"
" more information about running containers as `root`."
msgstr ""

#: ../../using/recipes.md:27 80698e6eedc44a6f9f313c18a1b81d5a
msgid "## Using `pip install` or `conda install` in a Child Docker image"
msgstr ""

# cfb1a65ed1a4453e8b3355f1c0c23b1c
#: ../../using/recipes.md:29 0815d4b3be8b4fa59912e0be3de56628
msgid "Create a new Dockerfile like the one shown below."
msgstr ""

#: ../../using/recipes.md:31 9d3301b44d0647c88313f56b1e25dc62
msgid ""
"```dockerfile # Start from a core stack version FROM jupyter/datascience-"
"notebook:9f9e5ca8fe5a # Install in the default python3 environment RUN "
"pip install 'ggplot==0.6.8' ```"
msgstr ""

# 3ab615dc6fb6425d954cae4ce14f08b9
#: ../../using/recipes.md:38 05e624563e2b4c1eaa4dddf205506dbf
msgid "Then build a new image."
msgstr ""

#: ../../using/recipes.md:40 420bc66124e84612a2b605b2fbe51295
msgid "```bash docker build --rm -t jupyter/my-datascience-notebook . ```"
msgstr ""

#: ../../using/recipes.md:44 3d146770ad8243c79f4dd9913682bc4f
msgid ""
"To use a requirements.txt file, first create your `requirements.txt` file"
" with the listing of packages desired. Next, create a new Dockerfile like"
" the one shown below."
msgstr ""

#: ../../using/recipes.md:47 c14d70d987ea4c03baf63086ef1690de
msgid ""
"```dockerfile # Start from a core stack version FROM jupyter/datascience-"
"notebook:9f9e5ca8fe5a # Install from requirements.txt file COPY "
"--chown=${NB_UID}:${NB_GID} requirements.txt /tmp/ RUN pip install "
"--requirement /tmp/requirements.txt && \\"
msgstr ""

#: ../../using/recipes.md:53 ../../using/recipes.md:65
#: ../../using/recipes.md:129 21136ddbc26d40a1993699b050844c54
#: 8bc7104c48bb4cb283b9c1a4494158ba e957d44c23c942cd9b984f2ef5aad080
msgid "fix-permissions $CONDA_DIR && \\ fix-permissions /home/$NB_USER"
msgstr ""

# f2f035925d764425b9999b19d36c1d30
#: ../../using/recipes.md:57 6ba422580d2c48d5b84c0948cfac95ae
msgid "For conda, the Dockerfile is similar:"
msgstr ""

#: ../../using/recipes.md:59 2af0569d5708428b9c3190607bb92621
msgid ""
"```dockerfile # Start from a core stack version FROM jupyter/datascience-"
"notebook:9f9e5ca8fe5a # Install from requirements.txt file COPY "
"--chown=${NB_UID}:${NB_GID} requirements.txt /tmp/ RUN conda install "
"--yes --file /tmp/requirements.txt && \\"
msgstr ""

#: ../../using/recipes.md:69 3fcfdfa3222b4203aec3a53aafe9be86
msgid ""
"Ref: [docker-"
"stacks/commit/79169618d571506304934a7b29039085e77db78c](https://github.com/jupyter"
"/docker-"
"stacks/commit/79169618d571506304934a7b29039085e77db78c#commitcomment-15960081)"
msgstr ""

#: ../../using/recipes.md:72 db4b6222d1cc4727ab651689799d51fe
msgid "## Add a Python 2.x environment"
msgstr ""

#: ../../using/recipes.md:74 f8a5b62969c54db8aa4fbafa3160fa99
msgid ""
"Python 2.x was removed from all images on August 10th, 2017, starting in "
"tag `cc9feab481f7`. You can add a Python 2.x environment by defining your"
" own Dockerfile inheriting from one of the images like so:"
msgstr ""

#: ../../using/recipes.md:78 b35312a42b784522b44968147b988852
msgid ""
"```dockerfile # Choose your desired base image FROM jupyter/scipy-"
"notebook:latest"
msgstr ""

#: ../../using/recipes.md:82 6bbcd0808a51425ba031be863ce5a715
msgid ""
"# Create a Python 2.x environment using conda including at least the "
"ipython kernel # and the kernda utility. Add any additional packages you "
"want available for use # in a Python 2 notebook to the first line here "
"(e.g., pandas, matplotlib, etc.) RUN conda create --quiet --yes -p "
"$CONDA_DIR/envs/python2 python=2.7 ipython ipykernel kernda && \\"
msgstr ""

#: ../../using/recipes.md:86 ../../using/recipes.md:116
#: 2c04f95f1828496a9cd9c69faf1bded0 b54c02244a5a470db696f3be95dae77d
msgid "conda clean --all -f -y"
msgstr ""

#: ../../using/recipes.md:88 ../../using/recipes.md:253
#: ../../using/recipes.md:521 ../../using/recipes.md:544
#: 2392e81084cc4094b41559ca3667bc14 256600847282488c9721eb3ad4c2be3d
#: 46ecfc03916a4d50b0ba5928d69b9d29 89636579afef404ca39033dd3d55ad4b
msgid "USER root"
msgstr ""

#: ../../using/recipes.md:90 b8b924242dba438cbed4ceb26c5d8b3e
msgid ""
"# Create a global kernelspec in the image and modify it so that it "
"properly activates # the python2 conda environment. RUN "
"$CONDA_DIR/envs/python2/bin/python -m ipykernel install && \\ "
"$CONDA_DIR/envs/python2/bin/kernda -o -y "
"/usr/local/share/jupyter/kernels/python2/kernel.json"
msgstr ""

#: ../../using/recipes.md:95 6a6b40660dcf4562972f520be45f2cb7
msgid "USER $NB_USER ```"
msgstr ""

#: ../../using/recipes.md:98 3432b5f358764ddab65b51790fb7b594
msgid ""
"Ref: [https://github.com/jupyter/docker-"
"stacks/issues/440](https://github.com/jupyter/docker-stacks/issues/440)"
msgstr ""

#: ../../using/recipes.md:101 473427f2b25240b08d98bb7d940d4d59
msgid "## Add a Python 3.x environment"
msgstr ""

#: ../../using/recipes.md:103 91b74414fa3c4eaa9220f31a5f0eb81f
msgid ""
"The default version of Python that ships with conda/ubuntu may not be the"
" version you want. To add a conda environment with a different version "
"and make it accessible to Jupyter, the instructions are very similar to "
"Python 2.x but are slightly simpler (no need to switch to `root`):"
msgstr ""

#: ../../using/recipes.md:106 38fa81fa1f7745439774dafb19844f08
msgid ""
"```dockerfile # Choose your desired base image FROM jupyter/minimal-"
"notebook:latest"
msgstr ""

#: ../../using/recipes.md:110 24fa5e8e8c9f4398957d43312afea93d
msgid ""
"# name your environment and choose python 3.x version ARG "
"conda_env=python36 ARG py_ver=3.6"
msgstr ""

#: ../../using/recipes.md:114 138a02c608e6400a8a3ff66fb7a762cf
msgid ""
"# you can add additional libraries you want conda to install by listing "
"them below the first line and ending with \"&& \\\" RUN conda create "
"--quiet --yes -p $CONDA_DIR/envs/$conda_env python=$py_ver ipython "
"ipykernel && \\"
msgstr ""

#: ../../using/recipes.md:118 a7f31f11477441018550aa8fa031f7fd
msgid ""
"# alternatively, you can comment out the lines above and uncomment those "
"below # if you'd prefer to use a YAML file present in the docker build "
"context"
msgstr ""

#: ../../using/recipes.md:121 b9c33a4f2003479b95f53d36d33d1f65
msgid ""
"# COPY --chown=${NB_UID}:${NB_GID} environment.yml /home/$NB_USER/tmp/ # "
"RUN cd /home/$NB_USER/tmp/ && \\ #     conda env create -p "
"$CONDA_DIR/envs/$conda_env -f environment.yml && \\ #     conda clean "
"--all -f -y"
msgstr ""

#: ../../using/recipes.md:127 9cfd679dc1f846b4876e89e17860b2e8
msgid ""
"# create Python 3.x environment and link it to jupyter RUN "
"$CONDA_DIR/envs/${conda_env}/bin/python -m ipykernel install --user "
"--name=${conda_env} && \\"
msgstr ""

#: ../../using/recipes.md:132 894fd28a49364d11a1c2ba7f92a9ccb3
msgid ""
"# any additional pip installs can be added by uncommenting the following "
"line # RUN $CONDA_DIR/envs/${conda_env}/bin/pip install"
msgstr ""

#: ../../using/recipes.md:135 fce24a8a613d4eee8e72f7270dcc8ca7
msgid ""
"# prepend conda environment to path ENV PATH "
"$CONDA_DIR/envs/${conda_env}/bin:$PATH"
msgstr ""

#: ../../using/recipes.md:138 ee69f985edb04b508ee93309e8030a70
msgid ""
"# if you want this environment to be the default one, uncomment the "
"following line: # ENV CONDA_DEFAULT_ENV ${conda_env} ```"
msgstr ""

#: ../../using/recipes.md:142 879c2f995fae41f5910c39b34627455a
msgid "## Run JupyterLab"
msgstr ""

#: ../../using/recipes.md:144 443243da3ec344219176425a2db30775
msgid ""
"JupyterLab is preinstalled as a notebook extension starting in tag "
"[c33a7dc0eece](https://github.com/jupyter/docker-stacks/wiki/Docker-"
"build-history)."
msgstr ""

#: ../../using/recipes.md:147 b78ac0ce958f45e69cb47fa3bc51c159
msgid ""
"Run jupyterlab using a command such as `docker run -it --rm -p 8888:8888 "
"jupyter/datascience-notebook start.sh jupyter lab`"
msgstr ""

#: ../../using/recipes.md:150 ab04dc3837e54eacb84f2aa096bab854
msgid "## Dask JupyterLab Extension"
msgstr ""

#: ../../using/recipes.md:152 3698eea661be4a79aabdeb8bce72d387
msgid ""
"[Dask JupyterLab Extension](https://github.com/dask/dask-labextension) "
"provides a JupyterLab extension to manage Dask clusters, as well as embed"
" Dask's dashboard plots directly into JupyterLab panes. Create the "
"Dockerfile as:"
msgstr ""

#: ../../using/recipes.md:154 33f0dbd04f7a4043bfc058698f8f8369
msgid ""
"```dockerfile # Start from a core stack version FROM jupyter/scipy-"
"notebook:latest"
msgstr ""

#: ../../using/recipes.md:158 9e567506592e4712b2ffd84c1f96024f
msgid "# Install the Dask dashboard RUN pip install dask-labextension"
msgstr ""

#: ../../using/recipes.md:161 a8e919311f984d3a9246c0671201da24
msgid "# Dask Scheduler & Bokeh ports EXPOSE 8787 EXPOSE 8786"
msgstr ""

#: ../../using/recipes.md:165 95d6be4593e14db8b4d564dac7ac38ec
msgid "ENTRYPOINT [\"jupyter\", \"lab\", \"--ip=0.0.0.0\", \"--allow-root\"] ```"
msgstr ""

#: ../../using/recipes.md:168 b42e32276bda42db871e0d3f388095ff
msgid "And build the image as:"
msgstr ""

#: ../../using/recipes.md:170 d888ab8dc71b42fab6487022641fefc1
msgid "```bash docker build -t jupyter/scipy-dasklabextension:latest . ```"
msgstr ""

#: ../../using/recipes.md:174 43b975cb02aa4389ab9f78c25d180393
msgid "Once built, run using the command:"
msgstr ""

#: ../../using/recipes.md:176 5befd0c3c6ca4076876b9037a107c5c3
msgid ""
"```bash docker run -it --rm -p 8888:8888 -p 8787:8787 jupyter/scipy-"
"dasklabextension:latest ```"
msgstr ""

#: ../../using/recipes.md:180 ea205d8a28174a1fa933f08672aef37e
msgid ""
"Ref: [https://github.com/jupyter/docker-"
"stacks/issues/999](https://github.com/jupyter/docker-stacks/issues/999)"
msgstr ""

#: ../../using/recipes.md:183 dfbac2a490104df5adab28072fad4561
msgid "## Let's Encrypt a Notebook server"
msgstr ""

#: ../../using/recipes.md:185 134474a696814d5198f09e6752fd0b82
msgid ""
"See the README for the simple automation here [https://github.com/jupyter"
"/docker-stacks/tree/master/examples/make-"
"deploy](https://github.com/jupyter/docker-stacks/tree/master/examples"
"/make-deploy) which includes steps for requesting and renewing a Let's "
"Encrypt certificate."
msgstr ""

#: ../../using/recipes.md:189 4325a0f13d254ea4ac2341ccf4aa120c
msgid ""
"Ref: [https://github.com/jupyter/docker-"
"stacks/issues/78](https://github.com/jupyter/docker-stacks/issues/78)"
msgstr ""

#: ../../using/recipes.md:192 25d36e9d0e304746acdd0c0812d7b75a
msgid "## Slideshows with Jupyter and RISE"
msgstr ""

#: ../../using/recipes.md:194 7c7825fd0f774900a2ac6ad85f0eb51d
msgid ""
"[RISE](https://github.com/damianavila/RISE) allows via extension to "
"create live slideshows of your notebooks, with no conversion, adding "
"javascript Reveal.js:"
msgstr ""

#: ../../using/recipes.md:197 d335f9ccd0bf49739dfb3f138061d0f7
msgid ""
"```bash # Add Live slideshows with RISE RUN conda install -c "
"damianavila82 rise ```"
msgstr ""

#: ../../using/recipes.md:202 068e31f692ff464a8817d744e3a8144e
msgid ""
"Credit: [Paolo D.](https://github.com/pdonorio) based on [docker-"
"stacks/issues/43](https://github.com/jupyter/docker-stacks/issues/43)"
msgstr ""

#: ../../using/recipes.md:205 388b8776c5c841a8823b99cf55972acf
msgid "## xgboost"
msgstr ""

# ce204678c3af4aa9a0fb55bb6de7554b
#: ../../using/recipes.md:207 d173781833f84fc6a5ffa278ff0b41f1
msgid ""
"You need to install conda's gcc for Python xgboost to work properly. "
"Otherwise, you'll get an exception about libgomp.so.1 missing GOMP_4.0."
msgstr ""

#: ../../using/recipes.md:210 dce7c19288d9425190c9ab663608f40c
#, python-format
msgid "```bash %%bash conda install -y gcc pip install xgboost"
msgstr ""

#: ../../using/recipes.md:215 ff4efce90f6a486099c679f3e3f7400f
msgid "import xgboost ```"
msgstr ""

#: ../../using/recipes.md:218 9178685a972147908af1612f91f65449
msgid "## Running behind a nginx proxy"
msgstr ""

# ca7763a5a35a47bd9fb29ae9d00feab3
#: ../../using/recipes.md:220 12a2d47f95c24cd9a37989f55c35ed87
msgid ""
"Sometimes it is useful to run the Jupyter instance behind a nginx proxy, "
"for instance:"
msgstr ""

#: ../../using/recipes.md:222 cb722fe5dd784f059e67f1947311cb51
msgid ""
"you would prefer to access the notebook at a server URL with a path "
"(`https://example.com/jupyter`) rather than a port "
"(`https://example.com:8888`)"
msgstr ""

# a5129fb6e2b042f5b8161ed5318123f9
#: ../../using/recipes.md:224 32fac24189354abaa95b471a000a558e
msgid ""
"you may have many different services in addition to Jupyter running on "
"the same server, and want to nginx to help improve server performance in "
"manage the connections"
msgstr ""

#: ../../using/recipes.md:227 67590d5c39344d42a268499a33aa1c2c
msgid ""
"Here is a [quick example NGINX "
"configuration](https://gist.github.com/cboettig/8643341bd3c93b62b5c2) to "
"get started. You'll need a server, a `.crt` and `.key` file for your "
"server, and `docker` & `docker-compose` installed. Then just download the"
" files at that gist and run `docker-compose up -d` to test it out. "
"Customize the `nginx.conf` file to set the desired paths and add other "
"services."
msgstr ""

#: ../../using/recipes.md:232 07ea1fedda4c4d2bbdf09a8838731f82
msgid "## Host volume mounts and notebook errors"
msgstr ""

#: ../../using/recipes.md:234 7e678ec9766649f49ddbbe1e29fecee6
msgid ""
"If you are mounting a host directory as `/home/jovyan/work` in your "
"container and you receive permission errors or connection errors when you"
" create a notebook, be sure that the `jovyan` user (UID=1000 by default) "
"has read/write access to the directory on the host. Alternatively, "
"specify the UID of the `jovyan` user on container startup using the `-e "
"NB_UID` option described in the [Common Features, Docker Options "
"section](../using/common.html#Docker-Options)"
msgstr ""

#: ../../using/recipes.md:240 2a3d5051320f48d58efb9168d83369f7
msgid ""
"Ref: [https://github.com/jupyter/docker-"
"stacks/issues/199](https://github.com/jupyter/docker-stacks/issues/199)"
msgstr ""

#: ../../using/recipes.md:243 19175c6320e8470e9b9241c7237eaf84
msgid "## Manpage installation"
msgstr ""

# 7fc6566074ee4ba3a4e579437d7f151d
#: ../../using/recipes.md:245 3c61fbb507494040a006786487640e07
msgid ""
"Most containers, including our Ubuntu base image, ship without manpages "
"installed to save space. You can use the following dockerfile to inherit "
"from one of our images to enable manpages:"
msgstr ""

#: ../../using/recipes.md:248 1a9b3529a63f434ea39e12bf74540d2f
msgid ""
"```dockerfile # Choose your desired base image ARG BASE_CONTAINER=jupyter"
"/datascience-notebook:latest FROM $BASE_CONTAINER"
msgstr ""

#: ../../using/recipes.md:255 9eff3033c6b1440db0a08bd744b2b75f
msgid ""
"# Remove the manpage blacklist, install man, install docs RUN rm "
"/etc/dpkg/dpkg.cfg.d/excludes \\"
msgstr ""

#: ../../using/recipes.md:257 d881c8dfe4ec488f838dd5eff2d9eabe
msgid ""
"&& apt-get update \\ && dpkg -l | grep ^ii | cut -d' ' -f3 | xargs apt-"
"get install -yq --no-install-recommends --reinstall man \\ && apt-get "
"clean \\ && rm -rf /var/lib/apt/lists/*"
msgstr ""

#: ../../using/recipes.md:262 28845f79eb3241958142d55880cf47c3
msgid "USER $NB_UID ```"
msgstr ""

#: ../../using/recipes.md:265 921a443da16a453694919019ffae31ef
msgid ""
"Adding the documentation on top of an existing singleuser image wastes a "
"lot of space and requires reinstalling every system package, which can "
"take additional time and bandwidth; the `datascience-notebook` image has "
"been shown to grow by almost 3GB when adding manapages in this way. "
"Enabling manpages in the base Ubuntu layer prevents this container bloat."
" Just use previous `Dockerfile` with original ubuntu image as your base "
"container:"
msgstr ""

#: ../../using/recipes.md:271 c52e6b286ced4a838f926a6a5f670f4b
msgid ""
"```dockerfile # Ubuntu 20.04 (focal) from 2020-04-23 # https://github.com"
"/docker-library/official-"
"images/commit/4475094895093bcc29055409494cce1e11b52f94 ARG "
"BASE_CONTAINER=ubuntu:focal-20200423@sha256:238e696992ba9913d24cfc3727034985abd136e08ee3067982401acdc30cbf3f"
" ```"
msgstr ""

#: ../../using/recipes.md:277 5bf82fd03f31447c91db19c91196f944
msgid ""
"For Ubuntu 18.04 (bionic) and earlier, you may also require to workaround"
" for a mandb bug, which was fixed in mandb >= 2.8.6.1:"
msgstr ""

#: ../../using/recipes.md:279 dda768f81df94eeba70418580ba1f22c
msgid ""
"```dockerfile # https://git.savannah.gnu.org/cgit/man-"
"db.git/commit/?id=8197d7824f814c5d4b992b4c8730b5b0f7ec589a # "
"http://launchpadlibrarian.net/435841763/man-db_2.8.5-2_2.8.6-1.diff.gz"
msgstr ""

#: ../../using/recipes.md:285 dc7af8d54aaf46bd93e06fb14642efe0
msgid ""
"RUN echo \"MANPATH_MAP ${CONDA_DIR}/bin ${CONDA_DIR}/man\" >> "
"/etc/manpath.config \\"
msgstr ""

#: ../../using/recipes.md:284 6a211fc49d3442b18c65c16c764dbe79
msgid ""
"&& echo \"MANPATH_MAP ${CONDA_DIR}/bin ${CONDA_DIR}/share/man\" >> "
"/etc/manpath.config \\ && mandb"
msgstr ""

#: ../../using/recipes.md:289 e4309d98afd043e397ac0a957e69c4fe
msgid ""
"Be sure to check the current base image in `base-notebook` before "
"building."
msgstr ""

#: ../../using/recipes.md:291 ae82f82e219a4830a59297a62a4b6b05
msgid "## JupyterHub"
msgstr ""

# af0ca920391b419b805ae3809388fcf2
#: ../../using/recipes.md:293 5883cb8e94bc4bd8a652b85b455ada27
msgid "We also have contributed recipes for using JupyterHub."
msgstr ""

#: ../../using/recipes.md:295 19628ac616d348f99dc2cc4c5dd50497
msgid "### Use JupyterHub's dockerspawner"
msgstr ""

# 81e1dbb4c1c34f4c9e88630adff3d1e9
#: ../../using/recipes.md:297 54a485def6f242c49d693e3eed1a8278
msgid ""
"In most cases for use with DockerSpawner, given any image that already "
"has a notebook stack set up, you would only need to add:"
msgstr ""

# 837b7a2dac01402e8cd2cc398bd5d785
#: ../../using/recipes.md:300 9e0c0bc3ccc8406cac72474c6b97e6e0
msgid "install the jupyterhub-singleuser script (for the right Python)"
msgstr ""

# d9816cb5ae2041e2a5fde9cdfb91262f
#: ../../using/recipes.md:301 2aaa13a328684f2db8f3ba8d931b0fc0
msgid "change the command to launch the single-user server"
msgstr ""

#: ../../using/recipes.md:303 4e0d88222e554d3cae8b3d66f2c7a8c0
msgid ""
"Swapping out the `FROM` line in the `jupyterhub/singleuser` Dockerfile "
"should be enough for most cases."
msgstr ""

#: ../../using/recipes.md:306 c266ecbe25464e35a666ee5b9aa04b35
msgid ""
"Credit: [Justin Tyberg](https://github.com/jtyberg), "
"[quanghoc](https://github.com/quanghoc), and [Min "
"RK](https://github.com/minrk) based on [docker-"
"stacks/issues/124](https://github.com/jupyter/docker-stacks/issues/124) "
"and [docker-stacks/pull/185](https://github.com/jupyter/docker-"
"stacks/pull/185)"
msgstr ""

#: ../../using/recipes.md:311 f79eb47eea2f498abf92f2d8b07ad906
msgid "### Containers with a specific version of JupyterHub"
msgstr ""

#: ../../using/recipes.md:313 8471a5b2fe9648778d16387f3de767a6
msgid ""
"To use a specific version of JupyterHub, the version of `jupyterhub` in "
"your image should match the version in the Hub itself."
msgstr ""

#: ../../using/recipes.md:316 9ee6c5176f1d434998f898d3c8e02c80
msgid ""
"```dockerfile FROM jupyter/base-notebook:5ded1de07260 RUN pip install "
"jupyterhub==0.8.0b1 ```"
msgstr ""

#: ../../using/recipes.md:321 25074cf76c934798b21dfbfe5ba944c3
msgid ""
"Credit: [MinRK](https://github.com/jupyter/docker-"
"stacks/issues/423#issuecomment-322767742)"
msgstr ""

#: ../../using/recipes.md:323 d70508d43f614d729b5900aa5ab2e2df
msgid ""
"Ref: [https://github.com/jupyter/docker-"
"stacks/issues/177](https://github.com/jupyter/docker-stacks/issues/177)"
msgstr ""

#: ../../using/recipes.md:326 a8fe377922894f67b54e90bdf0664f53
msgid "## Spark"
msgstr ""

# 975c96d6a0b843dfabd889c753671c93
#: ../../using/recipes.md:328 d3cff21710284c32a4832d17b95cca30
msgid "A few suggestions have been made regarding using Docker Stacks with spark."
msgstr ""

#: ../../using/recipes.md:330 2673d6f2fcd640aa9ad161906948a508
msgid "### Using PySpark with AWS S3"
msgstr ""

# dc4059d42eaa495f8ebca84ebc91ac09
#: ../../using/recipes.md:332 afd4b528dec543adb22eb91054f5c2dc
msgid "Using Spark session for hadoop 2.7.3"
msgstr ""

#: ../../using/recipes.md:334 13e307ccce544ef182fda43e655ba2fb
msgid ""
"```py import os # !ls /usr/local/spark/jars/hadoop* # to figure out what "
"version of hadoop os.environ['PYSPARK_SUBMIT_ARGS'] = '--packages "
"\"org.apache.hadoop:hadoop-aws:2.7.3\" pyspark-shell'"
msgstr ""

#: ../../using/recipes.md:339 d11fb4696f8a40949b0609838be32072
msgid "import pyspark myAccessKey = input() mySecretKey = input()"
msgstr ""

#: ../../using/recipes.md:347 224c5ace13414824864b14209a3675ba
msgid "spark = pyspark.sql.SparkSession.builder \\"
msgstr ""

#: ../../using/recipes.md:344 9b2ced076fd2470999b61fc8c85c4ae9
msgid ""
".master(\"local[*]\") \\ .config(\"spark.hadoop.fs.s3a.access.key\", "
"myAccessKey) \\ .config(\"spark.hadoop.fs.s3a.secret.key\", mySecretKey) "
"\\ .getOrCreate()"
msgstr ""

#: ../../using/recipes.md:349 28ec832b63914d4d9bd7594fc8155895
msgid "df = spark.read.parquet(\"s3://myBucket/myKey\") ```"
msgstr ""

# d2c12e3525bf4d9ca518fef02c4a79d3
#: ../../using/recipes.md:352 792c80163642402291c9da278c09ef7e
msgid "Using Spark context for hadoop 2.6.0"
msgstr ""

#: ../../using/recipes.md:354 a8f91735e56f452d8c4382262254af3a
msgid ""
"```py import os os.environ['PYSPARK_SUBMIT_ARGS'] = '--packages "
"com.amazonaws:aws-java-sdk:1.10.34,org.apache.hadoop:hadoop-aws:2.6.0 "
"pyspark-shell'"
msgstr ""

#: ../../using/recipes.md:358 b3996e3079ff472a98c0ced6e7b894c9
msgid "import pyspark sc = pyspark.SparkContext(\"local[*]\")"
msgstr ""

#: ../../using/recipes.md:361 ef8ecd89eff54463b73bbd9cd5674a4a
msgid "from pyspark.sql import SQLContext sqlContext = SQLContext(sc)"
msgstr ""

#: ../../using/recipes.md:364 1cf8412fade8472facefbd43dc244eac
msgid ""
"hadoopConf = sc._jsc.hadoopConfiguration() myAccessKey = input() "
"mySecretKey = input() hadoopConf.set(\"fs.s3.impl\", "
"\"org.apache.hadoop.fs.s3native.NativeS3FileSystem\") "
"hadoopConf.set(\"fs.s3.awsAccessKeyId\", myAccessKey) "
"hadoopConf.set(\"fs.s3.awsSecretAccessKey\", mySecretKey)"
msgstr ""

#: ../../using/recipes.md:371 b8f350da593546e597382606b1941655
msgid "df = sqlContext.read.parquet(\"s3://myBucket/myKey\") ```"
msgstr ""

#: ../../using/recipes.md:374 70fc1ee5affa417c9dd18a5017650ac2
msgid ""
"Ref: [https://github.com/jupyter/docker-"
"stacks/issues/127](https://github.com/jupyter/docker-stacks/issues/127)"
msgstr ""

#: ../../using/recipes.md:377 bc59535e5ee14a42a5b0e8c5c48e8f6b
msgid "### Using Local Spark JARs"
msgstr ""

#: ../../using/recipes.md:379 5312fe4cc1bd45219189b52c4b5b820f
msgid ""
"```python import os os.environ['PYSPARK_SUBMIT_ARGS'] = '--jars "
"/home/jovyan/spark-streaming-kafka-assembly_2.10-1.6.1.jar pyspark-shell'"
" import pyspark from pyspark.streaming.kafka import KafkaUtils from "
"pyspark.streaming import StreamingContext sc = pyspark.SparkContext() ssc"
" = StreamingContext(sc,1) broker = \"<my_broker_ip>\" directKafkaStream ="
" KafkaUtils.createDirectStream(ssc, [\"test1\"], "
"{\"metadata.broker.list\": broker}) directKafkaStream.pprint() "
"ssc.start() ```"
msgstr ""

#: ../../using/recipes.md:393 53f93be7498f4c64885c8eee9052420a
msgid ""
"Ref: [https://github.com/jupyter/docker-"
"stacks/issues/154](https://github.com/jupyter/docker-stacks/issues/154)"
msgstr ""

#: ../../using/recipes.md:396 8f2a2fb40d594705873d7dd0e3cdfc42
msgid "### Using spark-packages.org"
msgstr ""

#: ../../using/recipes.md:398 07a6787d852542c19a137ac3520e59ae
msgid ""
"If you'd like to use packages from [spark-packages.org](https://spark-"
"packages.org/), see "
"[https://gist.github.com/parente/c95fdaba5a9a066efaab](https://gist.github.com/parente/c95fdaba5a9a066efaab)"
" for an example of how to specify the package identifier in the "
"environment before creating a SparkContext."
msgstr ""

#: ../../using/recipes.md:403 d1eb722207e543e596fa47f5b03979d9
msgid ""
"Ref: [https://github.com/jupyter/docker-"
"stacks/issues/43](https://github.com/jupyter/docker-stacks/issues/43)"
msgstr ""

#: ../../using/recipes.md:406 64d581b9c5bc4dbcb3282c0c2bcd9e8e
msgid "### Use jupyter/all-spark-notebooks with an existing Spark/YARN cluster"
msgstr ""

#: ../../using/recipes.md:408 934f9472b71243728c8235fe01be4130
msgid "```dockerfile FROM jupyter/all-spark-notebook"
msgstr ""

#: ../../using/recipes.md:411 7bb361dc56b542709732f69a98106c8a
msgid ""
"# Set env vars for pydoop ENV HADOOP_HOME /usr/local/hadoop-2.7.3 ENV "
"JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64 ENV HADOOP_CONF_HOME "
"/usr/local/hadoop-2.7.3/etc/hadoop ENV HADOOP_CONF_DIR  "
"/usr/local/hadoop-2.7.3/etc/hadoop"
msgstr ""

#: ../../using/recipes.md:417 c8fecf9cf4e44c4996462910bddc57f5
msgid ""
"USER root # Add proper open-jdk-8 not just the jre, needed for pydoop RUN"
" echo 'deb http://cdn-fastly.deb.debian.org/debian jessie-backports main'"
" > /etc/apt/sources.list.d/jessie-backports.list && \\"
msgstr ""

#: ../../using/recipes.md:420 5293599be71641e4abf30772f0df2d2a
msgid ""
"apt-get -y update && \\ apt-get install --no-install-recommends -t "
"jessie-backports -y openjdk-8-jdk && \\ rm /etc/apt/sources.list.d"
"/jessie-backports.list && \\ apt-get clean && \\ rm -rf "
"/var/lib/apt/lists/ && \\"
msgstr ""

#: ../../using/recipes.md:428 282b22595b5742bda137c850fafcb3e4
msgid "# Add hadoop binaries"
msgstr ""

#: ../../using/recipes.md:426 e679bdab6431404284a3c9fc98819fa1
msgid ""
"wget "
"http://mirrors.ukfast.co.uk/sites/ftp.apache.org/hadoop/common/hadoop-2.7.3/hadoop-2.7.3.tar.gz"
" && \\ tar -xvf hadoop-2.7.3.tar.gz -C /usr/local && \\ chown -R "
"$NB_USER:users /usr/local/hadoop-2.7.3 && \\ rm -f hadoop-2.7.3.tar.gz &&"
" \\"
msgstr ""

#: ../../using/recipes.md:433 390a3cf83dd549fca9d6b321633ccc3a
msgid "# Install os dependencies required for pydoop, pyhive"
msgstr ""

#: ../../using/recipes.md:431 b45b0e823e5742a2ae7da6326aa16314
msgid ""
"apt-get update && \\ apt-get install --no-install-recommends -y build-"
"essential python-dev libsasl2-dev && \\ apt-get clean && \\ rm -rf "
"/var/lib/apt/lists/* && \\"
msgstr ""

#: ../../using/recipes.md:435 bdd6e7dffe6342e18cd746d270f31a31
msgid ""
"# Remove the example hadoop configs and replace # with those for our "
"cluster. # Alternatively this could be mounted as a volume"
msgstr ""

#: ../../using/recipes.md:438 29745ed2618d47b3ab63ea8b196917e2
msgid "rm -f /usr/local/hadoop-2.7.3/etc/hadoop/*"
msgstr ""

#: ../../using/recipes.md:440 13f7abd33a4740d9a5cc4c8019e5cf13
msgid ""
"# Download this from ambari / cloudera manager and copy here COPY "
"example-hadoop-conf/ /usr/local/hadoop-2.7.3/etc/hadoop/"
msgstr ""

#: ../../using/recipes.md:443 650d800a22f84fb1a557b2877e31cbd8
msgid ""
"# Spark-Submit doesn't work unless I set the following RUN echo "
"\"spark.driver.extraJavaOptions -Dhdp.version=2.5.3.0-37\" >> "
"/usr/local/spark/conf/spark-defaults.conf  && \\"
msgstr ""

#: ../../using/recipes.md:445 7934f1364f0b42c987af90f734168b22
msgid ""
"echo \"spark.yarn.am.extraJavaOptions -Dhdp.version=2.5.3.0-37\" >> "
"/usr/local/spark/conf/spark-defaults.conf && \\ echo "
"\"spark.master=yarn\" >>  /usr/local/spark/conf/spark-defaults.conf && \\"
" echo \"spark.hadoop.yarn.timeline-service.enabled=false\" >> "
"/usr/local/spark/conf/spark-defaults.conf && \\ chown -R $NB_USER:users "
"/usr/local/spark/conf/spark-defaults.conf && \\ # Create an alternative "
"HADOOP_CONF_HOME so we can mount as a volume and repoint # using ENV var "
"if needed mkdir -p /etc/hadoop/conf/ && \\ chown $NB_USER:users "
"/etc/hadoop/conf/"
msgstr ""

#: ../../using/recipes.md:454 ../../using/recipes.md:502
#: 11157403d5da4a15b0346d6b26557dfa 67215ef4f1dc4611b64f1c780929edde
msgid "USER $NB_USER"
msgstr ""

#: ../../using/recipes.md:456 f9476b86d28b4e738466b8fdcc93f5b7
msgid ""
"# Install useful jupyter extensions and python libraries like : # - "
"Dashboards # - PyDoop # - PyHive RUN pip install jupyter_dashboards faker"
" && \\"
msgstr ""

#: ../../using/recipes.md:461 1acdb5f9f53c44458efa7c846e843fd5
msgid ""
"jupyter dashboards quick-setup --sys-prefix && \\ pip2 install pyhive "
"pydoop thrift sasl thrift_sasl faker"
msgstr ""

#: ../../using/recipes.md:464 1255707c5d084e4c915b6f34b7e5f533
msgid ""
"USER root # Ensure we overwrite the kernel config so that toree connects "
"to cluster RUN jupyter toree install --sys-prefix --spark_opts=\"--master"
" yarn --deploy-mode client --driver-memory 512m  --executor-memory 512m  "
"--executor-cores 1 --driver-java-options -Dhdp.version=2.5.3.0-37 --conf "
"spark.hadoop.yarn.timeline-service.enabled=false\" USER $NB_USER ```"
msgstr ""

#: ../../using/recipes.md:470 e079f13287e54b1d858a1a111afa3c4e
msgid ""
"Credit: [britishbadger](https://github.com/britishbadger) from [docker-"
"stacks/issues/369](https://github.com/jupyter/docker-stacks/issues/369)"
msgstr ""

#: ../../using/recipes.md:473 560d9982dbb543fda473da31adb1b160
msgid ""
"## Run Jupyter Notebook/Lab inside an already secured environment (i.e., "
"with no token)"
msgstr ""

#: ../../using/recipes.md:475 121383862b4a4facaebaa0d947e69735
msgid ""
"(Adapted from [issue 728](https://github.com/jupyter/docker-"
"stacks/issues/728))"
msgstr ""

#: ../../using/recipes.md:477 603fbe1ca1b9490aa0842f718807a439
msgid ""
"The default security is very good. There are use cases, encouraged by "
"containers, where the jupyter container and the system it runs within, "
"lie inside the security boundary. In these use cases it is convenient to "
"launch the server without a password or token. In this case, you should "
"use the `start.sh` script to launch the server with no token:"
msgstr ""

# 7476a6d5eae74ecaae966e56390c096e
#: ../../using/recipes.md:482 d122137cac1a4660b942c0bd789505bc
msgid "For jupyterlab:"
msgstr ""

#: ../../using/recipes.md:484 384f94a6db1644c38e455c75dc416eb1
msgid ""
"```bash docker run jupyter/base-notebook:6d2a05346196 start.sh jupyter "
"lab --LabApp.token='' ```"
msgstr ""

# f2efc5a0ba6b4c53b2047cc5f22bdbaa
#: ../../using/recipes.md:488 4e64d5ee591f4010ad000b48d35b634d
msgid "For jupyter classic:"
msgstr ""

#: ../../using/recipes.md:490 886964caccaf41f198b54c0eab7f16c8
msgid ""
"```bash docker run jupyter/base-notebook:6d2a05346196 start.sh jupyter "
"notebook --NotebookApp.token='' ```"
msgstr ""

#: ../../using/recipes.md:494 a235b77b597d40ee99c8f59545a774fe
msgid "## Enable nbextension spellchecker for markdown (or any other nbextension)"
msgstr ""

# 8ccfbcb4264f48d0b6709fe81aa0a86d
#: ../../using/recipes.md:496 95d36585db4b465f9fdb6a55bfd064cf
msgid "NB: this works for classic notebooks only"
msgstr ""

#: ../../using/recipes.md:498 39e2abfefa64496a9dcc5034c2f728bb
msgid ""
"```dockerfile # Update with your base image of choice FROM jupyter"
"/minimal-notebook:latest"
msgstr ""

#: ../../using/recipes.md:506 571734791180457c9d57dc44cc8a9145
msgid "RUN pip install jupyter_contrib_nbextensions && \\"
msgstr ""

#: ../../using/recipes.md:505 764c2030f0814386a95b295b4dd54bb3
msgid ""
"jupyter contrib nbextension install --user && \\ # can modify or enable "
"additional extensions here jupyter nbextension enable spellchecker/main "
"--user"
msgstr ""

#: ../../using/recipes.md:510 66c929eeaf044a64b559eb2711c77b20
msgid ""
"Ref: [https://github.com/jupyter/docker-"
"stacks/issues/675](https://github.com/jupyter/docker-stacks/issues/675)"
msgstr ""

#: ../../using/recipes.md:513 caf73db8ec534d44b18b6dc92f715374
msgid "## Enable auto-sklearn notebooks"
msgstr ""

#: ../../using/recipes.md:515 4ad7167dca464e8aa3daefc6aaeba169
msgid ""
"Using `auto-sklearn` requires `swig`, which the other notebook images "
"lack, so it cant be experimented with. Also, there is no Conda package "
"for `auto-sklearn`."
msgstr ""

#: ../../using/recipes.md:517 97f82c949e794993ae8e7dab0aa7771e
msgid ""
"```dockerfile ARG BASE_CONTAINER=jupyter/scipy-notebook FROM jupyter"
"/scipy-notebook:latest"
msgstr ""

#: ../../using/recipes.md:523 4509fc4dd82e470b93cdaa57ea3eff7c
msgid ""
"# autosklearn requires swig, which no other image has RUN apt-get update "
"&& \\"
msgstr ""

#: ../../using/recipes.md:525 fba80fe6d45f471ca9a1c422d6ce6f74
msgid ""
"apt-get install -y --no-install-recommends swig && \\ apt-get clean && \\"
" rm -rf /var/lib/apt/lists/*"
msgstr ""

#: ../../using/recipes.md:530 ../../using/recipes.md:550
#: 4c5c18dc29914b96a4cc7e488708f3a8 8466a1481c6b427fba82d872d4a24f85
msgid "USER $NB_UID"
msgstr ""

#: ../../using/recipes.md:532 e8d4fe08805048d0a5148864d0026ed9
msgid "RUN pip install --quiet --no-cache-dir auto-sklearn ```"
msgstr ""

#: ../../using/recipes.md:535 d2fc744904a44faa8914ed82413adc76
msgid "## Enable Delta Lake in Spark notebooks"
msgstr ""

#: ../../using/recipes.md:537 a6206adcbeaf4443ac50cf857e1a79e1
msgid ""
"Please note that the [Delta Lake](https://delta.io/) packages are only "
"available for Spark version > `3.0`. By adding the properties to `spark-"
"defaults.conf`, the user no longer needs to enable Delta support in each "
"notebook."
msgstr ""

#: ../../using/recipes.md:539 7294b5495244424da5724b9dfc23b65b
msgid "```dockerfile FROM jupyter/pyspark-notebook:latest"
msgstr ""

#: ../../using/recipes.md:542 13cf10a4d4b443a792a63a59efae1f9a
msgid "ARG DELTA_CORE_VERSION=\"0.8.0\""
msgstr ""

#: ../../using/recipes.md:548 1e3f4a913f054938b928df369af4f373
msgid ""
"RUN echo \"spark.jars.packages io.delta:delta-"
"core_2.12:${DELTA_CORE_VERSION}\" >> $SPARK_HOME/conf/spark-defaults.conf"
" && \\"
msgstr ""

#: ../../using/recipes.md:547 05a3e75ba1dc48e4a0c430f86ecdd7e9
msgid ""
"echo 'spark.sql.extensions io.delta.sql.DeltaSparkSessionExtension' >> "
"$SPARK_HOME/conf/spark-defaults.conf && \\ echo "
"'spark.sql.catalog.spark_catalog "
"org.apache.spark.sql.delta.catalog.DeltaCatalog' >> $SPARK_HOME/conf"
"/spark-defaults.conf"
msgstr ""

#: ../../using/recipes.md:552 1777554089554ba98642e571dffa7d14
msgid ""
"# Run pyspark and exit to trigger the download of the delta lake jars RUN"
" echo \"quit()\" > /tmp/init-delta.py && \\"
msgstr ""

#: ../../using/recipes.md:554 244cec99a20b4ec1bdc9fcbfbcd36d3d
msgid "spark-submit /tmp/init-delta.py && \\ rm /tmp/init-delta.py"
msgstr ""

#: ../../using/running.md:1 18033a4caaa04450b1c22547ced1c8e8
msgid "# Running a Container"
msgstr ""

# 1f345e7a53e94439b936b3f4bbc877da
# 324906e630c646b0ae10bbff6ed587fa
#: ../../using/running.md:3 ../../using/selecting.md:7
#: 391bf6e3a13b4ea49875cde66d69d293 fd333012a25e4bd3b5afcaa839a6efd5
msgid "Using one of the Jupyter Docker Stacks requires two choices:"
msgstr ""

# 781cbaffaea24fb08451cc83327cfa9b
# 1c6c83776a3b4a27a8ed4128a0dceeb7
#: ../../using/running.md:5 ../../using/selecting.md:9
#: b17ed69f11124937b8c0cc93f345a476 d69c90490b7e46c1a558bf9dbdcedfdb
msgid "Which Docker image you wish to use"
msgstr ""

# 632f67c9207e4ed9ba01bf59c4d942f7
# ab191cfc95204429b7c0271ecdf69d33
#: ../../using/running.md:6 ../../using/selecting.md:10
#: 8349f189f8e34a8ca6c0cf629a8bdb44 cf95250cdebf493b98e438328b40d403
msgid "How you wish to start Docker containers from that image"
msgstr ""

# ebf870aa1ede4e2ab8fdcb2cef0fd610
#: ../../using/running.md:8 daad712f00da4650b5a5a70df2719eb7
msgid "This section provides details about the second."
msgstr ""

#: ../../using/running.md:10 9e1e7b20f0f64016bfc07e0a21dd5b1f
msgid "## Using the Docker CLI"
msgstr ""

#: ../../using/running.md:12 bf74a7509b374ef19d540bbf96c889bd
msgid ""
"You can launch a local Docker container from the Jupyter Docker Stacks "
"using the [Docker command line "
"interface](https://docs.docker.com/engine/reference/commandline/cli/). "
"There are numerous ways to configure containers using the CLI. The "
"following are some common patterns."
msgstr ""

#: ../../using/running.md:14 aaa890cae06a4480b69dd6992aba1285
msgid ""
"**Example 1** This command pulls the `jupyter/scipy-notebook` image "
"tagged `2c80cf3537ca` from Docker Hub if it is not already present on the"
" local host. It then starts a container running a Jupyter Notebook server"
" and exposes the server on host port 8888. The server logs appear in the "
"terminal and include a URL to the notebook server."
msgstr ""

#: ../../using/running.md:16 ca4a5192cbf44f25bfeaee57f4f9d8f3
msgid "```bash $ docker run -p 8888:8888 jupyter/scipy-notebook:2c80cf3537ca"
msgstr ""

#: ../../using/running.md:19 b642f518c265448386e957801ce54e8e
msgid ""
"Executing the command: jupyter notebook [I 15:33:00.567 NotebookApp] "
"Writing notebook server cookie secret to "
"/home/jovyan/.local/share/jupyter/runtime/notebook_cookie_secret [W "
"15:33:01.084 NotebookApp] WARNING: The notebook server is listening on "
"all IP addresses and not using encryption. This is not recommended. [I "
"15:33:01.150 NotebookApp] JupyterLab alpha preview extension loaded from "
"/opt/conda/lib/python3.6/site-packages/jupyterlab [I 15:33:01.150 "
"NotebookApp] JupyterLab application directory is "
"/opt/conda/share/jupyter/lab [I 15:33:01.155 NotebookApp] Serving "
"notebooks from local directory: /home/jovyan [I 15:33:01.156 NotebookApp]"
" 0 active kernels [I 15:33:01.156 NotebookApp] The Jupyter Notebook is "
"running at: [I 15:33:01.157 NotebookApp] http://[all ip addresses on your"
" system]:8888/?token=112bb073331f1460b73768c76dffb2f87ac1d4ca7870d46a [I "
"15:33:01.157 NotebookApp] Use Control-C to stop this server and shut down"
" all kernels (twice to skip confirmation). [C 15:33:01.160 NotebookApp]"
msgstr ""

#: ../../using/running.md:31 ../../using/running.md:72
#: ../../using/running.md:94 3b928b6b0c12410f868ad4e899a23296
#: 51bc017cad4b436c9b938cf04284a845 d9ba952deddc4741b1828741afc17bab
msgid ""
"Copy/paste this URL into your browser when you connect for the first "
"time, to login with a token:"
msgstr ""

#: ../../using/running.md:33 f8a4b592d244414c9008b1cf245cf8a4
msgid "http://localhost:8888/?token=112bb073331f1460b73768c76dffb2f87ac1d4ca7870d46a"
msgstr ""

#: ../../using/running.md:36 9a9beed152af4cffba21f05610269bc7
msgid ""
"Pressing `Ctrl-C` shuts down the notebook server but leaves the container"
" intact on disk for later restart or permanent deletion using commands "
"like the following:"
msgstr ""

#: ../../using/running.md:38 df25009bad1a4a78bb591fb962e941e3
msgid ""
"```bash # list containers $ docker ps -a CONTAINER ID        IMAGE"
"                   COMMAND                  CREATED    STATUS"
"                      PORTS               NAMES d67fe77f1a84        "
"jupyter/base-notebook   \"tini -- start-noteb…\"   44 seconds ago    "
"Exited (0) 39 seconds ago                       cocky_mirzakhani"
msgstr ""

#: ../../using/running.md:44 bebbd7ad121c4099bb562a2d40bfaa82
msgid ""
"# start the stopped container $ docker start -a d67fe77f1a84 Executing "
"the command: jupyter notebook [W 16:45:02.020 NotebookApp] WARNING: The "
"notebook server is listening on all IP addresses and not using "
"encryption. This is not recommended. ..."
msgstr ""

#: ../../using/running.md:50 7e449c6ff16f4f38865e7ac60331c1a5
msgid "# remove the stopped container $ docker rm d67fe77f1a84 d67fe77f1a84 ```"
msgstr ""

#: ../../using/running.md:55 129b3dfee5dd44ef98035c2a0f6093d5
msgid ""
"**Example 2** This command pulls the `jupyter/r-notebook` image tagged "
"`e5c5a7d3e52d` from Docker Hub if it is not already present on the local "
"host. It then starts a container running a Jupyter Notebook server and "
"exposes the server on host port 10000. The server logs appear in the "
"terminal and include a URL to the notebook server, but with the internal "
"container port (8888) instead of the the correct host port (10000)."
msgstr ""

#: ../../using/running.md:57 160b5231236e4c9aad6837f9061904fc
msgid ""
"```bash $ docker run --rm -p 10000:8888 -v \"$PWD\":/home/jovyan/work "
"jupyter/r-notebook:e5c5a7d3e52d"
msgstr ""

#: ../../using/running.md:60 4cdbbe8e23a742de93168a36feee3182
msgid ""
"Executing the command: jupyter notebook [I 19:31:09.573 NotebookApp] "
"Writing notebook server cookie secret to "
"/home/jovyan/.local/share/jupyter/runtime/notebook_cookie_secret [W "
"19:31:11.930 NotebookApp] WARNING: The notebook server is listening on "
"all IP addresses and not using encryption. This is not recommended. [I "
"19:31:12.085 NotebookApp] JupyterLab alpha preview extension loaded from "
"/opt/conda/lib/python3.6/site-packages/jupyterlab [I 19:31:12.086 "
"NotebookApp] JupyterLab application directory is "
"/opt/conda/share/jupyter/lab [I 19:31:12.117 NotebookApp] Serving "
"notebooks from local directory: /home/jovyan [I 19:31:12.117 NotebookApp]"
" 0 active kernels [I 19:31:12.118 NotebookApp] The Jupyter Notebook is "
"running at: [I 19:31:12.119 NotebookApp] http://[all ip addresses on your"
" system]:8888/?token=3b8dce890cb65570fb0d9c4a41ae067f7604873bd604f5ac [I "
"19:31:12.120 NotebookApp] Use Control-C to stop this server and shut down"
" all kernels (twice to skip confirmation). [C 19:31:12.122 NotebookApp]"
msgstr ""

#: ../../using/running.md:74 5ad59f0aef464ac88aae44b8c7bc021c
msgid "http://localhost:8888/?token=3b8dce890cb65570fb0d9c4a41ae067f7604873bd604f5ac"
msgstr ""

#: ../../using/running.md:77 78f031bbe3ee4947bd9210704846ea1f
msgid ""
"Pressing `Ctrl-C` shuts down the notebook server and immediately destroys"
" the Docker container. Files written to `~/work` in the container remain "
"touched. Any other changes made in the container are lost."
msgstr ""

#: ../../using/running.md:79 392ef8aa268743a8be0af33b68bdae28
msgid ""
"**Example 3** This command pulls the `jupyter/all-spark-notebook` image "
"currently tagged `latest` from Docker Hub if an image tagged `latest` is "
"not already present on the local host. It then starts a container named "
"`notebook` running a JupyterLab server and exposes the server on a "
"randomly selected port."
msgstr ""

#: ../../using/running.md:81 a23a0191d5664872b1a8c812fd0ad42a
msgid "```bash docker run -d -P --name notebook jupyter/all-spark-notebook ```"
msgstr ""

# 9a561b9bb5944059801c71862521d66a
#: ../../using/running.md:85 5af448b5cc6d4b2eb8707cda74d5f8a3
msgid ""
"The assigned port and notebook server token are visible using other "
"Docker commands."
msgstr ""

#: ../../using/running.md:87 31d9dcd23db6494e9c4d1c40faa5a16b
msgid ""
"```bash # get the random host port assigned to the container port 8888 $ "
"docker port notebook 8888 0.0.0.0:32769"
msgstr ""

#: ../../using/running.md:92 80d9d90018d64aac976f64e024691577
msgid "# get the notebook token from the logs $ docker logs --tail 3 notebook"
msgstr ""

#: ../../using/running.md:96 2a659addb89f4bb48707511e82068739
msgid "http://localhost:8888/?token=15914ca95f495075c0aa7d0e060f1a78b6d94f70ea373b00"
msgstr ""

#: ../../using/running.md:99 5799732f8f5b4c02b527259e3b8ff221
msgid ""
"Together, the URL to visit on the host machine to access the server in "
"this case is "
"<http://localhost:32769?token=15914ca95f495075c0aa7d0e060f1a78b6d94f70ea373b00>."
msgstr ""

# bf82931e197b40ad940d9969993120a2
#: ../../using/running.md:101 298fd8364aeb435fba5a6f178a4ea907
msgid ""
"The container runs in the background until stopped and/or removed by "
"additional Docker commands."
msgstr ""

#: ../../using/running.md:103 b8f702e1877a4466856703481e364e9e
msgid "```bash # stop the container docker stop notebook notebook"
msgstr ""

#: ../../using/running.md:108 9c1ca68ac80449509f6c2e610ef60bdc
msgid "# remove the container permanently docker rm notebook notebook ```"
msgstr ""

#: ../../using/running.md:113 fdee178dba194ee8ae2ea36fe4fc4f6e
msgid "## Using Binder"
msgstr ""

#: ../../using/running.md:115 fefef551b4a84ed4afe63b47dda77573
msgid ""
"[Binder](https://mybinder.org/) is a service that allows you to create "
"and share custom computing environments for projects in version control. "
"You can use any of the Jupyter Docker Stacks images as a basis for a "
"Binder-compatible Dockerfile. See the [docker-stacks "
"example](https://mybinder.readthedocs.io/en/latest/sample_repos.html#using-a"
"-docker-image-from-the-jupyter-docker-stacks-repository) and [Using a "
"Dockerfile](https://mybinder.readthedocs.io/en/latest/tutorials/dockerfile.html)"
" sections in the [Binder "
"documentation](https://mybinder.readthedocs.io/en/latest/index.html) for "
"instructions."
msgstr ""

#: ../../using/running.md:117 7e2a5734fd6e44ad8a0b5fda5101250c
msgid "## Using JupyterHub"
msgstr ""

#: ../../using/running.md:119 57cffddc0ca6483ea08c75f07c5a013d
msgid ""
"You can configure JupyterHub to launcher Docker containers from the "
"Jupyter Docker Stacks images. If you've been following the [Zero to "
"JupyterHub with Kubernetes](http://zero-to-"
"jupyterhub.readthedocs.io/en/latest/) guide, see the [Use an existing "
"Docker image](http://zero-to-jupyterhub.readthedocs.io/en/latest/user-"
"environment.html#use-an-existing-docker-image) section for details. If "
"you have a custom JupyterHub deployment, see the [Picking or building a "
"Docker image](https://github.com/jupyterhub/dockerspawner#picking-or-"
"building-a-docker-image) instructions for the "
"[dockerspawner](https://github.com/jupyterhub/dockerspawner) instead."
msgstr ""

#: ../../using/running.md:121 373a3710ee864936b86768d5c70b023f
msgid "## Using Other Tools and Services"
msgstr ""

#: ../../using/running.md:123 16253e1fdd8149e9ba232c88bb6cb0d4
msgid ""
"You can use the Jupyter Docker Stacks with any Docker-compatible "
"technology (e.g., [Docker Compose](https://docs.docker.com/compose/), "
"[docker-py](https://github.com/docker/docker-py), your favorite cloud "
"container service). See the documentation of the tool, library, or "
"service for details about how to reference, configure, and launch "
"containers from these images."
msgstr ""

#: ../../using/selecting.md:1 0ca8290cd8084d338e56918cd3f5aa85
msgid "# Selecting an Image"
msgstr ""

#: ../../using/selecting.md:3 e46716daa35143bd95b13b8bd248f8fa
msgid "[Core Stacks](#core-stacks)"
msgstr ""

#: ../../using/selecting.md:4 64e8dcee0e7a49b2bd233604e4c314e2
msgid "[Image Relationships](#image-relationships)"
msgstr ""

#: ../../using/selecting.md:5 0dfa371a902e490686520930fc557e8e
msgid "[Community Stacks](#community-stacks)"
msgstr ""

# af7e19bb10ec44348e8121be4129ce8a
#: ../../using/selecting.md:12 601734a8ae3248e7a4ba85ef84ca2ed0
msgid "This section provides details about the first."
msgstr ""

#: ../../using/selecting.md:14 de1ab1def3b8487ba9049460a9e59080
msgid "## Core Stacks"
msgstr ""

#: ../../using/selecting.md:16 aceef51085f6437eb4d5ad50bcd14dba
msgid ""
"The Jupyter team maintains a set of Docker image definitions in the "
"[https://github.com/jupyter/docker-stacks](https://github.com/jupyter"
"/docker-stacks) GitHub repository. The following sections describe these "
"images including their contents, relationships, and versioning strategy."
msgstr ""

#: ../../using/selecting.md:21 4df20532695a4b9aa7c04a37584cec9f
msgid "### jupyter/base-notebook"
msgstr ""

#: ../../using/selecting.md:23 c3c4359a62ed46ac8f2cf0b6d7c515a5
msgid ""
"[Source on GitHub](https://github.com/jupyter/docker-stacks/tree/master"
"/base-notebook) | [Dockerfile commit history](https://github.com/jupyter"
"/docker-stacks/commits/master/base-notebook/Dockerfile) | [Docker Hub "
"image tags](https://hub.docker.com/r/jupyter/base-notebook/tags/)"
msgstr ""

#: ../../using/selecting.md:27 1a609031c9dd4b8184b4469005e50e77
msgid ""
"`jupyter/base-notebook` is a small image supporting the [options common "
"across all core stacks](common.md). It is the basis for all other stacks."
msgstr ""

#: ../../using/selecting.md:30 83db321f38244ea2a9f6a0afc56780f7
msgid ""
"Minimally-functional Jupyter Notebook server (e.g., no LaTeX support for "
"saving notebooks as PDFs)"
msgstr ""

#: ../../using/selecting.md:31 2b8861ee31b04adc9475fd57d091e09f
msgid ""
"[Miniforge](https://github.com/conda-forge/miniforge) Python 3.x in "
"`/opt/conda` with two package managers - "
"[conda](https://github.com/conda/conda): \"cross-platform, language-"
"agnostic binary package manager\". - [mamba](https://github.com/mamba-"
"org/mamba): \"reimplementation of the conda package manager in C++\"."
msgstr ""

# c5732a5536554f91b8dd7e8946beaab8
#: ../../using/selecting.md:34 58bb04bc7f6d4fc2850140fb95f0d32e
msgid "No preinstalled scientific computing packages"
msgstr ""

#: ../../using/selecting.md:35 6ae2095fc07a424789440e8a906318bf
msgid ""
"Unprivileged user `jovyan` (`uid=1000`, configurable, see options) in "
"group `users` (`gid=100`) with ownership over the `/home/jovyan` and "
"`/opt/conda` paths"
msgstr ""

#: ../../using/selecting.md:37 a593cf98433149d9b6816c494e37211f
msgid ""
"`tini` as the container entrypoint and a `start-notebook.sh` script as "
"the default command"
msgstr ""

#: ../../using/selecting.md:38 2c4af325aa0141c697d2ec75f231e65b
msgid ""
"A `start-singleuser.sh` script useful for launching containers in "
"JupyterHub"
msgstr ""

#: ../../using/selecting.md:39 0668fbc473384e86bbf45ca41c9e22bd
msgid ""
"A `start.sh` script useful for running alternative commands in the "
"container (e.g. `ipython`, `jupyter kernelgateway`, `jupyter lab`)"
msgstr ""

# 075e6ffe0f5b4d508d555992f5dd6fe1
#: ../../using/selecting.md:41 d3401c806c1c4a1b899967a8b8de5973
msgid "Options for a self-signed HTTPS certificate and passwordless sudo"
msgstr ""

#: ../../using/selecting.md:43 065f5451c995437c8c77454a0948f02d
msgid "### jupyter/minimal-notebook"
msgstr ""

#: ../../using/selecting.md:45 53355b6bd3b14dc0a7f02084c2b2f779
msgid ""
"[Source on GitHub](https://github.com/jupyter/docker-stacks/tree/master"
"/minimal-notebook) | [Dockerfile commit "
"history](https://github.com/jupyter/docker-stacks/commits/master/minimal-"
"notebook/Dockerfile) | [Docker Hub image "
"tags](https://hub.docker.com/r/jupyter/minimal-notebook/tags/)"
msgstr ""

#: ../../using/selecting.md:49 c13fbfb54732494582e03a4ff0ac312c
msgid ""
"`jupyter/minimal-notebook` adds command line tools useful when working in"
" Jupyter applications."
msgstr ""

#: ../../using/selecting.md:51 08b9bf4bc15645359ca3d23f9f22e8c1
msgid "Everything in `jupyter/base-notebook`"
msgstr ""

#: ../../using/selecting.md:52 6d9b5454387a487d9909f8e7c146549e
msgid "[TeX Live](https://www.tug.org/texlive/) for notebook document conversion"
msgstr ""

#: ../../using/selecting.md:53 7344ef1575bf4c78b9343960533e56be
msgid ""
"[git](https://git-scm.com/), [vi](https://www.vim.org) (actually `vim-"
"tiny`), [nano](https://www.nano-editor.org/) (actually `nano-tiny`), "
"tzdata, and unzip"
msgstr ""

#: ../../using/selecting.md:57 b8b59df474fe4a6097f06f2ac399a1c8
msgid "### jupyter/r-notebook"
msgstr ""

#: ../../using/selecting.md:59 7bcbd278fd5842be971bd3c3c681a394
msgid ""
"[Source on GitHub](https://github.com/jupyter/docker-"
"stacks/tree/master/r-notebook) | [Dockerfile commit "
"history](https://github.com/jupyter/docker-"
"stacks/commits/master/r-notebook/Dockerfile) | [Docker Hub image "
"tags](https://hub.docker.com/r/jupyter/r-notebook/tags/)"
msgstr ""

#: ../../using/selecting.md:63 418498b20678484fbe86efef823c4428
msgid "`jupyter/r-notebook` includes popular packages from the R ecosystem."
msgstr ""

#: ../../using/selecting.md:65 ../../using/selecting.md:88
#: 1df2c2e7abd949a89288ea90bb7bbcba 2ef8cc63458d444a86bbe3c74cc0dd42
msgid "Everything in `jupyter/minimal-notebook` and its ancestor images"
msgstr ""

#: ../../using/selecting.md:66 3f224be986b5472881b8f88eec113b83
msgid "The [R](https://www.r-project.org/) interpreter and base environment"
msgstr ""

#: ../../using/selecting.md:67 ../../using/selecting.md:157
#: c82fedd7c2bf43b786d50220bb6de192 ee61a629552f418db2a1f156056538d8
msgid ""
"[IRKernel](https://irkernel.github.io/) to support R code in Jupyter "
"notebooks"
msgstr ""

#: ../../using/selecting.md:68 6336556666e942749d1299134842b34e
msgid ""
"[tidyverse](https://www.tidyverse.org/) packages from [conda-forge](https"
"://conda-forge.github.io/feedstocks)"
msgstr ""

#: ../../using/selecting.md:70 dee5d5169e4d483dbbf954a0d0deb278
msgid ""
"[devtools](https://cran.r-project.org/web/packages/devtools/index.html), "
"[shiny](https://shiny.rstudio.com/), "
"[rmarkdown](http://rmarkdown.rstudio.com/), "
"[forecast](https://cran.r-project.org/web/packages/forecast/forecast.pdf),"
" [rsqlite](https://cran.r-project.org/web/packages/RSQLite/index.html), "
"[nycflights13](https://cran.r-project.org/web/packages/nycflights13/index.html),"
" [caret](http://topepo.github.io/caret/index.html), "
"[tidymodels](https://www.tidymodels.org/), "
"[rcurl](https://cran.r-project.org/web/packages/RCurl/index.html), and "
"[randomforest](https://cran.r-project.org/web/packages/randomForest/randomForest.pdf)"
" packages from [conda-forge](https://conda-forge.github.io/feedstocks)"
msgstr ""

#: ../../using/selecting.md:80 a5e1e49e00e64e6381482f298450ed04
msgid "### jupyter/scipy-notebook"
msgstr ""

#: ../../using/selecting.md:82 caa00fe994184acab1bfc9c54246f2d9
msgid ""
"[Source on GitHub](https://github.com/jupyter/docker-stacks/tree/master"
"/scipy-notebook) | [Dockerfile commit history](https://github.com/jupyter"
"/docker-stacks/commits/master/scipy-notebook/Dockerfile) | [Docker Hub "
"image tags](https://hub.docker.com/r/jupyter/scipy-notebook/tags/)"
msgstr ""

#: ../../using/selecting.md:86 5b62099a9406407187867cb2bda115c1
msgid ""
"`jupyter/scipy-notebook` includes popular packages from the scientific "
"Python ecosystem."
msgstr ""

#: ../../using/selecting.md:89 73375816f5d34f13bd089e3bb4bf8c7e
msgid ""
"[dask](https://dask.org/), [pandas](https://pandas.pydata.org/), "
"[numexpr](https://github.com/pydata/numexpr), "
"[matplotlib](https://matplotlib.org/), [scipy](https://www.scipy.org/), "
"[seaborn](https://seaborn.pydata.org/), [scikit-learn](http://scikit-"
"learn.org/stable/), [scikit-image](http://scikit-image.org/), "
"[sympy](http://www.sympy.org/en/index.html), "
"[cython](http://cython.org/), "
"[patsy](https://patsy.readthedocs.io/en/latest/), "
"[statsmodel](http://www.statsmodels.org/stable/index.html), "
"[cloudpickle](https://github.com/cloudpipe/cloudpickle), "
"[dill](https://pypi.python.org/pypi/dill), "
"[numba](https://numba.pydata.org/), "
"[bokeh](https://bokeh.pydata.org/en/latest/), "
"[sqlalchemy](https://www.sqlalchemy.org/), [hdf5](http://www.h5py.org/), "
"[vincent](http://vincent.readthedocs.io/en/latest/), "
"[beautifulsoup](https://www.crummy.com/software/BeautifulSoup/), "
"[protobuf](https://developers.google.com/protocol-"
"buffers/docs/pythontutorial), [xlrd](http://www.python-excel.org/), "
"[bottleneck](https://bottleneck.readthedocs.io/en/latest/), and "
"[pytables](https://www.pytables.org/) packages"
msgstr ""

#: ../../using/selecting.md:104 3b759075cd214711bff887dcb7035b76
msgid ""
"[ipywidgets](https://ipywidgets.readthedocs.io/en/stable/) and "
"[ipympl](https://github.com/matplotlib/jupyter-matplotlib) for "
"interactive visualizations and plots in Python notebooks"
msgstr ""

#: ../../using/selecting.md:107 cc9d2e52058f4622bc792b336ee70280
msgid ""
"[Facets](https://github.com/PAIR-code/facets) for visualizing machine "
"learning datasets"
msgstr ""

#: ../../using/selecting.md:109 706caa90e887449e994702521bbbd233
msgid "### jupyter/tensorflow-notebook"
msgstr ""

#: ../../using/selecting.md:111 9277b28c233f4daaba83f1fe78db5fce
msgid ""
"[Source on GitHub](https://github.com/jupyter/docker-stacks/tree/master"
"/tensorflow-notebook) | [Dockerfile commit "
"history](https://github.com/jupyter/docker-stacks/commits/master"
"/tensorflow-notebook/Dockerfile) | [Docker Hub image "
"tags](https://hub.docker.com/r/jupyter/tensorflow-notebook/tags/)"
msgstr ""

#: ../../using/selecting.md:115 2ce5029c67a340ab95707f29d51783d2
msgid ""
"`jupyter/tensorflow-notebook` includes popular Python deep learning "
"libraries."
msgstr ""

#: ../../using/selecting.md:117 ../../using/selecting.md:145
#: 0be5cac808284b6babcf7deb41db2622 5e607dfbb7d24c1eab75c476cb34a047
msgid "Everything in `jupyter/scipy-notebook` and its ancestor images"
msgstr ""

#: ../../using/selecting.md:118 cad852f1786d4ebba9edcd9ec5d04d1a
msgid ""
"[tensorflow](https://www.tensorflow.org/) and [keras](https://keras.io/) "
"machine learning libraries"
msgstr ""

#: ../../using/selecting.md:121 8f4a493e1bcb4f57ae9d7bcd9cd8332f
msgid "### jupyter/datascience-notebook"
msgstr ""

#: ../../using/selecting.md:123 313a9d8950cd46bf9094fe53b2d09059
msgid ""
"[Source on GitHub](https://github.com/jupyter/docker-stacks/tree/master"
"/datascience-notebook) | [Dockerfile commit "
"history](https://github.com/jupyter/docker-stacks/commits/master"
"/datascience-notebook/Dockerfile) | [Docker Hub image "
"tags](https://hub.docker.com/r/jupyter/datascience-notebook/tags/)"
msgstr ""

#: ../../using/selecting.md:127 48699a71e51a4b858f77355b19bcb9b4
msgid ""
"`jupyter/datascience-notebook` includes libraries for data analysis from "
"the Julia, Python, and R communities."
msgstr ""

#: ../../using/selecting.md:130 fca72e04a31f431a983f81fccb0c3c53
msgid ""
"Everything in the `jupyter/scipy-notebook` and `jupyter/r-notebook` "
"images, and their ancestor images"
msgstr ""

#: ../../using/selecting.md:132 01ab4cdbe82944b5b94a84cf2e30f643
msgid "The [Julia](https://julialang.org/) compiler and base environment"
msgstr ""

#: ../../using/selecting.md:133 d3db38d68ce24e979149fa995696894f
msgid ""
"[IJulia](https://github.com/JuliaLang/IJulia.jl) to support Julia code in"
" Jupyter notebooks"
msgstr ""

#: ../../using/selecting.md:134 d15441289e174145b602ff1b74566823
msgid ""
"[HDF5](https://github.com/JuliaIO/HDF5.jl), "
"[Gadfly](http://gadflyjl.org/stable/), and "
"[RDatasets](https://github.com/johnmyleswhite/RDatasets.jl) packages"
msgstr ""

#: ../../using/selecting.md:137 86b79f1d240647729f9f1b7bdb95e57e
msgid "### jupyter/pyspark-notebook"
msgstr ""

#: ../../using/selecting.md:139 805ef812dd2140c8aea6335471a767d6
msgid ""
"[Source on GitHub](https://github.com/jupyter/docker-stacks/tree/master"
"/pyspark-notebook) | [Dockerfile commit "
"history](https://github.com/jupyter/docker-stacks/commits/master/pyspark-"
"notebook/Dockerfile) | [Docker Hub image "
"tags](https://hub.docker.com/r/jupyter/pyspark-notebook/tags/)"
msgstr ""

#: ../../using/selecting.md:143 b2d0f52d785a4c8d8dabe2aa25363cbb
msgid "`jupyter/pyspark-notebook` includes Python support for Apache Spark."
msgstr ""

#: ../../using/selecting.md:146 f8993daf845e40d2a216a9f257f848b5
msgid "[Apache Spark](https://spark.apache.org/) with Hadoop binaries"
msgstr ""

#: ../../using/selecting.md:148 9d894ea24ff84b969d27cb61e781070a
msgid "### jupyter/all-spark-notebook"
msgstr ""

#: ../../using/selecting.md:150 640d3e3850be41dc9f10a525b1b6ec78
msgid ""
"[Source on GitHub](https://github.com/jupyter/docker-stacks/tree/master"
"/all-spark-notebook) | [Dockerfile commit "
"history](https://github.com/jupyter/docker-stacks/commits/master/all-"
"spark-notebook/Dockerfile) | [Docker Hub image "
"tags](https://hub.docker.com/r/jupyter/all-spark-notebook/tags/)"
msgstr ""

#: ../../using/selecting.md:154 ae09e3003d714b5f816a25582ca86cdc
msgid ""
"`jupyter/all-spark-notebook` includes Python, R, and Scala support for "
"Apache Spark."
msgstr ""

#: ../../using/selecting.md:156 7f567ece149247f2b03f078e6afb296f
msgid "Everything in `jupyter/pyspark-notebook` and its ancestor images"
msgstr ""

#: ../../using/selecting.md:158 13ac87a1372e439aab1febfdfe58815f
msgid ""
"[Apache Toree](https://toree.apache.org/) and [spylon-"
"kernel](https://github.com/maxpoint/spylon-kernel) to support Scala code "
"in Jupyter notebooks"
msgstr ""

#: ../../using/selecting.md:161 5bc0f2615f3b447b9de06f040da92120
msgid ""
"[ggplot2](https://ggplot2.tidyverse.org), "
"[sparklyr](http://spark.rstudio.com/), and "
"[rcurl](https://cran.r-project.org/web/packages/RCurl/index.html) "
"packages"
msgstr ""

#: ../../using/selecting.md:164 e8c6b9b26eff4247ba0a9432da74cce9
msgid "### Image Relationships"
msgstr ""

#: ../../using/selecting.md:166 7371383218a84e47aba4421681613493
msgid ""
"The following diagram depicts the build dependency tree of the core "
"images. (i.e., the `FROM` statements in their Dockerfiles). Any given "
"image inherits the complete content of all ancestor images pointing to "
"it."
msgstr ""

#: ../../using/selecting.md:170 e3929f25c78c497fa42c05bed8747418
msgid ""
"[![Image inheritance "
"diagram](../images/inherit.svg)](http://interactive.blockdiag.com/?compression=deflate&src"
"=eJyFzTEPgjAQhuHdX9Gws5sQjGzujsaYKxzmQrlr2msMGv-"
"71K0srO_3XGud9NNA8DSfgzESCFlBSdi0xkvQAKTNugw4QnL6GIU10hvX-"
"Zh7Z24OLLq2SjaxpvP10lX35vCf6pOxELFmUbQiUz4oQhYzMc3gCrRt2cWe_FKosmSjyFHC6OS1AwdQWCtyj7sfh523_BI9hKlQ25YdOFdv5fcH0kiEMA)"
msgstr ""

#: ../../using/selecting.md:173 15907d8133c64018a49caadd4decdd9c
msgid "### Builds"
msgstr ""

#: ../../using/selecting.md:175 80f4f0e583714e88ac162c72950a6b2c
msgid ""
"Pull requests to the `jupyter/docker-stacks` repository trigger builds of"
" all images on GitHub Actions. These images are for testing purposes only"
" and are not saved for use. When pull requests merge to master, all "
"images rebuild on Docker Hub and become available to `docker pull` from "
"Docker Hub."
msgstr ""

#: ../../using/selecting.md:180 500846fc970d497ca52e4b31895928d0
msgid "### Versioning"
msgstr ""

#: ../../using/selecting.md:182 a3a93dd413404be487e13538dfb117de
msgid ""
"The `latest` tag in each Docker Hub repository tracks the master branch "
"`HEAD` reference on GitHub. `latest` is a moving target, by definition, "
"and will have backward-incompatible changes regularly."
msgstr ""

#: ../../using/selecting.md:185 60e3931d94a440ac9fae3e8aa0f71d5a
msgid ""
"Every image on Docker Hub also receives a 12-character tag which "
"corresponds with the git commit SHA that triggered the image build. You "
"can inspect the state of the `jupyter/docker-stacks` repository for that "
"commit to review the definition of the image (e.g., images with tag "
"7c45ec67c8e7 were built from [https://github.com/jupyter/docker-"
"stacks/tree/7c45ec67c8e7](https://github.com/jupyter/docker-"
"stacks/tree/7c45ec67c8e7))."
msgstr ""

#: ../../using/selecting.md:191 5d7ee43d6b1f4169ba80f088f8d2098e
msgid ""
"You must refer to git-SHA image tags when stability and reproducibility "
"are important in your work. (e.g. `FROM jupyter/scipy-"
"notebook:7c45ec67c8e7`, `docker run -it --rm jupyter/scipy-"
"notebook:7c45ec67c8e7`). You should only use `latest` when a one-off "
"container instance is acceptable (e.g., you want to briefly try a new "
"library in a notebook)."
msgstr ""

#: ../../using/selecting.md:197 fe8ab996424e40c2929661e4674b2909
msgid "## Community Stacks"
msgstr ""

# a448d28293544f72b0e5de024b0a1ef5
#: ../../using/selecting.md:199 c022d89e9ada4b3c944740cfaa9011e7
msgid ""
"The core stacks are just a tiny sample of what's possible when combining "
"Jupyter with other technologies. We encourage members of the Jupyter "
"community to create their own stacks based on the core images and link "
"them below."
msgstr ""

#: ../../using/selecting.md:203 2b9a5eaf73cb490bb2eb1217f4043371
msgid ""
"[csharp-notebook is a community Jupyter Docker Stack image. Try C# in "
"Jupyter Notebooks](https://github.com/tlinnet/csharp-notebook). The image"
" includes more than 200 Jupyter Notebooks with example C# code and can "
"readily be tried online via mybinder.org. Click here to launch "
"[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/tlinnet"
"/csharp-notebook/master)."
msgstr ""

#: ../../using/selecting.md:208 64eb44c5f6bf46a99f471f0c348c27ee
msgid ""
"[education-notebook is a community Jupyter Docker Stack "
"image](https://github.com/umsi-mads/education-notebook). The image "
"includes nbgrader and RISE on top of the datascience-notebook image. "
"Click here to launch it on "
"[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh"
"/umsi-mads/education-notebook/master)."
msgstr ""

#: ../../using/selecting.md:213 1d4cc8b0a45643638c0df546d0f7c74c
msgid "**crosscompass/ihaskell-notebook**"
msgstr ""

#: ../../using/selecting.md:215 a3fff82c9f774be59dbbb8ed9fa1bb1f
msgid ""
"[Source on GitHub](https://github.com/jamesdbrock/ihaskell-notebook) | "
"[Dockerfile commit history](https://github.com/jamesdbrock/ihaskell-"
"notebook/commits/master/Dockerfile) | [Docker Hub image "
"tags](https://hub.docker.com/r/crosscompass/ihaskell-notebook/tags)"
msgstr ""

#: ../../using/selecting.md:219 e79d778728d44d55a7bc4ff66035ae26
msgid ""
"`crosscompass/ihaskell-notebook` is based on "
"[IHaskell](https://github.com/gibiansky/IHaskell). Includes popular "
"packages and example notebooks."
msgstr ""

#: ../../using/selecting.md:222 8022c77533424877a44f081a3db21669
msgid ""
"Try it on "
"[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/jamesdbrock"
"/learn-you-a-haskell-"
"notebook/master?urlpath=lab/tree/ihaskell_examples/ihaskell/IHaskell.ipynb)"
msgstr ""

#: ../../using/selecting.md:225 2cf4eabfe7354bd5a376beae4af329c2
msgid ""
"[java-notebook is a community Jupyter Docker Stack "
"image](https://github.com/jbindinga/java-notebook). The image includes "
"[IJava](https://github.com/SpencerPark/IJava) kernel on top of the "
"minimal-notebook image. Click here to launch it on "
"[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/jbindinga"
"/java-notebook/master)."
msgstr ""

#: ../../using/selecting.md:230 86634c3348af4fc8becdfba90c6472bd
msgid ""
"[sage-notebook](https://github.com/sharpTrick/sage-notebook) is a "
"community Jupyter Docker Stack image with the "
"[sagemath](https://sagemath.org) kernel on top of the minimal-notebook "
"image. Click here to launch it on "
"[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/sharpTrick"
"/sage-notebook/master)."
msgstr ""

#: ../../using/selecting.md:235 72dc38f15d0145bfb63c702c86942122
msgid ""
"[GPU-Jupyter](https://github.com/iot-salzburg/gpu-jupyter/): Leverage "
"Jupyter Notebooks with the power of your NVIDIA GPU and perform GPU "
"calculations using Tensorflow and Pytorch in collaborative notebooks. "
"This is done by generating a Dockerfile, that consists of the "
"**nvidia/cuda** base image, the well-maintained **docker-stacks** that is"
" integrated as submodule and GPU-able libraries like **Tensorflow**, "
"**Keras** and **PyTorch** on top of it."
msgstr ""

#: ../../using/selecting.md:241 74500d4a83144c0cb296334b424028fe
msgid ""
"[cgspatial-notebook](https://github.com/SCiO-systems/cgspatial-notebook) "
"is a community Jupyter Docker Stack image. The image includes major "
"geospatial Python & R libraries on top of the datascience-notebook image."
" Try it on "
"binder:[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh"
"/SCiO-systems/cgspatial-notebook/master)"
msgstr ""

#: ../../using/selecting.md:246 0644146b2ef34224bbcf3703977e36bb
msgid ""
"[kotlin-notebook](https://github.com/knonm/kotlin-notebook) is a "
"community Jupyter Docker Stack image. The image includes [Kotlin kernel "
"for Jupyter/IPython](https://github.com/Kotlin/kotlin-jupyter) on top of "
"the `base-notebook` image. Try it on Binder: "
"[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/knonm"
"/kotlin-notebook/main)"
msgstr ""

#: ../../using/selecting.md:251 1067017d9c4441239fcb8a66250454b7
msgid ""
"See the [contributing guide](../contributing/stacks.md) for information "
"about how to create your own Jupyter Docker Stack."
msgstr ""

#: ../../using/specifics.md:1 aa2f0197f73947d994023bb55718af3a
msgid "# Image Specifics"
msgstr ""

# 06b0d21a881140a29e17e5b9fa5598ab
#: ../../using/specifics.md:3 ae0dd85f5998468caaa87d4c3f83152c
msgid "This page provides details about features specific to one or more images."
msgstr ""

#: ../../using/specifics.md:5 09889104f4ac472a85abaaf67a718e3d
msgid "## Apache Spark™"
msgstr ""

#: ../../using/specifics.md:7 fede7e51e4ae4583ad6fefe4d3e58f90
msgid "### Specific Docker Image Options"
msgstr ""

#: ../../using/specifics.md:9 a2a18ed4a328439688bcc0fa04df3323
msgid ""
"`-p 4040:4040` - The `jupyter/pyspark-notebook` and `jupyter/all-spark-"
"notebook` images open [SparkUI (Spark Monitoring and Instrumentation "
"UI)](http://spark.apache.org/docs/latest/monitoring.html) at default port"
" `4040`, this option map `4040` port inside docker container to `4040` "
"port on host machine . Note every new spark context that is created is "
"put onto an incrementing port (ie. 4040, 4041, 4042, etc.), and it might "
"be necessary to open multiple ports. For example: `docker run -d -p "
"8888:8888 -p 4040:4040 -p 4041:4041 jupyter/pyspark-notebook`."
msgstr ""

#: ../../using/specifics.md:11 9fd2ba99f8504b878b205a11a6a4d37b
msgid "### Build an Image with a Different Version of Spark"
msgstr ""

#: ../../using/specifics.md:13 e9db0862939b4f29a9e4c2a66c5225a6
msgid ""
"You can build a `pyspark-notebook` image (and also the downstream `all-"
"spark-notebook` image) with a different version of Spark by overriding "
"the default value of the following arguments at build time."
msgstr ""

#: ../../using/specifics.md:15 b54040d07f0d41e8a1cddfe05f493f2a
msgid ""
"Spark distribution is defined by the combination of the Spark and the "
"Hadoop version and verified by the package checksum, see [Download Apache"
" Spark](https://spark.apache.org/downloads.html) and the [archive "
"repo](https://archive.apache.org/dist/spark/) for more information. * "
"`spark_version`: The Spark version to install (`3.0.0`). * "
"`hadoop_version`: The Hadoop version (`3.2`). * `spark_checksum`: The "
"package checksum (`BFE4540...`)."
msgstr ""

#: ../../using/specifics.md:19 422cb72f95d34136a017813089349cdc
msgid ""
"Spark can run with different OpenJDK versions. * `openjdk_version`: The "
"version of (JRE headless) the OpenJDK distribution (`11`), see [Ubuntu "
"packages](https://packages.ubuntu.com/search?keywords=openjdk)."
msgstr ""

#: ../../using/specifics.md:22 9c086be6b4a04a1c8fa74cbc37e8b941
msgid ""
"For example here is how to build a `pyspark-notebook` image with Spark "
"`2.4.6`, Hadoop `2.7` and OpenJDK `8`."
msgstr ""

#: ../../using/specifics.md:24 ab0be3182adf4dd6918f198c5c7f38c6
msgid ""
"```bash # From the root of the project # Build the image with different "
"arguments docker build --rm --force-rm \\"
msgstr ""

#: ../../using/specifics.md:28 21ddcf737955403bbbb327848b378a9f
msgid ""
"-t jupyter/pyspark-notebook:spark-2.4.7 ./pyspark-notebook \\ --build-arg"
" spark_version=2.4.7 \\ --build-arg hadoop_version=2.7 \\ --build-arg "
"spark_checksum=0F5455672045F6110B030CE343C049855B7BA86C0ECB5E39A075FF9D093C7F648DA55DED12E72FFE65D84C32DCD5418A6D764F2D6295A3F894A4286CC80EF478"
" \\ --build-arg openjdk_version=8"
msgstr ""

#: ../../using/specifics.md:34 a5a69ae131dc4f139b0ea0a0706fe5e5
msgid ""
"# Check the newly built image docker run -it --rm jupyter/pyspark-"
"notebook:spark-2.4.7 pyspark --version"
msgstr ""

#: ../../using/specifics.md:37 f5d85b8a064f4bf8b212892be613d001
msgid ""
"# Welcome to #       ____              __ #      / __/__  ___ _____/ /__ "
"#     _\\ \\/ _ \\/ _ `/ __/  '_/ #    /___/ .__/\\_,_/_/ /_/\\_\\   "
"version 2.4.7 #       /_/ # # Using Scala version 2.11.12, OpenJDK 64-Bit"
" Server VM, 1.8.0_275 ```"
msgstr ""

#: ../../using/specifics.md:47 ef6bb448972a45a7988027b8ba887aea
msgid "### Usage Examples"
msgstr ""

#: ../../using/specifics.md:49 5a8ef68fd48040388cf5f146b0297b1d
msgid ""
"The `jupyter/pyspark-notebook` and `jupyter/all-spark-notebook` images "
"support the use of [Apache Spark](https://spark.apache.org/) in Python, "
"R, and Scala notebooks. The following sections provide some examples of "
"how to get started using them."
msgstr ""

#: ../../using/specifics.md:51 2c5e220da6e848e9bd5ec3ef2efe66ed
msgid "#### Using Spark Local Mode"
msgstr ""

#: ../../using/specifics.md:53 06f5d3625c964294bb8480dad44a59da
msgid ""
"Spark **local mode** is useful for experimentation on small data when you"
" do not have a Spark cluster available."
msgstr ""

#: ../../using/specifics.md:55 5c3a47f56ce84a3e9a04ae15c1579e76
msgid "##### Local Mode in Python"
msgstr ""

#: ../../using/specifics.md:57 8da193838c2e4414a4bd652b591ad6a5
msgid "In a Python notebook."
msgstr ""

#: ../../using/specifics.md:59 ../../using/specifics.md:148
#: 0ce5862ccaba4e60a34b9e444e76a350 782a387cf7e74056a0498d4bf4f3aa27
msgid "```python from pyspark.sql import SparkSession"
msgstr ""

#: ../../using/specifics.md:62 8cb16bf4e7b84a33ba9207d2524cf239
msgid ""
"# Spark session & context spark = "
"SparkSession.builder.master('local').getOrCreate() sc = "
"spark.sparkContext"
msgstr ""

#: ../../using/specifics.md:66 ../../using/specifics.md:155
#: 6490ad78c741425cb0c2d8fe18a5afde b7f168e9127b4f0c97399218f6bb183b
msgid ""
"# Sum of the first 100 whole numbers rdd = sc.parallelize(range(100 + 1))"
" rdd.sum() # 5050 ```"
msgstr ""

#: ../../using/specifics.md:72 de8318b65f7d4e4091102b48a1355d5f
msgid "##### Local Mode in R"
msgstr ""

#: ../../using/specifics.md:74 ../../using/specifics.md:163
#: 82c95c4dbf384f5d82a2c8d81360138e cb69db6ab66c4a47bf6d1196f3259524
msgid "In a R notebook with [SparkR][sparkr]."
msgstr ""

#: ../../using/specifics.md:76 ../../using/specifics.md:165
#: 3fd51a947abe46278ffc64c6c8f7c34b aa1d58ec56e94c808d4af0204c2cb80e
msgid "```R library(SparkR)"
msgstr ""

#: ../../using/specifics.md:79 ea4b69c98fff479eaec7c2f500450548
msgid "# Spark session & context sc <- sparkR.session(\"local\")"
msgstr ""

#: ../../using/specifics.md:82 ../../using/specifics.md:171
#: 4cfed2f65ae74133bebca99070454774 ec26838c91b849fca84bf4b8e7355e6f
msgid ""
"# Sum of the first 100 whole numbers sdf <- createDataFrame(list(1:100)) "
"dapplyCollect(sdf,"
msgstr ""

#: ../../using/specifics.md:85 ../../using/specifics.md:174
#: 343635f7ef4241e9a4e32297a9eda9d7 3feced6ca5964145bb45bd12b5bec140
msgid "function(x) { x <- sum(x)}"
msgstr ""

#: ../../using/specifics.md:87 ../../using/specifics.md:176
#: 9181a620ef6740059b384554b278b90f b0c6da550aee4806bc3dfa43e4b9d2ce
msgid ")"
msgstr ""

#: ../../using/specifics.md:88 ../../using/specifics.md:107
#: ../../using/specifics.md:177 ../../using/specifics.md:195
#: 13b9bad6f41a43e78460fcd0cbc6da7d 48e2789763e14732b840eb9c2e6dee8b
#: 8c13e607a5004e5b87fc04b831fd67dd 9e014779562e43b0bc79b80e80f62442
msgid "# 5050 ```"
msgstr ""

#: ../../using/specifics.md:91 ../../using/specifics.md:180
#: 8ee77785d2954e9e85a7c58fbc8ad11a b68270757dd04eb9bf1ec60065bb02cc
msgid "In a R notebook with [sparklyr][sparklyr]."
msgstr ""

#: ../../using/specifics.md:93 ../../using/specifics.md:182
#: 02f966caa700408cb99a5dd90bb7dbac 83de6d0a8bd840e091a3188ee3fb48f6
msgid "```R library(sparklyr)"
msgstr ""

#: ../../using/specifics.md:96 e41479b22afd4d089d6bf1e767b032b2
msgid ""
"# Spark configuration conf <- spark_config() # Set the catalog "
"implementation in-memory conf$spark.sql.catalogImplementation <- \"in-"
"memory\""
msgstr ""

#: ../../using/specifics.md:101 ce712302635b436bba7f4d4695a7f306
msgid ""
"# Spark session & context sc <- spark_connect(master = \"local\", config "
"= conf)"
msgstr ""

#: ../../using/specifics.md:104 ../../using/specifics.md:192
#: 93b8d46ba699424c9b0e27024e83c9d1 fbf7ca45b2e24716a51ba4c2ed59cd07
msgid "# Sum of the first 100 whole numbers sdf_len(sc, 100, repartition = 1) %>%"
msgstr ""

#: ../../using/specifics.md:106 ../../using/specifics.md:194
#: 08d75cf458244967b52d1501a96a6073 1805cba48f434cff9d1add98237e0e1e
msgid "spark_apply(function(e) sum(e))"
msgstr ""

#: ../../using/specifics.md:110 aeb7422b4fb446669cc0fc5d25b58c96
msgid "##### Local Mode in Scala"
msgstr ""

#: ../../using/specifics.md:112 ../../using/specifics.md:200
#: 284527f0618c4a3da7bce3cb879ccf62 6e8027d609974225868d416deee5bed1
#, python-format
msgid ""
"Spylon kernel instantiates a `SparkContext` for you in variable `sc` "
"after you configure Spark options in a `%%init_spark` magic cell."
msgstr ""

#: ../../using/specifics.md:115 b1f5eff779d6438095a23c1242a11d81
#, python-format
msgid ""
"```python %%init_spark # Configure Spark to use a local master "
"launcher.master = \"local\" ```"
msgstr ""

#: ../../using/specifics.md:121 ../../using/specifics.md:209
#: 256733a26415448797bd15d43080cbbb f67f8bedbd594c5296ee24f6b54be5c9
msgid ""
"```scala // Sum of the first 100 whole numbers val rdd = sc.parallelize(0"
" to 100) rdd.sum() // 5050 ```"
msgstr ""

#: ../../using/specifics.md:128 cdcb56ee71f244c9888bd72465268bea
msgid "#### Connecting to a Spark Cluster in Standalone Mode"
msgstr ""

#: ../../using/specifics.md:130 1d17fb9f67414a81b6b0cf85a3caf7a3
msgid ""
"Connection to Spark Cluster on **[Standalone "
"Mode](https://spark.apache.org/docs/latest/spark-standalone.html)** "
"requires the following set of steps:"
msgstr ""

# 2c728588b6df4753a0c08f969364a79a
#: ../../using/specifics.md:132 2fb1f3c5de7343bdad5f4e17fb8474e0
msgid ""
"Verify that the docker image (check the Dockerfile) and the Spark Cluster"
" which is being deployed, run the same version of Spark."
msgstr ""

#: ../../using/specifics.md:134 4532d545ffd24d9c9c387944c9bc51ef
msgid ""
"[Deploy Spark in Standalone Mode](http://spark.apache.org/docs/latest"
"/spark-standalone.html)."
msgstr ""

#: ../../using/specifics.md:135 d63fe57679274d23a5fb96a2fd6ffbcf
msgid ""
"Run the Docker container with `--net=host` in a location that is network "
"addressable by all of your Spark workers. (This is a [Spark networking "
"requirement](http://spark.apache.org/docs/latest/cluster-"
"overview.html#components).) * NOTE: When using `--net=host`, you must "
"also use the flags `--pid=host -e TINI_SUBREAPER=true`. See "
"<https://github.com/jupyter/docker-stacks/issues/64> for details."
msgstr ""

#: ../../using/specifics.md:141 901a8ae2ce25484a86fd09fd01a9cb63
msgid ""
"**Note**: In the following examples we are using the Spark master URL "
"`spark://master:7077` that shall be replaced by the URL of the Spark "
"master."
msgstr ""

#: ../../using/specifics.md:143 7ee0e4f7e2cc49d997ab2b452f74daee
msgid "##### Standalone Mode in Python"
msgstr ""

#: ../../using/specifics.md:145 a8f9ea9f235245b790aa7dde017876fc
msgid ""
"The **same Python version** need to be used on the notebook (where the "
"driver is located) and on the Spark workers. The python version used at "
"driver and worker side can be adjusted by setting the environment "
"variables `PYSPARK_PYTHON` and / or `PYSPARK_DRIVER_PYTHON`, see [Spark "
"Configuration][spark-conf] for more information."
msgstr ""

#: ../../using/specifics.md:151 5b763df9ccda4ce3859add7ffc76bd85
msgid ""
"# Spark session & context spark = "
"SparkSession.builder.master('spark://master:7077').getOrCreate() sc = "
"spark.sparkContext"
msgstr ""

#: ../../using/specifics.md:161 da512eb81ecf42bf850796539001f21a
msgid "##### Standalone Mode in R"
msgstr ""

#: ../../using/specifics.md:168 2148d137c595449ebdf2a34354d86600
msgid "# Spark session & context sc <- sparkR.session(\"spark://master:7077\")"
msgstr ""

#: ../../using/specifics.md:185 517e7d4c07214cbf80ce032c97425898
msgid ""
"# Spark session & context # Spark configuration conf <- spark_config() # "
"Set the catalog implementation in-memory "
"conf$spark.sql.catalogImplementation <- \"in-memory\" sc <- "
"spark_connect(master = \"spark://master:7077\", config = conf)"
msgstr ""

#: ../../using/specifics.md:198 971277ed09d84df4ae6b6d85107f46bd
msgid "##### Standalone Mode in Scala"
msgstr ""

#: ../../using/specifics.md:203 10e09309687b43c28a2bb4b8099156fd
#, python-format
msgid ""
"```python %%init_spark # Configure Spark to use a local master "
"launcher.master = \"spark://master:7077\" ```"
msgstr ""

#: ../../using/specifics.md:216 10c7d5b1b6ec4b899f0ae10f4e677ae3
msgid "## Tensorflow"
msgstr ""

#: ../../using/specifics.md:218 390ed3d4c7b949bfbe7a6a5fcffde2c5
msgid ""
"The `jupyter/tensorflow-notebook` image supports the use of "
"[Tensorflow](https://www.tensorflow.org/) in single machine or "
"distributed mode."
msgstr ""

#: ../../using/specifics.md:221 ee076325ec4c45bbae6b565982542322
msgid "### Single Machine Mode"
msgstr ""

#: ../../using/specifics.md:223 ../../using/specifics.md:237
#: a0f33822f7ed4e83971ed475ceb176e0 ea907617576b492a9948705d25af423f
msgid "```python import tensorflow as tf"
msgstr ""

#: ../../using/specifics.md:226 431c9db44b864e28bc7219a45a201146
msgid "hello = tf.Variable('Hello World!')"
msgstr ""

#: ../../using/specifics.md:228 9cc06abee87446c58cecffce844d36b1
msgid "sess = tf.Session() init = tf.global_variables_initializer()"
msgstr ""

#: ../../using/specifics.md:231 ../../using/specifics.md:246
#: a7883f1fb20245efbd3360194a97d377 ddb94d9936ab4b09ad29901e5763c492
msgid "sess.run(init) sess.run(hello) ```"
msgstr ""

#: ../../using/specifics.md:235 efc087cc648c40118b999092d7c359dc
msgid "### Distributed Mode"
msgstr ""

#: ../../using/specifics.md:240 1a491ac3928e4568b72c25be3dcf9742
msgid "hello = tf.Variable('Hello Distributed World!')"
msgstr ""

#: ../../using/specifics.md:242 79344ab325be497abf21ed9fc54a968c
msgid ""
"server = tf.train.Server.create_local_server() sess = "
"tf.Session(server.target) init = tf.global_variables_initializer()"
msgstr ""

#: ../../using/specifics.md:250 9adc1d6bb2c144258004c3d6e11c2d96
msgid ""
"[sparkr]: https://spark.apache.org/docs/latest/sparkr.html [sparklyr]: "
"https://spark.rstudio.com/ [spark-conf]: "
"https://spark.apache.org/docs/latest/configuration.html"
msgstr ""

# 5e06096348924f51881d05f984e91381
#~ msgid "This list only has 2 examples. You can be the next!"
#~ msgstr ""

# 7ed4a7919dfd446c817c64a7e420e95e
#~ msgid ""
#~ "To use a requirements.txt file, first"
#~ " create your requirements.txt file with "
#~ "the listing of packages desired.  Next,"
#~ " create a new Dockerfile like the "
#~ "one shown below."
#~ msgstr ""

# 56f2354437c74650a70bd154647eed26
#~ msgid ""
#~ "Here is a quick example NGINX "
#~ "configuration to get started.  You'll "
#~ "need a server, a .crt and .key "
#~ "file for your server, and docker &"
#~ " docker-compose installed.  Then just "
#~ "download the files at that gist "
#~ "and run docker-compose up -d to"
#~ " test it out.  Customize the "
#~ "nginx.conf file to set the desired "
#~ "paths and add other services."
#~ msgstr ""

#~ msgid ""
#~ "You must refer to git-SHA image"
#~ " tags when stability and reproducibility"
#~ " are important in your work. (e.g."
#~ " FROM jupyter/scipy-notebook:7c45ec67c8e7, docker"
#~ " run -it --rm jupyter/scipy-"
#~ "notebook:7c45ec67c8e7). You should only use"
#~ " latest when a one-off container "
#~ "instance is acceptable (e.g., you want"
#~ " to briefly try a new library "
#~ "in a notebook)."
#~ msgstr ""

# 577f93f6511a4b17afcef782def7f802
#~ msgid "ipywidgets for interactive visualizations in Python notebooks"
#~ msgstr ""

#~ msgid ""
#~ "You must refer to git-SHA image"
#~ " tags when stability and reproducibility"
#~ " are important in your work. (e.g."
#~ " FROM jupyter/scipy-notebook:7c45ec67c8e7, docker"
#~ " run  -it --rm jupyter/scipy-"
#~ "notebook:7c45ec67c8e7). You should only use"
#~ " latest when a one-off container "
#~ "instance is acceptable (e.g., you want"
#~ " to briefly try a new library "
#~ "in a notebook)."
#~ msgstr ""

# 909f17eb57bc4e4e8df8216423d9c008
#~ msgid ""
#~ "You should only enable sudo if you"
#~ " trust the user and/or if the "
#~ "container is running on an isolated "
#~ "host."
#~ msgstr ""

# 7c56c3891bd94336b21fc82d5aeab6ae
#~ msgid "Common Features"
#~ msgstr ""

# bf4e4ace24d144538edc1d9a2605cfef
#~ msgid ""
#~ "A container launched from any Jupyter"
#~ " Docker Stacks image runs a Jupyter"
#~ " Notebook server by default. The "
#~ "container does so by executing a "
#~ "start-notebook.sh script. This script "
#~ "configures the internal container environment"
#~ " and then runs jupyter notebook, "
#~ "passing it any command line arguments"
#~ " received."
#~ msgstr ""

# 056d2f8a9a4343668131dfb9de71838a
#~ msgid "Notebook Options"
#~ msgstr ""

# d1c32336e1f545d496f7a411fb18cb4e
#~ msgid ""
#~ "You can pass Jupyter command line "
#~ "options to the start-notebook.sh script"
#~ " when launching the container. For "
#~ "example, to secure the Notebook server"
#~ " with a custom password hashed using"
#~ " IPython.lib.passwd() instead of the "
#~ "default token, you can run the "
#~ "following:"
#~ msgstr ""

# 58ad38b4300449da805bc67e73be5fd0
#~ msgid "Docker Options"
#~ msgstr ""

# 0118197966504e3ab1c03a0c49e68c97
#~ msgid ""
#~ "You may instruct the start-notebook.sh"
#~ " script to customize the container "
#~ "environment before launching the notebook "
#~ "server. You do so by passing "
#~ "arguments to the docker run command."
#~ msgstr ""

# 391efc925af248fa9bfa2220bdf0730b
#~ msgid ""
#~ "-e NB_USER=jovyan - Instructs the "
#~ "startup script to change the default "
#~ "container username from jovyan to the"
#~ " provided value. Causes the script to"
#~ " rename the jovyan user home folder."
#~ " For this option to take effect, "
#~ "you must run the container with "
#~ "--user root and set the working "
#~ "directory -w /home/$NB_USER. This feature "
#~ "is useful when mounting host volumes "
#~ "with specific home folder."
#~ msgstr ""

# 97929e34ea254dd289e235276b72068f
#~ msgid ""
#~ "-e NB_UID=1000 - Instructs the startup"
#~ " script to switch the numeric user"
#~ " ID of $NB_USER to the given "
#~ "value. This feature is useful when "
#~ "mounting host volumes with specific "
#~ "owner permissions. For this option to"
#~ " take effect, you must run the "
#~ "container with --user root. (The startup"
#~ " script will su $NB_USER after "
#~ "adjusting the user ID.) You might "
#~ "consider using modern Docker options "
#~ "--user and --group-add instead. See "
#~ "the last bullet below for details."
#~ msgstr ""

# 71cac0c045d342008ca80ce23ef32431
#~ msgid ""
#~ "-e NB_GID=100 - Instructs the startup"
#~ " script to change the primary group"
#~ " of$NB_USER to $NB_GID (the new group"
#~ " is added with a name of "
#~ "$NB_GROUP if it is defined, otherwise"
#~ " the group is named $NB_USER).  This"
#~ " feature is useful when mounting host"
#~ " volumes with specific group permissions."
#~ " For this option to take effect, "
#~ "you must run the container with "
#~ "--user root. (The startup script will"
#~ " su $NB_USER after adjusting the "
#~ "group ID.) You might consider using "
#~ "modern Docker options --user and "
#~ "--group-add instead. See the last "
#~ "bullet below for details.  The user "
#~ "is added to supplemental group users "
#~ "(gid 100) in order to allow write"
#~ " access to the home directory and "
#~ "/opt/conda.  If you override the "
#~ "user/group logic, ensure the user stays"
#~ " in group users if you want "
#~ "them to be able to modify files"
#~ " in the image."
#~ msgstr ""

# 5ca13bdafc214f8b997ca2752592f1be
#~ msgid ""
#~ "-e NB_GROUP=<name> - The name used "
#~ "for $NB_GID, which defaults to $NB_USER."
#~ "  This is only used if $NB_GID "
#~ "is specified and completely optional: "
#~ "there is only cosmetic effect."
#~ msgstr ""

# 4d57d0bd85ae417687747831670ec35f
#~ msgid ""
#~ "-e NB_UMASK=<umask> - Configures Jupyter "
#~ "to use a different umask value "
#~ "from default, i.e. 022. For example, "
#~ "if setting umask to 002, new files"
#~ " will be readable and writable by "
#~ "group members instead of just writable"
#~ " by the owner. Wikipedia has a "
#~ "good article about umask. Feel free "
#~ "to read it in order to choose "
#~ "the value that better fits your "
#~ "needs. Default value should fit most "
#~ "situations. Note that NB_UMASK when set"
#~ " only applies to the Jupyter process"
#~ " itself - you cannot use it to"
#~ " set a umask for additional files "
#~ "created during run-hooks e.g. via "
#~ "pip or conda - if you need "
#~ "to set a umask for these you "
#~ "must set umask for each command."
#~ msgstr ""

# 580637e7f00d4a36b69ce3f6ec43370e
#~ msgid ""
#~ "-e CHOWN_HOME=yes - Instructs the "
#~ "startup script to change the $NB_USER"
#~ " home directory owner and group to"
#~ " the current value of $NB_UID and "
#~ "$NB_GID. This change will take effect"
#~ " even if the user home directory "
#~ "is mounted from the host using -v"
#~ " as described below. The change is"
#~ " not applied recursively by default. "
#~ "You can change modify the chown "
#~ "behavior by setting CHOWN_HOME_OPTS (e.g., "
#~ "-e CHOWN_HOME_OPTS='-R')."
#~ msgstr ""

# 42bbfaf32b43482ba99263a74b383ac3
#~ msgid ""
#~ "-e CHOWN_EXTRA=\"<some dir>,<some other dir>\""
#~ " - Instructs the startup script to"
#~ " change the owner and group of "
#~ "each comma-separated container directory "
#~ "to the current value of $NB_UID "
#~ "and $NB_GID. The change is not "
#~ "applied recursively by default. You can"
#~ " change modify the chown behavior by"
#~ " setting CHOWN_EXTRA_OPTS (e.g., -e "
#~ "CHOWN_EXTRA_OPTS='-R')."
#~ msgstr ""

# 399a6318e3724410a4dcc93cc9d8736d
#~ msgid ""
#~ "-e GRANT_SUDO=yes - Instructs the "
#~ "startup script to grant the NB_USER "
#~ "user passwordless sudo capability. You "
#~ "do not need this option to allow"
#~ " the user to conda or pip "
#~ "install additional packages. This option "
#~ "is useful, however, when you wish "
#~ "to give $NB_USER the ability to "
#~ "install OS packages with apt or "
#~ "modify other root-owned files in "
#~ "the container. For this option to "
#~ "take effect, you must run the "
#~ "container with --user root. (The "
#~ "start-notebook.sh script will su $NB_USER"
#~ " after adding $NB_USER to sudoers.) "
#~ "You should only enable sudo if you"
#~ " trust the user or if the "
#~ "container is running on an isolated "
#~ "host."
#~ msgstr ""

# 3c6485fef5d44f72b4693c1a3d1ec35c
#~ msgid ""
#~ "-e GEN_CERT=yes - Instructs the startup"
#~ " script to generates a self-signed"
#~ " SSL certificate and configure Jupyter "
#~ "Notebook to use it to accept "
#~ "encrypted HTTPS connections."
#~ msgstr ""

# efe931ecaeac4348a6f0112a65371306
#~ msgid ""
#~ "-e JUPYTER_ENABLE_LAB=yes - Instructs the "
#~ "startup script to run jupyter lab "
#~ "instead of the default jupyter notebook"
#~ " command. Useful in container orchestration"
#~ " environments where setting environment "
#~ "variables is easier than change command"
#~ " line parameters."
#~ msgstr ""

# fe40b3a059e54a53a7a5fde86441ae72
#~ msgid ""
#~ "-e RESTARTABLE=yes - Runs Jupyter in "
#~ "a loop so that quitting Jupyter "
#~ "does not cause the container to "
#~ "exit.  This may be useful when you"
#~ " need to install extensions that "
#~ "require restarting Jupyter."
#~ msgstr ""

# bb82e70358e7452d86eb1b8e971fbf27
#~ msgid ""
#~ "-v /some/host/folder/for/work:/home/jovyan/work - "
#~ "Mounts a host machine directory as "
#~ "folder in the container. Useful when "
#~ "you want to preserve notebooks and "
#~ "other work even after the container "
#~ "is destroyed. You must grant the "
#~ "within-container notebook user or group "
#~ "(NB_UID or NB_GID) write access to "
#~ "the host directory (e.g., sudo chown "
#~ "1000 /some/host/folder/for/work)."
#~ msgstr ""

# 403f8e6101534bc0951bf5bb0b03c5a0
#~ msgid ""
#~ "--user 5000 --group-add users - "
#~ "Launches the container with a specific"
#~ " user ID and adds that user to"
#~ " the users group so that it can"
#~ " modify files in the default home "
#~ "directory and /opt/conda. You can use"
#~ " these arguments as alternatives to "
#~ "setting $NB_UID and $NB_GID."
#~ msgstr ""

# 565fbbe944ed4e68a5e202eaf07d1402
#~ msgid "Startup Hooks"
#~ msgstr ""

# 70f6f3501e1b43d3a95e200c39eef8d2
#~ msgid ""
#~ "You can further customize the container"
#~ " environment by adding shell scripts "
#~ "(*.sh) to be sourced or executables "
#~ "(chmod +x) to be run to the "
#~ "paths below:"
#~ msgstr ""

# bdc8d9262aea4329b09bac1deb92d6da
#~ msgid ""
#~ "/usr/local/bin/start-notebook.d/ - handled "
#~ "before any of the standard options "
#~ "noted above are applied"
#~ msgstr ""

# 786fba9678e24e3ba5ded6536dc0492a
#~ msgid ""
#~ "/usr/local/bin/before-notebook.d/ - handled "
#~ "after all of the standard options "
#~ "noted above are applied and just "
#~ "before the notebook server launches"
#~ msgstr ""

# 5903b6a921cb42a9a8b6db0e9592769c
#~ msgid ""
#~ "See the run-hooks function in the"
#~ " jupyter/base-notebook start.sh script for"
#~ " execution details."
#~ msgstr ""

# ffb01f3597d1453bb0299e9a4a888757
#~ msgid "SSL Certificates"
#~ msgstr ""

# 7b1a34debd094e02930aa7197377b691
#~ msgid ""
#~ "You may mount SSL key and "
#~ "certificate files into a container and"
#~ " configure Jupyter Notebook to use "
#~ "them to accept HTTPS connections. For"
#~ " example, to mount a host folder "
#~ "containing a notebook.key and notebook.crt "
#~ "and use them, you might run the"
#~ " following:"
#~ msgstr ""

# 11ef89b3d17b4bcf827e73a7ebb13756
#~ msgid ""
#~ "The docker-stacks/examples for information "
#~ "about how to use Let's Encrypt "
#~ "certificates when you run these stacks"
#~ " on a publicly visible domain."
#~ msgstr ""

# 4a42ccc5b624431bbacdc8c1d5624fb4
#~ msgid ""
#~ "The jupyter_notebook_config.py file for how"
#~ " this Docker image generates a "
#~ "self-signed certificate."
#~ msgstr ""

# 95d9c3081fa34def82e309c53ef2147b
#~ msgid ""
#~ "The Jupyter Notebook documentation for "
#~ "best practices about securing a public"
#~ " notebook server in general."
#~ msgstr ""

# 9950b2e426414111ad46c6ba1e9d29bb
#~ msgid "Alternative Commands"
#~ msgstr ""

# 2e90717352804ebd8086eef378fa411d
#~ msgid "start.sh"
#~ msgstr ""

# 11637ea03062425e94964f2c70ed8676
#~ msgid ""
#~ "The start-notebook.sh script actually "
#~ "inherits most of its option handling "
#~ "capability from a more generic start.sh"
#~ " script. The start.sh script supports "
#~ "all of the features described above, "
#~ "but allows you to specify an "
#~ "arbitrary command to execute. For "
#~ "example, to run the text-based "
#~ "ipython console in a container, do "
#~ "the following:"
#~ msgstr ""

# 3d92501fb3b940b385ee986095610391
#~ msgid ""
#~ "This script is particularly useful when"
#~ " you derive a new Dockerfile from "
#~ "this image and install additional "
#~ "Jupyter applications with subcommands like "
#~ "jupyter console, jupyter kernelgateway, etc."
#~ msgstr ""

# ff1b1af310d54eedb852dc5eff7a4f7e
#~ msgid "Others"
#~ msgstr ""

# 127ffe0a552b4dafaa77d173883350d7
#~ msgid ""
#~ "You can bypass the provided scripts "
#~ "and specify an arbitrary start command."
#~ " If you do, keep in mind that"
#~ " features supported by the start.sh "
#~ "script and its kin will not "
#~ "function (e.g., GRANT_SUDO)."
#~ msgstr ""

# 1d8bc4b15c3044b3932e0df72dd694a7
#~ msgid "Conda Environments"
#~ msgstr ""

# 97935ba423ed4a8787f9895f00015e4b
#~ msgid ""
#~ "The default Python 3.x Conda environment"
#~ " resides in /opt/conda. The /opt/conda/bin"
#~ " directory is part of the default "
#~ "jovyan user's $PATH. That directory is"
#~ " also whitelisted for use in sudo "
#~ "commands by the start.sh script."
#~ msgstr ""

# a8fe459cc9ff43b3b2f31efd4587f145
#~ msgid ""
#~ "The jovyan user has full read/write "
#~ "access to the /opt/conda directory. You"
#~ " can use either conda or pip to"
#~ " install new packages without any "
#~ "additional permissions."
#~ msgstr ""

# 36939901b3744e3fb67d2bae58ae8e25
#~ msgid "Contributed Recipes"
#~ msgstr ""

# 8bc65b7f51f4442c95ea0dec5b4b2704
#~ msgid ""
#~ "Users sometimes share interesting ways "
#~ "of using the Jupyter Docker Stacks. "
#~ "We encourage users to contribute these"
#~ " recipes to the documentation in case"
#~ " they prove useful to other members"
#~ " of the community by submitting a "
#~ "pull request to docs/using/recipes.md. The "
#~ "sections below capture this knowledge."
#~ msgstr ""

# 7447af86f4f3438ba413a7e9cc9764e5
#~ msgid "Using sudo within a container"
#~ msgstr ""

# ed8292c31667424184fe7515a30f79cd
#~ msgid ""
#~ "Password authentication is disabled for "
#~ "the NB_USER (e.g., jovyan). This choice"
#~ " was made to avoid distributing "
#~ "images with a weak default password "
#~ "that users ~might~ will forget to "
#~ "change before running a container on "
#~ "a publicly accessible host."
#~ msgstr ""

# d22ae301bebb4857b866359ddbfb7e53
#~ msgid ""
#~ "You can grant the within-container "
#~ "NB_USER passwordless sudo access by "
#~ "adding -e GRANT_SUDO=yes and --user root"
#~ " to your Docker command line or "
#~ "appropriate container orchestrator config."
#~ msgstr ""

#~ msgid ""
#~ "You should only enable sudo if you"
#~ " trust the user and/or if the "
#~ "container is running on an isolated "
#~ "host. See Docker security documentation "
#~ "for more information about running "
#~ "containers as root."
#~ msgstr ""

# 5b38bd48b58242788cc8b581b575241a
#~ msgid "Using pip install or conda install in a Child Docker image"
#~ msgstr ""

# c35347a79a2e4a7faffe139767808965
#~ msgid ""
#~ "To use a requirements.txt file, first"
#~ " create your requirements.txt file with "
#~ "the listing of packages desired. Next,"
#~ " create a new Dockerfile like the "
#~ "one shown below."
#~ msgstr ""

# fd2320ac3001480992ab2dd80285467b
#~ msgid "Ref: docker-stacks/commit/79169618d571506304934a7b29039085e77db78c"
#~ msgstr ""

# 179407610520450ea0e4b566eac8ec96
#~ msgid "Add a Python 2.x environment"
#~ msgstr ""

# 19bf98219e344b80b68fbf7f3aa68ec6
#~ msgid ""
#~ "Python 2.x was removed from all "
#~ "images on August 10th, 2017, starting"
#~ " in tag cc9feab481f7. You can add "
#~ "a Python 2.x environment by defining "
#~ "your own Dockerfile inheriting from one"
#~ " of the images like so:"
#~ msgstr ""

# be4f7d9b615d490c87cc6393ed0fabf2
#~ msgid "Ref: https://github.com/jupyter/docker-stacks/issues/440"
#~ msgstr ""

#~ msgid "Add a Python 3.x environment"
#~ msgstr ""

#~ msgid ""
#~ "The default version of Python that "
#~ "ships with conda/ubuntu may not be "
#~ "the version you want. To add a "
#~ "conda environment with a different "
#~ "version and make it accessible to "
#~ "Jupyter, the instructions are very "
#~ "similar to Python 2.x but are "
#~ "slightly simpler (no need to switch "
#~ "to root):"
#~ msgstr ""

# 747e87a9067b4870bad5aa335ab39f7d
#~ msgid "Run JupyterLab"
#~ msgstr ""

# e062399bbaee4f1eb3ab48dcc60289b8
#~ msgid ""
#~ "JupyterLab is preinstalled as a notebook"
#~ " extension starting in tag c33a7dc0eece."
#~ msgstr ""

# 7c0f192d197143698dd371fff8fa3ceb
#~ msgid ""
#~ "Run jupyterlab using a command such "
#~ "as docker run -it --rm -p "
#~ "8888:8888 jupyter/datascience-notebook start.sh "
#~ "jupyter lab"
#~ msgstr ""

#~ msgid "Dask JupyterLab Extension"
#~ msgstr ""

#~ msgid ""
#~ "Dask JupyterLab Extension provides a "
#~ "JupyterLab extension to manage Dask "
#~ "clusters, as well as embed Dask's "
#~ "dashboard plots directly into JupyterLab "
#~ "panes. Create the Dockerfile as:"
#~ msgstr ""

#~ msgid "And build the image as:"
#~ msgstr ""

#~ msgid "Once built, run using the command:"
#~ msgstr ""

#~ msgid "Ref: https://github.com/jupyter/docker-stacks/issues/999"
#~ msgstr ""

# e7842069e6ce432b9f1a12271e0ddc24
#~ msgid "Let's Encrypt a Notebook server"
#~ msgstr ""

# 4c00785b93734066b349b42b23c312af
#~ msgid ""
#~ "See the README for the simple "
#~ "automation here https://github.com/jupyter/docker-"
#~ "stacks/tree/master/examples/make-deploy which "
#~ "includes steps for requesting and "
#~ "renewing a Let's Encrypt certificate."
#~ msgstr ""

# c386f5913a78475487e9f12c76af9032
#~ msgid "Ref: https://github.com/jupyter/docker-stacks/issues/78"
#~ msgstr ""

# dd297c8f73a44707bf02064434a50a47
#~ msgid "Slideshows with Jupyter and RISE"
#~ msgstr ""

# a1834343ae3045ea962e0efc80f69443
#~ msgid ""
#~ "RISE allows via extension to create "
#~ "live slideshows of your notebooks, with"
#~ " no conversion, adding javascript "
#~ "Reveal.js:"
#~ msgstr ""

# 6e0c67b18d3546a9ab024c5663aa8f90
#~ msgid "Credit: Paolo D. based on docker-stacks/issues/43"
#~ msgstr ""

# 6bf66d68f2e5439b8403c0dd8ded40c5
#~ msgid "xgboost"
#~ msgstr ""

# a9bc4b88bd3d4bc1a7832f31677c298a
#~ msgid "Running behind a nginx proxy"
#~ msgstr ""

# dd58dbc3b08744a0b9415448d3bdbba6
#~ msgid ""
#~ "you would prefer to access the "
#~ "notebook at a server URL with a"
#~ " path (https://example.com/jupyter) rather than"
#~ " a port (https://example.com:8888)"
#~ msgstr ""

# cffd649e66ae4efb8122522e465ce3e3
#~ msgid ""
#~ "Here is a quick example NGINX "
#~ "configuration to get started. You'll "
#~ "need a server, a .crt and .key "
#~ "file for your server, and docker &"
#~ " docker-compose installed. Then just "
#~ "download the files at that gist "
#~ "and run docker-compose up -d to"
#~ " test it out. Customize the "
#~ "nginx.conf file to set the desired "
#~ "paths and add other services."
#~ msgstr ""

# 7ba37cfc11224013a862d6519168acd0
#~ msgid "Host volume mounts and notebook errors"
#~ msgstr ""

# 0fc6706374ee4a5d98517ec02ee24a03
#~ msgid ""
#~ "If you are mounting a host "
#~ "directory as /home/jovyan/work in your "
#~ "container and you receive permission "
#~ "errors or connection errors when you "
#~ "create a notebook, be sure that "
#~ "the jovyan user (UID=1000 by default)"
#~ " has read/write access to the "
#~ "directory on the host. Alternatively, "
#~ "specify the UID of the jovyan user"
#~ " on container startup using the -e"
#~ " NB_UID option described in the "
#~ "Common Features, Docker Options section"
#~ msgstr ""

# a6c910ab798b43ee91c0af160a3aadb6
#~ msgid "Ref: https://github.com/jupyter/docker-stacks/issues/199"
#~ msgstr ""

# 908924a0b4fa44d79fbca1413a0fb296
#~ msgid "Manpage installation"
#~ msgstr ""

# fb4a0f5bc3534bd9bb8909ce6512f4dd
#~ msgid ""
#~ "Adding the documentation on top of "
#~ "an existing singleuser image wastes a"
#~ " lot of space and requires "
#~ "reinstalling every system package, which "
#~ "can take additional time and bandwidth;"
#~ " the datascience-notebook image has "
#~ "been shown to grow by almost 3GB"
#~ " when adding manapages in this way."
#~ " Enabling manpages in the base Ubuntu"
#~ " layer prevents this container bloat:"
#~ msgstr ""

# 84b7fb0b5fd748ecba457f867a0e30bf
#~ msgid ""
#~ "Be sure to check the current base"
#~ " image in base-notebook before "
#~ "building."
#~ msgstr ""

# 5764b06de0d941a585e5107f313235f4
#~ msgid "JupyterHub"
#~ msgstr ""

# fbff97a16a2a4a53a69dd2d1c7dfbe91
#~ msgid "Use JupyterHub's dockerspawner"
#~ msgstr ""

# 8b1bc94531e7490fbaa012f5c4a257bd
#~ msgid ""
#~ "Swapping out the FROM line in the"
#~ " jupyterhub/singleuser Dockerfile should be "
#~ "enough for most cases."
#~ msgstr ""

# ce864521fffa4c89b7584d24296515d5
#~ msgid ""
#~ "Credit: Justin Tyberg, quanghoc, and Min"
#~ " RK based on docker-stacks/issues/124 "
#~ "and docker-stacks/pull/185"
#~ msgstr ""

# 6a5d92e7b071449686d148be90544e64
#~ msgid "Containers with a specific version of JupyterHub"
#~ msgstr ""

# 091b62f4a91c4d87b92554795a00744c
#~ msgid ""
#~ "To use a specific version of "
#~ "JupyterHub, the version of jupyterhub in"
#~ " your image should match the version"
#~ " in the Hub itself."
#~ msgstr ""

# 67db6ce9d62f499a9d9aaf675a86cddc
#~ msgid "Credit: MinRK"
#~ msgstr ""

# d4613cff20a140cbbbacc84ada8fcd87
#~ msgid "Ref: https://github.com/jupyter/docker-stacks/issues/177"
#~ msgstr ""

# 19439bd85c2946bb89f385651f8283dc
#~ msgid "Spark"
#~ msgstr ""

# 9c295c93db724e5fb11a8f870f805f41
#~ msgid "Using PySpark with AWS S3"
#~ msgstr ""

# 59f08373c7354fa4bb5b7c10441b5d69
#~ msgid "Ref: https://github.com/jupyter/docker-stacks/issues/127"
#~ msgstr ""

# c32dccc031664268983f72ed7927beff
#~ msgid "Using Local Spark JARs"
#~ msgstr ""

# 19614ffa973f49bab235cb5ac9cdf259
#~ msgid "Ref: https://github.com/jupyter/docker-stacks/issues/154"
#~ msgstr ""

# fc70801958a34e5aa578388147a8a1fb
#~ msgid "Using spark-packages.org"
#~ msgstr ""

# 031b9633ca0849e9a9035f4fa5ec2d29
#~ msgid ""
#~ "If you'd like to use packages from"
#~ " spark-packages.org, see "
#~ "https://gist.github.com/parente/c95fdaba5a9a066efaab for "
#~ "an example of how to specify the"
#~ " package identifier in the environment "
#~ "before creating a SparkContext."
#~ msgstr ""

# 08c4d39ccfa84551af78867ab37d3f18
#~ msgid "Ref: https://github.com/jupyter/docker-stacks/issues/43"
#~ msgstr ""

# 285d9bf0eefb480386dfdcd55fd76ef5
#~ msgid "Use jupyter/all-spark-notebooks with an existing Spark/YARN cluster"
#~ msgstr ""

# 1b1c743d85d542989f6a8f2c97a588d3
#~ msgid "Credit: britishbadger from docker-stacks/issues/369"
#~ msgstr ""

# 06d2e360eccb489abeeebada6c0b41eb
#~ msgid ""
#~ "Run Jupyter Notebook/Lab inside an "
#~ "already secured environment (i.e., with "
#~ "no token)"
#~ msgstr ""

# 42dd63565c4a4f67825f675972554d34
#~ msgid "(Adapted from issue 728)"
#~ msgstr ""

# 8af2ceb1414f46e1802681695b5917f8
#~ msgid ""
#~ "The default security is very good. "
#~ "There are use cases, encouraged by "
#~ "containers, where the jupyter container "
#~ "and the system it runs within, lie"
#~ " inside the security boundary. In "
#~ "these use cases it is convenient "
#~ "to launch the server without a "
#~ "password or token. In this case, "
#~ "you should use the start.sh script "
#~ "to launch the server with no "
#~ "token:"
#~ msgstr ""

# 158396013982441e9e62402c499dfb11
#~ msgid "Enable nbextension spellchecker for markdown (or any other nbextension)"
#~ msgstr ""

# 78ba1c20de2445fb9b76ec6202e4d794
#~ msgid "Ref: https://github.com/jupyter/docker-stacks/issues/675"
#~ msgstr ""

# f66d723263124285a641f0dee8a41565
#~ msgid "Running a Container"
#~ msgstr ""

# 3a614d7e864741199c1223a26fc37c03
#~ msgid "Using the Docker CLI"
#~ msgstr ""

# 3039d667df25426b84be7ab9d920cfee
#~ msgid ""
#~ "You can launch a local Docker "
#~ "container from the Jupyter Docker Stacks"
#~ " using the Docker command line "
#~ "interface. There are numerous ways to"
#~ " configure containers using the CLI. "
#~ "The following are some common patterns."
#~ msgstr ""

# 0ea4263c502142b2b3fa7f55a917af19
#~ msgid ""
#~ "Example 1 This command pulls the "
#~ "jupyter/scipy-notebook image tagged "
#~ "2c80cf3537ca from Docker Hub if it "
#~ "is not already present on the "
#~ "local host. It then starts a "
#~ "container running a Jupyter Notebook "
#~ "server and exposes the server on "
#~ "host port 8888. The server logs "
#~ "appear in the terminal and include "
#~ "a URL to the notebook server."
#~ msgstr ""

# 402a9d9ecccb479994d2903710aabaa6
#~ msgid ""
#~ "Pressing Ctrl-C shuts down the notebook"
#~ " server but leaves the container "
#~ "intact on disk for later restart "
#~ "or permanent deletion using commands "
#~ "like the following:"
#~ msgstr ""

# fe38eef5fbe24b90ab070cefeef42230
#~ msgid ""
#~ "Example 2 This command pulls the "
#~ "jupyter/r-notebook image tagged e5c5a7d3e52d "
#~ "from Docker Hub if it is not "
#~ "already present on the local host. "
#~ "It then starts a container running "
#~ "a Jupyter Notebook server and exposes"
#~ " the server on host port 10000. "
#~ "The server logs appear in the "
#~ "terminal and include a URL to the"
#~ " notebook server, but with the "
#~ "internal container port (8888) instead "
#~ "of the the correct host port "
#~ "(10000)."
#~ msgstr ""

# d911c29555904311b29d8eb79fcb9843
#~ msgid ""
#~ "Pressing Ctrl-C shuts down the notebook"
#~ " server and immediately destroys the "
#~ "Docker container. Files written to "
#~ "~/work in the container remain touched."
#~ " Any other changes made in the "
#~ "container are lost."
#~ msgstr ""

# 718d037e82a64d69aea592f76b3f047b
#~ msgid ""
#~ "Example 3 This command pulls the "
#~ "jupyter/all-spark-notebook image currently "
#~ "tagged latest from Docker Hub if "
#~ "an image tagged latest is not "
#~ "already present on the local host. "
#~ "It then starts a container named "
#~ "notebook running a JupyterLab server and"
#~ " exposes the server on a randomly "
#~ "selected port."
#~ msgstr ""

# f9627b2638ec498ebfd06d0475e1dc4c
#~ msgid "Using Binder"
#~ msgstr ""

# 6e355acc72ca41a2aca2972df65259c7
#~ msgid ""
#~ "Binder is a service that allows "
#~ "you to create and share custom "
#~ "computing environments for projects in "
#~ "version control. You can use any "
#~ "of the Jupyter Docker Stacks images "
#~ "as a basis for a Binder-compatible"
#~ " Dockerfile. See the docker-stacks "
#~ "example and Using a Dockerfile sections"
#~ " in the Binder documentation for "
#~ "instructions."
#~ msgstr ""

# d6f8d0ee10b542488dce87b84eb48036
#~ msgid "Using JupyterHub"
#~ msgstr ""

# ef9a37b25db542dea89c9c1fb31c18cd
#~ msgid ""
#~ "You can configure JupyterHub to launcher"
#~ " Docker containers from the Jupyter "
#~ "Docker Stacks images. If you've been "
#~ "following the Zero to JupyterHub with"
#~ " Kubernetes guide, see the Use an "
#~ "existing Docker image section for "
#~ "details. If you have a custom "
#~ "JupyterHub deployment, see the Picking "
#~ "or building a Docker image instructions"
#~ " for the dockerspawner instead."
#~ msgstr ""

# bf63b713aece4a7eacc2ad77f6f47c2c
#~ msgid "Using Other Tools and Services"
#~ msgstr ""

# fcce8862fc7a41a394c1e19d35363653
#~ msgid ""
#~ "You can use the Jupyter Docker "
#~ "Stacks with any Docker-compatible "
#~ "technology (e.g., Docker Compose, docker-"
#~ "py, your favorite cloud container "
#~ "service). See the documentation of the"
#~ " tool, library, or service for "
#~ "details about how to reference, "
#~ "configure, and launch containers from "
#~ "these images."
#~ msgstr ""

# 75674f1f85cb43bcbc020de3b84f18f7
#~ msgid "Selecting an Image"
#~ msgstr ""

# 686b01e6feaf4363930c16cecff5f462
# cdbd4076608348a182dc09701223093a
#~ msgid "Core Stacks"
#~ msgstr ""

# daaad3b4f13e4c6395b0e9186c73030d
# d0275f3e7b07428a85c62db44d774d71
#~ msgid "Image Relationships"
#~ msgstr ""

# 892152661ffc4ea096ba152334ff086f
# a6f02cacf6334057bdb5eb1339411a32
#~ msgid "Community Stacks"
#~ msgstr ""

# fc2fca9d04f442e9a313123cec1174ff
#~ msgid ""
#~ "The Jupyter team maintains a set "
#~ "of Docker image definitions in the "
#~ "https://github.com/jupyter/docker-stacks GitHub "
#~ "repository. The following sections describe"
#~ " these images including their contents, "
#~ "relationships, and versioning strategy."
#~ msgstr ""

# 4e9d03b93e964d16b23b30610d17b3e2
#~ msgid "jupyter/base-notebook"
#~ msgstr ""

# f43dd3334aac4971a67e5bb833dafcb8
# 93db5d969cea480a827c0d6d028fc717
# 4ff6dbde14924b73b3a54bdb94096ba2
# da116e35b2494285abe8447ab372324b
# 6fb499ae6636492b979bad5a17733c4b
# c10b1e6040c84241a77edb90ea3306a4
# 227408f175a24d1cb70e69ca32f11434
# b8ff65660ef14b0692edbe3a2fdff42b
# b50d8b1a5d3849279bcbda725f9f8e62
#~ msgid "Source on GitHub | Dockerfile commit history | Docker Hub image tags"
#~ msgstr ""

# eea41b7365bd4751ae599beb4edfa168
#~ msgid ""
#~ "jupyter/base-notebook is a small image"
#~ " supporting the options common across "
#~ "all core stacks. It is the basis"
#~ " for all other stacks."
#~ msgstr ""

# facfb37f7fa64b85930d8f12fdeef2dd
#~ msgid ""
#~ "Minimally-functional Jupyter Notebook server"
#~ " (e.g., no pandoc for saving "
#~ "notebooks as PDFs)"
#~ msgstr ""

# e90347274dd1459383e31a40bc6685f2
#~ msgid "Miniconda Python 3.x in /opt/conda"
#~ msgstr ""

# 0396d289dcdd49788f06c18efeca5013
#~ msgid ""
#~ "Unprivileged user jovyan (uid=1000, "
#~ "configurable, see options) in group "
#~ "users (gid=100) with ownership over the"
#~ " /home/jovyan and /opt/conda paths"
#~ msgstr ""

# 0e9211b01ef94b66bad9288682e1a833
#~ msgid ""
#~ "tini as the container entrypoint and "
#~ "a start-notebook.sh script as the "
#~ "default command"
#~ msgstr ""

# e38b63a14dae4b718a94c6e0523daf1e
#~ msgid ""
#~ "A start-singleuser.sh script useful for"
#~ " launching containers in JupyterHub"
#~ msgstr ""

# 0a603f43d1b34be28d2c1002f6686fda
#~ msgid ""
#~ "A start.sh script useful for running "
#~ "alternative commands in the container "
#~ "(e.g. ipython, jupyter kernelgateway, jupyter"
#~ " lab)"
#~ msgstr ""

# 9cff5da6908e42d5a7da093ba0bfcfe7
#~ msgid "jupyter/minimal-notebook"
#~ msgstr ""

# 8596676795f142d2912833d1320aa6a0
#~ msgid ""
#~ "jupyter/minimal-notebook adds command line "
#~ "tools useful when working in Jupyter "
#~ "applications."
#~ msgstr ""

# b1167e8a2430451fbb41ea876714d541
#~ msgid "Everything in jupyter/base-notebook"
#~ msgstr ""

# c46294c22bd44a86ac08b977f060a21d
#~ msgid "Pandoc and TeX Live for notebook document conversion"
#~ msgstr ""

# ad6fec23e1bf4a42b0cafd2f15e74574
#~ msgid "git, emacs, jed, nano, tzdata, and unzip"
#~ msgstr ""

# 1c7363e9e14148f7a302b0075598590a
#~ msgid "jupyter/r-notebook"
#~ msgstr ""

# a6bc72d21b0c4102b16a38df077a48dd
#~ msgid "jupyter/r-notebook includes popular packages from the R ecosystem."
#~ msgstr ""

# bfe937844bef465081bdd0cc74064b77
# eb5808624ae249d5aa6b1b06350035dc
#~ msgid "Everything in jupyter/minimal-notebook and its ancestor images"
#~ msgstr ""

# db6a08c9a21f4e1eae1f4a7c7656a60d
#~ msgid "The R interpreter and base environment"
#~ msgstr ""

# c1cf2ef729d04aacbbf220cbe78edb07
# 486896c4482443dcb0f7408c888f29e9
#~ msgid "IRKernel to support R code in Jupyter notebooks"
#~ msgstr ""

# ce8993612e2e44aea34dedc24740025d
#~ msgid ""
#~ "tidyverse packages, including ggplot2, dplyr,"
#~ " tidyr, readr, purrr, tibble, stringr, "
#~ "lubridate, and broom from conda-forge"
#~ msgstr ""

# dcf536112dad48369dbd06c240f5b337
#~ msgid ""
#~ "plyr, devtools, shiny, rmarkdown, forecast,"
#~ " rsqlite, reshape2, nycflights13, caret, "
#~ "rcurl, and randomforest packages from "
#~ "conda-forge"
#~ msgstr ""

# 3e8e6435e2b64a9fb9be8fe252ed2f3a
#~ msgid "jupyter/scipy-notebook"
#~ msgstr ""

# 7d06f0f385c844389eabb820a73b9cf1
#~ msgid ""
#~ "jupyter/scipy-notebook includes popular "
#~ "packages from the scientific Python "
#~ "ecosystem."
#~ msgstr ""

# 9b123df88f864a9f8bd0472877a47a23
#~ msgid ""
#~ "pandas, numexpr, matplotlib, scipy, seaborn,"
#~ " scikit-learn, scikit-image, sympy, "
#~ "cython, patsy, statsmodel, cloudpickle, dill,"
#~ " numba, bokeh, sqlalchemy, hdf5, vincent,"
#~ " beautifulsoup, protobuf, and xlrd packages"
#~ msgstr ""

#~ msgid ""
#~ "ipywidgets and ipympl for interactive "
#~ "visualizations and plots in Python "
#~ "notebooks"
#~ msgstr ""

# 538f0c0d60e84ac7b96c747c780dfd9e
#~ msgid "Facets for visualizing machine learning datasets"
#~ msgstr ""

# 91f89dafe55d46219648e753b94f3054
#~ msgid "jupyter/tensorflow-notebook"
#~ msgstr ""

# 183ce48c172144bc91143bc63797512d
#~ msgid ""
#~ "jupyter/tensorflow-notebook includes popular "
#~ "Python deep learning libraries."
#~ msgstr ""

# 5406ba3cf8a644a79a678c7968ef36cc
# 7dad34e3954840d69b1c418bfdc475c5
#~ msgid "Everything in jupyter/scipy-notebook and its ancestor images"
#~ msgstr ""

# 7698f92c854b4324a3371453e3ee1878
#~ msgid "tensorflow and keras machine learning libraries"
#~ msgstr ""

# e1403de76d344f4d93bd47a91dd00428
#~ msgid "jupyter/datascience-notebook"
#~ msgstr ""

# 2bd4e59533d04b86846cea01ccf36ed4
#~ msgid ""
#~ "jupyter/datascience-notebook includes libraries "
#~ "for data analysis from the Julia, "
#~ "Python, and R communities."
#~ msgstr ""

# ba7ecdc5c2444acd86073ac84157e7cf
#~ msgid ""
#~ "Everything in the jupyter/scipy-notebook "
#~ "and jupyter/r-notebook images, and their "
#~ "ancestor images"
#~ msgstr ""

# bfa2ae2246be45fdb389767d6f74baa6
#~ msgid "The Julia compiler and base environment"
#~ msgstr ""

# 31750842f94747f4a0ebd0ca4ac8f2af
#~ msgid "IJulia to support Julia code in Jupyter notebooks"
#~ msgstr ""

# d8985019373a4360a66ce8c6e32056fa
#~ msgid "HDF5, Gadfly, and RDatasets packages"
#~ msgstr ""

# 051a6e882e974e599bc0221add5e0c50
#~ msgid "jupyter/pyspark-notebook"
#~ msgstr ""

# a1a474f29c9047d6bb99e9a41e789351
#~ msgid ""
#~ "jupyter/pyspark-notebook includes Python "
#~ "support for Apache Spark, optionally on"
#~ " Mesos."
#~ msgstr ""

# 6d585f39fb334a5c95c7f9864baea8a9
#~ msgid "Apache Spark with Hadoop binaries"
#~ msgstr ""

# 33bbd9311c5640008e775210d3f75097
#~ msgid "Mesos client libraries"
#~ msgstr ""

#~ msgid "jupyter/all-spark-notebook"
#~ msgstr ""

# 954fbce53b9d4e3c90c88a65e7d138bd
#~ msgid ""
#~ "jupyter/all-spark-notebook includes Python,"
#~ " R, and Scala support for Apache "
#~ "Spark, optionally on Mesos."
#~ msgstr ""

# 671183aa9bcb4f4ba34933a4cc0e28c0
#~ msgid "Everything in jupyter/pyspark-notebook and its ancestor images"
#~ msgstr ""

# 0114a45f63054b1e9a56aff6c04bd670
#~ msgid ""
#~ "Apache Toree and spylon-kernel to "
#~ "support Scala code in Jupyter notebooks"
#~ msgstr ""

# aa21cb83205c4045960bcfd3f3fc1542
#~ msgid "ggplot2, sparklyr, and rcurl packages"
#~ msgstr ""

# 07d86ef0562f455abb691bffeaca467f
#~ msgid ""
#~ "The following diagram depicts the build"
#~ " dependency tree of the core images."
#~ " (i.e., the FROM statements in their"
#~ " Dockerfiles). Any given image inherits "
#~ "the complete content of all ancestor "
#~ "images pointing to it."
#~ msgstr ""

# fbf5d0a65b8748a5ba1b29a0e43ce9f4
#~ msgid "Builds"
#~ msgstr ""

# 75fc61a8cc874e9196ee00f7af15bb0b
#~ msgid ""
#~ "Pull requests to the jupyter/docker-"
#~ "stacks repository trigger builds of all"
#~ " images on Travis CI. These images"
#~ " are for testing purposes only and"
#~ " are not saved for use. When "
#~ "pull requests merge to master, all "
#~ "images rebuild on Docker Cloud and "
#~ "become available to docker pull from "
#~ "Docker Hub."
#~ msgstr ""

# d226a5a7f673440cbe70097864dda848
#~ msgid "Versioning"
#~ msgstr ""

# 34b4f765c48944bd939679eeb9810497
#~ msgid ""
#~ "The latest tag in each Docker Hub"
#~ " repository tracks the master branch "
#~ "HEAD reference on GitHub. latest is "
#~ "a moving target, by definition, and "
#~ "will have backward-incompatible changes "
#~ "regularly."
#~ msgstr ""

# 7ea772c3bc1d4463b29db3b57e48be8d
#~ msgid ""
#~ "Every image on Docker Hub also "
#~ "receives a 12-character tag which "
#~ "corresponds with the git commit SHA "
#~ "that triggered the image build. You "
#~ "can inspect the state of the "
#~ "jupyter/docker-stacks repository for that "
#~ "commit to review the definition of "
#~ "the image (e.g., images with tag "
#~ "7c45ec67c8e7 were built from "
#~ "https://github.com/jupyter/docker-stacks/tree/7c45ec67c8e7)."
#~ msgstr ""

# cf34bef9989940dda5de9dc026732a4c
#~ msgid ""
#~ "csharp-notebook is a community Jupyter"
#~ " Docker Stack image. Try C# in "
#~ "Jupyter Notebooks. The image includes "
#~ "more than 200 Jupyter Notebooks with "
#~ "example C# code and can readily be"
#~ " tried online via mybinder.org. Click "
#~ "here to launch ."
#~ msgstr ""

# e5c4a7b08c2f4b34b361a923f9fb3dbd
#~ msgid ""
#~ "education-notebook is a community "
#~ "Jupyter Docker Stack image. The image"
#~ " includes nbgrader and RISE on top"
#~ " of the datascience-notebook image. "
#~ "Click here to launch it on ."
#~ msgstr ""

# 8a550c70c3454d72b976cabc1cbdf465
#~ msgid "crosscompass/ihaskell-notebook"
#~ msgstr ""

# 997dafa5bad846f49a7eee78001ed3fc
#~ msgid ""
#~ "crosscompass/ihaskell-notebook is based on "
#~ "IHaskell. Includes popular packages and "
#~ "example notebooks."
#~ msgstr ""

# 9af612ef9b1847e9a537228c2d3bc77d
#~ msgid "Try it on binder:"
#~ msgstr ""

# d514a88096544a2ca92ceaf14b1323eb
#~ msgid ""
#~ "java-notebook is a community Jupyter "
#~ "Docker Stack image. The image includes"
#~ " IJava kernel on top of the "
#~ "minimal-notebook image. Click here to "
#~ "launch it on ."
#~ msgstr ""

# e5b3d27fa68b47d4a2c02c7a039d7daf
#~ msgid ""
#~ "sage-notebook is a community Jupyter "
#~ "Docker Stack image with the sagemath "
#~ "kernel on top of the minimal-"
#~ "notebook image. Click here to launch "
#~ "it on ."
#~ msgstr ""

#~ msgid ""
#~ "GPU-Jupyter: Leverage Jupyter Notebooks "
#~ "with the power of your NVIDIA GPU"
#~ " and perform GPU calculations using "
#~ "Tensorflow and Pytorch in collaborative "
#~ "notebooks. This is done by generating"
#~ " a Dockerfile, that consists of the"
#~ " nvidia/cuda base image, the well-"
#~ "maintained docker-stacks that is "
#~ "integrated as submodule and GPU-able "
#~ "libraries like Tensorflow, Keras and "
#~ "PyTorch on top of it."
#~ msgstr ""

#~ msgid ""
#~ "cgspatial-notebook is a community "
#~ "Jupyter Docker Stack image. The image"
#~ " includes major geospatial Python & R"
#~ " libraries on top of the "
#~ "datascience-notebook image. Try it on "
#~ "binder:"
#~ msgstr ""

# f9f4ef31795249d9bf2a752dfbb27a8f
#~ msgid ""
#~ "See the contributing guide for "
#~ "information about how to create your "
#~ "own Jupyter Docker Stack."
#~ msgstr ""

# 7b67588ff359486cb64810359db6704c
#~ msgid "Image Specifics"
#~ msgstr ""

# 4e5d822c2e1a410099f1ab5831e29927
#~ msgid "Apache Spark"
#~ msgstr ""

# 433d8d99798649029dafd444253567b4
#~ msgid "Specific Docker Image Options"
#~ msgstr ""

# 70083fc71521409895897387117748bc
#~ msgid ""
#~ "-p 4040:4040 - The jupyter/pyspark-"
#~ "notebook and jupyter/all-spark-notebook "
#~ "images open SparkUI (Spark Monitoring "
#~ "and Instrumentation UI) at default port"
#~ " 4040, this option map 4040 port "
#~ "inside docker container to 4040 port "
#~ "on host machine . Note every new"
#~ " spark context that is created is "
#~ "put onto an incrementing port (ie. "
#~ "4040, 4041, 4042, etc.), and it "
#~ "might be necessary to open multiple "
#~ "ports. For example: docker run -d "
#~ "-p 8888:8888 -p 4040:4040 -p 4041:4041"
#~ " jupyter/pyspark-notebook"
#~ msgstr ""

# 2449b18de82e4d129cbd49e52ce9e522
#~ msgid "Usage Examples"
#~ msgstr ""

# ec077f84f7394baba4071d0d8a9c9dbf
#~ msgid ""
#~ "The jupyter/pyspark-notebook and jupyter"
#~ "/all-spark-notebook images support the "
#~ "use of Apache Spark in Python, R,"
#~ " and Scala notebooks. The following "
#~ "sections provide some examples of how"
#~ " to get started using them."
#~ msgstr ""

# ca35b3b020914e2eb2e877199a90d4a4
#~ msgid "Using Spark Local Mode"
#~ msgstr ""

# 2c5367b84e444a1aa504910b22ba1454
# 09d8b02687704d368a670cb243e299fb
#~ msgid "In a Python Notebook"
#~ msgstr ""

# 2b5c49ea60184570a8b50622140c22e1
# 192add33e94844f080ae03254899e2ee
#~ msgid "In a R Notebook"
#~ msgstr ""

# 80cedeb3b4514de792dba8e03b1c8774
# 5f3159414ddc427699709ddef740d6fd
#~ msgid "In a Spylon Kernel Scala Notebook"
#~ msgstr ""

# 07c9256c669b488aaa2df48676d5a188
#~ msgid ""
#~ "Spylon kernel instantiates a SparkContext "
#~ "for you in variable sc after you"
#~ " configure Spark options in a "
#~ "%%init_spark magic cell."
#~ msgstr ""

# aeec453983524d3ab59f7241cf8bac7b
# 472a48e72aaf46ca86a89e1598595045
#~ msgid "In an Apache Toree Scala Notebook"
#~ msgstr ""

# 762d164260cd4938b5f9556b29b0e171
#~ msgid ""
#~ "Apache Toree instantiates a local "
#~ "SparkContext for you in variable sc "
#~ "when the kernel starts."
#~ msgstr ""

# 8da1ef6876324b61885c5dec2c6a9cbf
#~ msgid "Connecting to a Spark Cluster on Mesos"
#~ msgstr ""

# e8c29961728146a28c6581966a2d2341
#~ msgid "Deploy Spark on Mesos."
#~ msgstr ""

# 1838d7f4481246538ca4ffe89e02ff4d
#~ msgid ""
#~ "Configure each slave with the --no-"
#~ "switch_user flag or create the $NB_USER"
#~ " account on every slave node."
#~ msgstr ""

# d4ee49cc6cb547389ed3228e74a4a67c
# 4b8c4c1e7ea441f1af4b4e0fbed73888
#~ msgid ""
#~ "Run the Docker container with --net=host"
#~ " in a location that is network "
#~ "addressable by all of your Spark "
#~ "workers. (This is a Spark networking "
#~ "requirement.)"
#~ msgstr ""

# 9a026387155e46fa8e4e1ea3f00d3a63
# 68e479d8f50e4685a0fb5de56a978347
#~ msgid ""
#~ "NOTE: When using --net=host, you must"
#~ " also use the flags --pid=host -e "
#~ "TINI_SUBREAPER=true. See https://github.com/jupyter"
#~ "/docker-stacks/issues/64 for details."
#~ msgstr ""

# 929575857ae647aebbcb721af39bdd7e
#~ msgid ""
#~ "The Apache Toree kernel automatically "
#~ "creates a SparkContext when it starts"
#~ " based on configuration information from"
#~ " its command line arguments and "
#~ "environment variables. You can pass "
#~ "information about your Mesos cluster via"
#~ " the SPARK_OPTS environment variable when"
#~ " you spawn a container."
#~ msgstr ""

# da5d5d861e914df98df9dba50fb3d66a
#~ msgid "Connecting to a Spark Cluster in Standalone Mode"
#~ msgstr ""

# d5a341bb44524a8cb33f086803daaf63
#~ msgid "Deploy Spark in Standalone Mode."
#~ msgstr ""

# 85baa5bd4ed5426b96dad49dacfab9cb
#~ msgid "Tensorflow"
#~ msgstr ""

# 4249b4b266fc4aeeb85dc8386ab60592
#~ msgid ""
#~ "The jupyter/tensorflow-notebook image supports"
#~ " the use of Tensorflow in single "
#~ "machine or distributed mode."
#~ msgstr ""

# 68fba23f7cd94702a9dead3c51719206
#~ msgid "Single Machine Mode"
#~ msgstr ""

# d4b74babe01d4a3a86c46844a737151b
#~ msgid "Distributed Mode"
#~ msgstr ""

#~ msgid ""
#~ "[git](https://git-scm.com/), "
#~ "[emacs](https://www.gnu.org/software/emacs/), "
#~ "[jed](https://www.jedsoft.org/jed/), [nano](https://www.nano-"
#~ "editor.org/), tzdata, and"
#~ msgstr ""

#~ msgid ""
#~ "Minimally-functional Jupyter Notebook server"
#~ " (e.g., no [pandoc](https://pandoc.org/) for "
#~ "saving notebooks as PDFs)"
#~ msgstr ""

#~ msgid ""
#~ "[Pandoc](http://pandoc.org) and [TeX "
#~ "Live](https://www.tug.org/texlive/) for notebook "
#~ "document conversion"
#~ msgstr ""

#~ msgid ""
#~ "[git](https://git-scm.com/), "
#~ "[emacs](https://www.gnu.org/software/emacs/), "
#~ "[vi](https://vim.org/) (actually `vim-tiny`), "
#~ "[jed](https://www.jedsoft.org/jed/), [nano](https://www.nano-"
#~ "editor.org/), tzdata, and"
#~ msgstr ""

#~ msgid "unzip"
#~ msgstr ""

#~ msgid ""
#~ "[pandas](https://pandas.pydata.org/), "
#~ "[numexpr](https://github.com/pydata/numexpr), "
#~ "[matplotlib](https://matplotlib.org/), "
#~ "[scipy](https://www.scipy.org/),"
#~ msgstr ""

#~ msgid ""
#~ "[seaborn](https://seaborn.pydata.org/), [scikit-"
#~ "learn](http://scikit-learn.org/stable/), [scikit-"
#~ "image](http://scikit-image.org/), "
#~ "[sympy](http://www.sympy.org/en/index.html), "
#~ "[cython](http://cython.org/), "
#~ "[patsy](https://patsy.readthedocs.io/en/latest/), "
#~ "[statsmodel](http://www.statsmodels.org/stable/index.html), "
#~ "[cloudpickle](https://github.com/cloudpipe/cloudpickle), "
#~ "[dill](https://pypi.python.org/pypi/dill), "
#~ "[numba](https://numba.pydata.org/), "
#~ "[bokeh](https://bokeh.pydata.org/en/latest/), "
#~ "[sqlalchemy](https://www.sqlalchemy.org/), "
#~ "[hdf5](http://www.h5py.org/), "
#~ "[vincent](http://vincent.readthedocs.io/en/latest/), "
#~ "[beautifulsoup](https://www.crummy.com/software/BeautifulSoup/), "
#~ "[protobuf](https://developers.google.com/protocol-"
#~ "buffers/docs/pythontutorial), and [xlrd](http://www"
#~ ".python-excel.org/) packages * "
#~ "[ipywidgets](https://ipywidgets.readthedocs.io/en/stable/) and"
#~ " [ipympl](https://github.com/matplotlib/jupyter-matplotlib)"
#~ " for interactive visualizations and plots"
#~ " in Python notebooks * "
#~ "[Facets](https://github.com/PAIR-code/facets) for "
#~ "visualizing machine learning datasets"
#~ msgstr ""

#~ msgid "Try it on binder: [![launch Learn You a Haskell for Great"
#~ msgstr ""

#~ msgid ""
#~ "Good!](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/jamesdbrock"
#~ "/learn-you-a-haskell-"
#~ "notebook/master?urlpath=lab/tree/learn_you_a_haskell/00-preface.ipynb)"
#~ msgstr ""

#~ msgid ""
#~ "`-e NB_USER=jovyan` - Instructs the "
#~ "startup script to change the default "
#~ "container username from `jovyan` to the"
#~ " provided value. Causes the script to"
#~ " rename the `jovyan` user home "
#~ "folder. For this option to take "
#~ "effect, you must run the container "
#~ "with `--user root` and set the "
#~ "working directory `-w /home/$NB_USER`. This"
#~ " feature is useful when mounting host"
#~ " volumes with specific home folder."
#~ msgstr ""

#~ msgid ""
#~ "`jupyter/pyspark-notebook` includes Python "
#~ "support for Apache Spark, optionally on"
#~ " Mesos."
#~ msgstr ""

#~ msgid "[Mesos](http://mesos.apache.org/) client libraries"
#~ msgstr ""

#~ msgid ""
#~ "`jupyter/all-spark-notebook` includes Python,"
#~ " R, and Scala support for Apache "
#~ "Spark, optionally on Mesos."
#~ msgstr ""

#~ msgid "### Connecting to a Spark Cluster on Mesos"
#~ msgstr ""

# 4926e921fbd24baba9888b3f08cf4f51
#~ msgid "This configuration allows your compute cluster to scale with your data."
#~ msgstr ""

#~ msgid ""
#~ "[Deploy Spark on "
#~ "Mesos](http://spark.apache.org/docs/latest/running-on-"
#~ "mesos.html)."
#~ msgstr ""

#~ msgid ""
#~ "Configure each slave with [the `--no-"
#~ "switch_user` flag](https://open.mesosphere.com/reference"
#~ "/mesos-slave/) or create the `$NB_USER` "
#~ "account on every slave node."
#~ msgstr ""

# 16c4327879294075a64b4329f972321c
#~ msgid "Follow the language specific instructions below."
#~ msgstr ""

#~ msgid ""
#~ "# point to mesos master or "
#~ "zookeeper entry (e.g., zk://10.10.10.10:2181/mesos)"
#~ " conf.setMaster(\"mesos://10.10.10.10:5050\") # point"
#~ " to spark binary package in HDFS "
#~ "or on local filesystem on all "
#~ "slave # nodes (e.g., "
#~ "file:///opt/spark/spark-2.2.0-bin-hadoop2.7.tgz) "
#~ "conf.set(\"spark.executor.uri\", "
#~ "\"hdfs://10.10.10.10/spark/spark-2.2.0-bin-hadoop2.7.tgz\") "
#~ "# set other options as desired "
#~ "conf.set(\"spark.executor.memory\", \"8g\") "
#~ "conf.set(\"spark.core.connection.ack.wait.timeout\", \"1200\")"
#~ msgstr ""

#~ msgid ""
#~ "# Point to mesos master or "
#~ "zookeeper entry (e.g., zk://10.10.10.10:2181/mesos)"
#~ " # Point to spark binary package "
#~ "in HDFS or on local filesystem on"
#~ " all slave # nodes (e.g., "
#~ "file:///opt/spark/spark-2.2.0-bin-hadoop2.7.tgz) in "
#~ "sparkEnvir # Set other options in "
#~ "sparkEnvir sc <- "
#~ "sparkR.session(\"mesos://10.10.10.10:5050\", sparkEnvir=list("
#~ msgstr ""

#~ msgid ""
#~ "spark.executor.uri=\"hdfs://10.10.10.10/spark/spark-2.2.0-bin-"
#~ "hadoop2.7.tgz\", spark.executor.memory=\"8g\" )"
#~ msgstr ""

#~ msgid ""
#~ "```python %%init_spark # Configure the "
#~ "location of the mesos master and "
#~ "spark distribution on HDFS launcher.master "
#~ "= \"mesos://10.10.10.10:5050\" "
#~ "launcher.conf.spark.executor.uri=hdfs://10.10.10.10/spark/spark-2.2.0"
#~ "-bin-hadoop2.7.tgz ```"
#~ msgstr ""

#~ msgid ""
#~ "The Apache Toree kernel automatically "
#~ "creates a `SparkContext` when it starts"
#~ " based on configuration information from"
#~ " its command line arguments and "
#~ "environment variables. You can pass "
#~ "information about your Mesos cluster via"
#~ " the `SPARK_OPTS` environment variable when"
#~ " you spawn a container."
#~ msgstr ""

# 3e3d5ec9fa554e75989856139938f4f8
#~ msgid ""
#~ "For instance, to pass information about"
#~ " a Mesos master, Spark binary "
#~ "location in HDFS, and an executor "
#~ "options, you could start the container"
#~ " like so:"
#~ msgstr ""

#~ msgid ""
#~ "``` docker run -d -p 8888:8888 -e"
#~ " SPARK_OPTS='--master=mesos://10.10.10.10:5050 \\"
#~ msgstr ""

#~ msgid ""
#~ "--spark.executor.uri=hdfs://10.10.10.10/spark/spark-2.2.0-bin-"
#~ "hadoop2.7.tgz \\ --spark.executor.memory=8g' jupyter"
#~ "/all-spark-notebook"
#~ msgstr ""

# 3c781f06114240e28dcdb0c40a5d5cf5
#~ msgid ""
#~ "The language specific instructions are "
#~ "almost same as mentioned above for "
#~ "Mesos, only the master url would "
#~ "now be something like spark://10.10.10.10:7077"
#~ msgstr ""

#~ msgid ""
#~ "**Specific Docker Image Options** * `-p"
#~ " 4040:4040` - The `jupyter/pyspark-"
#~ "notebook` and `jupyter/all-spark-notebook` "
#~ "images open [SparkUI (Spark Monitoring "
#~ "and Instrumentation "
#~ "UI)](http://spark.apache.org/docs/latest/monitoring.html) at "
#~ "default port `4040`, this option map "
#~ "`4040` port inside docker container to"
#~ " `4040` port on host machine . "
#~ "Note every new spark context that "
#~ "is created is put onto an "
#~ "incrementing port (ie. 4040, 4041, 4042,"
#~ " etc.), and it might be necessary "
#~ "to open multiple ports. For example: "
#~ "`docker run -d -p 8888:8888 -p "
#~ "4040:4040 -p 4041:4041 jupyter/pyspark-"
#~ "notebook`"
#~ msgstr ""

# 15a0171869f3437481b9dfb2aec3db00
#~ msgid ""
#~ "Spark local mode is useful for "
#~ "experimentation on small data when you"
#~ " do not have a Spark cluster "
#~ "available."
#~ msgstr ""

#~ msgid "#### In a Python Notebook"
#~ msgstr ""

#~ msgid ""
#~ "```python from pyspark.sql import SparkSession"
#~ " spark = "
#~ "SparkSession.builder.appName(\"SimpleApp\").getOrCreate() # "
#~ "do something to prove it works "
#~ "spark.sql('SELECT \"Test\" as c1').show() ```"
#~ msgstr ""

#~ msgid "#### In a R Notebook"
#~ msgstr ""

#~ msgid "```r library(SparkR)"
#~ msgstr ""

#~ msgid "as <- sparkR.session(\"local[*]\")"
#~ msgstr ""

#~ msgid ""
#~ "# do something to prove it works"
#~ " df <- as.DataFrame(iris) head(filter(df, "
#~ "df$Petal_Width > 0.2)) ```"
#~ msgstr ""

#~ msgid "#### In a Spylon Kernel Scala Notebook"
#~ msgstr ""

#~ msgid ""
#~ "```python %%init_spark # Configure Spark "
#~ "to use a local master launcher.master"
#~ " = \"local[*]\" ```"
#~ msgstr ""

#~ msgid ""
#~ "```scala // Now run Scala code "
#~ "that uses the initialized SparkContext "
#~ "in sc val rdd = sc.parallelize(0 "
#~ "to 999) rdd.takeSample(false, 5) ```"
#~ msgstr ""

#~ msgid "#### In an Apache Toree Scala Notebook"
#~ msgstr ""

#~ msgid ""
#~ "```scala val rdd = sc.parallelize(0 to"
#~ " 999) rdd.takeSample(false, 5) ```"
#~ msgstr ""

# 79db0ba4244a4701aa8dfe0053d5579c
#~ msgid ""
#~ "Connection to Spark Cluster on "
#~ "Standalone Mode requires the following "
#~ "set of steps:"
#~ msgstr ""

#~ msgid ""
#~ "```python import os # make sure "
#~ "pyspark tells workers to use python3 "
#~ "not 2 if both are installed "
#~ "os.environ['PYSPARK_PYTHON'] = '/usr/bin/python3'"
#~ msgstr ""

#~ msgid "import pyspark conf = pyspark.SparkConf()"
#~ msgstr ""

#~ msgid ""
#~ "# Point to spark master "
#~ "conf.setMaster(\"spark://10.10.10.10:7070\") # point "
#~ "to spark binary package in HDFS or"
#~ " on local filesystem on all slave "
#~ "# nodes (e.g., file:///opt/spark/spark-2.2.0-bin-"
#~ "hadoop2.7.tgz) conf.set(\"spark.executor.uri\", "
#~ "\"hdfs://10.10.10.10/spark/spark-2.2.0-bin-hadoop2.7.tgz\") "
#~ "# set other options as desired "
#~ "conf.set(\"spark.executor.memory\", \"8g\") "
#~ "conf.set(\"spark.core.connection.ack.wait.timeout\", \"1200\")"
#~ msgstr ""

#~ msgid "# create the context sc = pyspark.SparkContext(conf=conf)"
#~ msgstr ""

#~ msgid ""
#~ "# do something to prove it works"
#~ " rdd = sc.parallelize(range(100000000)) "
#~ "rdd.sumApprox(3) ```"
#~ msgstr ""

#~ msgid ""
#~ "# Point to spark master # Point"
#~ " to spark binary package in HDFS "
#~ "or on local filesystem on all "
#~ "worker # nodes (e.g., "
#~ "file:///opt/spark/spark-2.2.0-bin-hadoop2.7.tgz) in "
#~ "sparkEnvir # Set other options in "
#~ "sparkEnvir sc <- "
#~ "sparkR.session(\"spark://10.10.10.10:7070\", sparkEnvir=list("
#~ msgstr ""

#~ msgid ""
#~ "spark.executor.uri=\"hdfs://10.10.10.10/spark/spark-2.4.3-bin-"
#~ "hadoop2.7.tgz\", spark.executor.memory=\"8g\" )"
#~ msgstr ""

#~ msgid ""
#~ "# do something to prove it works"
#~ " data(iris) df <- as.DataFrame(iris) "
#~ "head(filter(df, df$Petal_Width > 0.2)) ```"
#~ msgstr ""

#~ msgid ""
#~ "```python %%init_spark # Point to spark"
#~ " master launcher.master = "
#~ "\"spark://10.10.10.10:7070\" "
#~ "launcher.conf.spark.executor.uri=hdfs://10.10.10.10/spark/spark-2.4.3"
#~ "-bin-hadoop2.7.tgz ```"
#~ msgstr ""

#~ msgid ""
#~ "For instance, to pass information about"
#~ " a standalone Spark master, Spark "
#~ "binary location in HDFS, and an "
#~ "executor options, you could start the"
#~ " container like so:"
#~ msgstr ""

#~ msgid ""
#~ "``` docker run -d -p 8888:8888 -e"
#~ " SPARK_OPTS='--master=spark://10.10.10.10:7070 \\"
#~ msgstr ""

#~ msgid ""
#~ "--spark.executor.uri=hdfs://10.10.10.10/spark/spark-2.4.3-bin-"
#~ "hadoop2.7.tgz \\ --spark.executor.memory=8g' jupyter"
#~ "/all-spark-notebook"
#~ msgstr ""

#~ msgid ""
#~ "// do something to prove it works"
#~ " val rdd = sc.parallelize(0 to "
#~ "99999999) rdd.sum() ```"
#~ msgstr ""

#~ msgid ""
#~ "``` docker run -d -p 8888:8888 "
#~ "jupyter/base-notebook start-notebook.sh "
#~ "--NotebookApp.password='sha1:74ba40f8a388:c913541b7ee99d15d5ed31d4226bf7838f83a50e'"
#~ " ```"
#~ msgstr ""

#~ msgid ""
#~ "``` docker run -d -p 8888:8888 "
#~ "jupyter/base-notebook start-notebook.sh "
#~ "--NotebookApp.base_url=/some/path ```"
#~ msgstr ""

#~ msgid "``` docker run -d -p 8888:8888 \\"
#~ msgstr ""

#~ msgid "``` docker run -it --rm jupyter/base-notebook start.sh ipython ```"
#~ msgstr ""

#~ msgid ""
#~ "``` docker run -it --rm -p "
#~ "8888:8888 jupyter/base-notebook start.sh "
#~ "jupyter lab ```"
#~ msgstr ""

#~ msgid ""
#~ "``` # install a package into the"
#~ " default (python 3.x) environment pip "
#~ "install some-package conda install "
#~ "some-package ```"
#~ msgstr ""

#~ msgid ""
#~ "``` docker run -it -e GRANT_SUDO=yes "
#~ "--user root jupyter/minimal-notebook ```"
#~ msgstr ""

#~ msgid "``` # Choose your desired base image FROM jupyter/scipy-notebook:latest"
#~ msgstr ""

#~ msgid ""
#~ "``` # Choose your desired base "
#~ "image FROM jupyter/minimal-notebook:latest"
#~ msgstr ""

#~ msgid ""
#~ "And build the image as: ``` docker"
#~ " build -t jupyter/scipy-dasklabextension:latest"
#~ " . ```"
#~ msgstr ""

#~ msgid ""
#~ "Once built, run using the command: "
#~ "``` docker run -it --rm -p "
#~ "8888:8888 -p 8787:8787 jupyter/scipy-"
#~ "dasklabextension:latest ```"
#~ msgstr ""

#~ msgid ""
#~ "``` # Add Live slideshows with "
#~ "RISE RUN conda install -c damianavila82"
#~ " rise ```"
#~ msgstr ""

#~ msgid "``` %%bash conda install -y gcc pip install xgboost"
#~ msgstr ""

#~ msgid ""
#~ "``` FROM  jupyter/base-notebook:5ded1de07260 "
#~ "RUN pip install jupyterhub==0.8.0b1 ```"
#~ msgstr ""

#~ msgid ""
#~ "``` import os os.environ['PYSPARK_SUBMIT_ARGS'] "
#~ "= '--jars /home/jovyan/spark-streaming-"
#~ "kafka-assembly_2.10-1.6.1.jar pyspark-shell' "
#~ "import pyspark from pyspark.streaming.kafka "
#~ "import KafkaUtils from pyspark.streaming "
#~ "import StreamingContext sc = "
#~ "pyspark.SparkContext() ssc = StreamingContext(sc,1)"
#~ " broker = \"<my_broker_ip>\" directKafkaStream"
#~ " = KafkaUtils.createDirectStream(ssc, [\"test1\"], "
#~ "{\"metadata.broker.list\": broker}) "
#~ "directKafkaStream.pprint() ssc.start() ```"
#~ msgstr ""

#~ msgid "``` FROM jupyter/all-spark-notebook"
#~ msgstr ""

#~ msgid ""
#~ "``` docker run jupyter/base-"
#~ "notebook:6d2a05346196 start.sh jupyter lab "
#~ "--LabApp.token='' ```"
#~ msgstr ""

#~ msgid ""
#~ "``` docker run jupyter/base-"
#~ "notebook:6d2a05346196 start.sh jupyter notebook "
#~ "--NotebookApp.token='' ```"
#~ msgstr ""

#~ msgid ""
#~ "``` # Update with your base image"
#~ " of choice FROM jupyter/minimal-"
#~ "notebook:latest"
#~ msgstr ""

#~ msgid ""
#~ "``` ARG BASE_CONTAINER=jupyter/scipy-notebook "
#~ "FROM jupyter/scipy-notebook:latest"
#~ msgstr ""

#~ msgid ""
#~ "Run the Docker container with "
#~ "`--net=host` in a location that is "
#~ "network addressable by all of your "
#~ "Spark workers. (This is a [Spark "
#~ "networking requirement](http://spark.apache.org/docs/latest"
#~ "/cluster-overview.html#components).)"
#~ msgstr ""

#~ msgid ""
#~ "NOTE: When using `--net=host`, you must"
#~ " also use the flags `--pid=host -e"
#~ " TINI_SUBREAPER=true`. See https://github.com/jupyter"
#~ "/docker-stacks/issues/64 for details."
#~ msgstr ""

#~ msgid ""
#~ "# Workaround for a mandb bug, "
#~ "should be fixed in mandb > 2.8.5"
#~ " # https://git.savannah.gnu.org/cgit/man-"
#~ "db.git/commit/?id=8197d7824f814c5d4b992b4c8730b5b0f7ec589a RUN"
#~ " echo \"MANPATH_MAP ${CONDA_DIR}/bin "
#~ "${CONDA_DIR}/man\" >> /etc/manpath.config \\"
#~ msgstr ""

#~ msgid ""
#~ "Adding the documentation on top of "
#~ "an existing singleuser image wastes a"
#~ " lot of space and requires "
#~ "reinstalling every system package, which "
#~ "can take additional time and bandwidth;"
#~ " the `datascience-notebook` image has "
#~ "been shown to grow by almost 3GB"
#~ " when adding manapages in this way."
#~ " Enabling manpages in the base Ubuntu"
#~ " layer prevents this container bloat:"
#~ msgstr ""

#~ msgid ""
#~ "```Dockerfile # Ubuntu 18.04 (bionic) "
#~ "from 2018-05-26 # https://github.com/docker-"
#~ "library/official-"
#~ "images/commit/aac6a45b9eb2bffb8102353c350d341a410fb169 ARG "
#~ "BASE_CONTAINER=ubuntu:bionic-20180526@sha256:c8c275751219dadad8fa56b3ac41ca6cb22219ff117ca98fe82b42f24e1ba64e"
#~ " FROM $BASE_CONTAINER"
#~ msgstr ""

#~ msgid ""
#~ "ENV DEBIAN_FRONTEND noninteractive # Remove"
#~ " the manpage blacklist, install man, "
#~ "install docs RUN rm "
#~ "/etc/dpkg/dpkg.cfg.d/excludes \\"
#~ msgstr ""

#~ msgid ""
#~ "# Workaround for a mandb bug, "
#~ "should be fixed in mandb > 2.8.5"
#~ " # https://git.savannah.gnu.org/cgit/man-"
#~ "db.git/commit/?id=8197d7824f814c5d4b992b4c8730b5b0f7ec589a RUN"
#~ " echo \"MANPATH_MAP /opt/conda/bin "
#~ "/opt/conda/man\" >> /etc/manpath.config \\"
#~ msgstr ""

#~ msgid ""
#~ "&& echo \"MANPATH_MAP /opt/conda/bin "
#~ "/opt/conda/share/man\" >> /etc/manpath.config"
#~ msgstr ""

#~ msgid ""
#~ "[tidyr](http://tidyr.tidyverse.org/), "
#~ "[readr](http://readr.tidyverse.org/), "
#~ "[purrr](http://purrr.tidyverse.org/), "
#~ "[tibble](http://tibble.tidyverse.org/), "
#~ "[stringr](http://stringr.tidyverse.org/), "
#~ "[lubridate](http://lubridate.tidyverse.org/), and "
#~ "[broom](https://cran.r-project.org/web/packages/broom/vignettes/broom.html)"
#~ " from [conda-forge](https://conda-"
#~ "forge.github.io/feedstocks) * "
#~ "[plyr](https://cran.r-project.org/web/packages/plyr/index.html), "
#~ "[devtools](https://cran.r-project.org/web/packages/devtools/index.html),"
#~ " [shiny](https://shiny.rstudio.com/), "
#~ "[rmarkdown](http://rmarkdown.rstudio.com/), "
#~ "[forecast](https://cran.r-project.org/web/packages/forecast/forecast.pdf),"
#~ " "
#~ "[rsqlite](https://cran.r-project.org/web/packages/RSQLite/index.html),"
#~ " "
#~ "[reshape2](https://cran.r-project.org/web/packages/reshape2/reshape2.pdf),"
#~ " "
#~ "[nycflights13](https://cran.r-project.org/web/packages/nycflights13/index.html),"
#~ " [caret](http://topepo.github.io/caret/index.html), "
#~ "[rcurl](https://cran.r-project.org/web/packages/RCurl/index.html), "
#~ "and "
#~ "[randomforest](https://cran.r-project.org/web/packages/randomForest/randomForest.pdf)"
#~ " packages from [conda-forge](https://conda-"
#~ "forge.github.io/feedstocks)"
#~ msgstr ""

#~ msgid ""
#~ "[tidyverse](https://www.tidyverse.org/) packages, "
#~ "including [ggplot2](http://ggplot2.org/), "
#~ "[dplyr](http://dplyr.tidyverse.org/),"
#~ msgstr ""

#~ msgid ""
#~ "[tidyr](http://tidyr.tidyverse.org/), "
#~ "[readr](http://readr.tidyverse.org/), "
#~ "[purrr](http://purrr.tidyverse.org/), "
#~ "[tibble](http://tibble.tidyverse.org/), "
#~ "[stringr](http://stringr.tidyverse.org/), "
#~ "[lubridate](http://lubridate.tidyverse.org/), and "
#~ "[broom](https://cran.r-project.org/web/packages/broom/vignettes/broom.html)"
#~ " from [conda-forge](https://conda-"
#~ "forge.github.io/feedstocks) * "
#~ "[devtools](https://cran.r-project.org/web/packages/devtools/index.html),"
#~ " [shiny](https://shiny.rstudio.com/), "
#~ "[rmarkdown](http://rmarkdown.rstudio.com/), "
#~ "[forecast](https://cran.r-project.org/web/packages/forecast/forecast.pdf),"
#~ " "
#~ "[rsqlite](https://cran.r-project.org/web/packages/RSQLite/index.html),"
#~ " "
#~ "[nycflights13](https://cran.r-project.org/web/packages/nycflights13/index.html),"
#~ " [caret](http://topepo.github.io/caret/index.html), "
#~ "[tidymodels](https://www.tidymodels.org/), "
#~ "[rcurl](https://cran.r-project.org/web/packages/RCurl/index.html), "
#~ "and "
#~ "[randomforest](https://cran.r-project.org/web/packages/randomForest/randomForest.pdf)"
#~ " packages from [conda-forge](https://conda-"
#~ "forge.github.io/feedstocks)"
#~ msgstr ""

#~ msgid ""
#~ "[dask](https://dask.org/), [pandas](https://pandas.pydata.org/),"
#~ " [numexpr](https://github.com/pydata/numexpr), "
#~ "[matplotlib](https://matplotlib.org/), "
#~ "[scipy](https://www.scipy.org/),"
#~ msgstr ""

#~ msgid ""
#~ "[seaborn](https://seaborn.pydata.org/), [scikit-"
#~ "learn](http://scikit-learn.org/stable/), [scikit-"
#~ "image](http://scikit-image.org/), "
#~ "[sympy](http://www.sympy.org/en/index.html), "
#~ "[cython](http://cython.org/), "
#~ "[patsy](https://patsy.readthedocs.io/en/latest/), "
#~ "[statsmodel](http://www.statsmodels.org/stable/index.html), "
#~ "[cloudpickle](https://github.com/cloudpipe/cloudpickle), "
#~ "[dill](https://pypi.python.org/pypi/dill), "
#~ "[numba](https://numba.pydata.org/), "
#~ "[bokeh](https://bokeh.pydata.org/en/latest/), "
#~ "[sqlalchemy](https://www.sqlalchemy.org/), "
#~ "[hdf5](http://www.h5py.org/), "
#~ "[vincent](http://vincent.readthedocs.io/en/latest/), "
#~ "[beautifulsoup](https://www.crummy.com/software/BeautifulSoup/), "
#~ "[protobuf](https://developers.google.com/protocol-"
#~ "buffers/docs/pythontutorial), [xlrd](http://www.python-"
#~ "excel.org/), "
#~ "[bottleneck](https://bottleneck.readthedocs.io/en/latest/), and"
#~ " [pytables](https://www.pytables.org/) packages * "
#~ "[ipywidgets](https://ipywidgets.readthedocs.io/en/stable/) and"
#~ " [ipympl](https://github.com/matplotlib/jupyter-matplotlib)"
#~ " for interactive visualizations and plots"
#~ " in Python notebooks * "
#~ "[Facets](https://github.com/PAIR-code/facets) for "
#~ "visualizing machine learning datasets"
#~ msgstr ""

#~ msgid ""
#~ "Pull requests to the `jupyter/docker-"
#~ "stacks` repository trigger builds of all"
#~ " images on Travis CI. These images"
#~ " are for testing purposes only and"
#~ " are not saved for use. When "
#~ "pull requests merge to master, all "
#~ "images rebuild on Docker Cloud and "
#~ "become available to `docker pull` from"
#~ " Docker Hub."
#~ msgstr ""

#~ msgid ""
#~ "[csharp-notebook is a community Jupyter"
#~ " Docker Stack image. Try C# in "
#~ "Jupyter Notebooks](https://github.com/tlinnet/csharp-"
#~ "notebook). The image includes more"
#~ msgstr ""

#~ msgid ""
#~ "than 200 Jupyter Notebooks with example"
#~ " C# code and can readily be "
#~ "tried online via mybinder.org. Click "
#~ "here to launch "
#~ "[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/tlinnet"
#~ "/csharp-notebook/master)."
#~ msgstr ""

#~ msgid ""
#~ "[education-notebook is a community "
#~ "Jupyter Docker Stack image](https://github.com"
#~ "/umsi-mads/education-notebook). The image "
#~ "includes nbgrader and RISE on top "
#~ "of"
#~ msgstr ""

#~ msgid ""
#~ "the datascience-notebook image. Click "
#~ "here to launch it on "
#~ "[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh"
#~ "/umsi-mads/education-notebook/master)."
#~ msgstr ""

#~ msgid "__crosscompass/ihaskell-notebook__"
#~ msgstr ""

#~ msgid ""
#~ "[java-notebook is a community Jupyter"
#~ " Docker Stack image](https://github.com/jbindinga"
#~ "/java-notebook). The image includes"
#~ msgstr ""

#~ msgid ""
#~ "[IJava](https://github.com/SpencerPark/IJava) kernel on"
#~ " top of the minimal-notebook image."
#~ " Click here to launch it on "
#~ "[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/jbindinga"
#~ "/java-notebook/master)."
#~ msgstr ""

#~ msgid ""
#~ "[sage-notebook](https://github.com/sharpTrick/sage-"
#~ "notebook) is a community Jupyter Docker"
#~ " Stack image with the "
#~ "[sagemath](https://sagemath.org) kernel on top "
#~ "of"
#~ msgstr ""

#~ msgid ""
#~ "the minimal-notebook image. Click here"
#~ " to launch it on "
#~ "[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/sharpTrick"
#~ "/sage-notebook/master)."
#~ msgstr ""

#~ msgid ""
#~ "[GPU-Jupyter](https://github.com/iot-salzburg/gpu-"
#~ "jupyter/): Leverage Jupyter Notebooks with "
#~ "the power of your NVIDIA GPU and"
#~ " perform GPU calculations using"
#~ msgstr ""

#~ msgid ""
#~ "Tensorflow and Pytorch in collaborative "
#~ "notebooks. This is done by generating"
#~ " a Dockerfile, that consists of the"
#~ " **nvidia/cuda** base image, the well-"
#~ "maintained **docker-stacks** that is "
#~ "integrated as submodule and GPU-able "
#~ "libraries like **Tensorflow**, **Keras** and"
#~ " **PyTorch** on top of it."
#~ msgstr ""

#~ msgid ""
#~ "[cgspatial-notebook](https://github.com/SCiO-systems"
#~ "/cgspatial-notebook) is a community Jupyter"
#~ " Docker Stack image. The image "
#~ "includes major geospatial Python &"
#~ msgstr ""

#~ msgid ""
#~ "R libraries on top of the "
#~ "datascience-notebook image. Try it on "
#~ "binder:[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh"
#~ "/SCiO-systems/cgspatial-notebook/master)"
#~ msgstr ""

#~ msgid "## Apache Spark"
#~ msgstr ""

#~ msgid "**Specific Docker Image Options**"
#~ msgstr ""

#~ msgid "**Usage Examples**"
#~ msgstr ""

#~ msgid "### Using Spark Local Mode"
#~ msgstr ""

#~ msgid "#### In Python"
#~ msgstr ""

#~ msgid "#### In R"
#~ msgstr ""

#~ msgid "#### In Scala"
#~ msgstr ""

#~ msgid "##### In a Spylon Kernel"
#~ msgstr ""

#~ msgid "##### In an Apache Toree Kernel"
#~ msgstr ""

#~ msgid ""
#~ "Apache Toree instantiates a local "
#~ "`SparkContext` for you in variable `sc`"
#~ " when the kernel starts."
#~ msgstr ""

#~ msgid "### Connecting to a Spark Cluster in Standalone Mode"
#~ msgstr ""

#~ msgid "##### In an Apache Toree Scala Notebook"
#~ msgstr ""

#~ msgid ""
#~ "The Apache Toree kernel automatically "
#~ "creates a `SparkContext` when it starts"
#~ " based on configuration information from"
#~ " its command line arguments and "
#~ "environment variables. You can pass "
#~ "information about your cluster via the"
#~ " `SPARK_OPTS` environment variable when you"
#~ " spawn a container."
#~ msgstr ""

#~ msgid ""
#~ "For instance, to pass information about"
#~ " a standalone Spark master, you could"
#~ " start the container like so:"
#~ msgstr ""

#~ msgid ""
#~ "```bash docker run -d -p 8888:8888 "
#~ "-e SPARK_OPTS='--master=spark://master:7077' \\"
#~ msgstr ""

# fa8494a4dde544109b9f6f49ac28178f
#~ msgid ""
#~ "Note that this is the same "
#~ "information expressed in a notebook in"
#~ " the Python case above. Once the "
#~ "kernel spec has your cluster "
#~ "information, you can test your cluster"
#~ " in an Apache Toree notebook like "
#~ "so:"
#~ msgstr ""

#~ msgid ""
#~ "```scala // should print the value "
#~ "of --master in the kernel spec "
#~ "println(sc.master)"
#~ msgstr ""

#~ msgid ""
#~ "// Sum of the first 100 whole "
#~ "numbers val rdd = sc.parallelize(0 to"
#~ " 100) rdd.sum() // 5050 ```"
#~ msgstr ""

#~ msgid ""
#~ "Spark distribution is defined by the "
#~ "combination of the Spark and the "
#~ "Hadoop version and verified by the "
#~ "package checksum, see [Download Apache "
#~ "Spark](https://spark.apache.org/downloads.html) for more"
#~ " information. * `spark_version`: The Spark"
#~ " version to install (`3.0.0`). * "
#~ "`hadoop_version`: The Hadoop version (`3.2`)."
#~ " * `spark_checksum`: The package checksum"
#~ " (`BFE4540...`)."
#~ msgstr ""

#~ msgid ""
#~ "[git](https://git-scm.com/), "
#~ "[emacs](https://www.gnu.org/software/emacs/) (actually "
#~ "`emacs-nox`), [vi](https://vim.org/) (actually "
#~ "`vim-tiny`), [jed](https://www.jedsoft.org/jed/), "
#~ "[nano](https://www.nano-editor.org/), tzdata, and"
#~ " unzip"
#~ msgstr ""

#~ msgid ""
#~ "[tidyverse](https://www.tidyverse.org/) packages, "
#~ "including [ggplot2](http://ggplot2.org/), "
#~ "[dplyr](http://dplyr.tidyverse.org/), "
#~ "[tidyr](http://tidyr.tidyverse.org/), "
#~ "[readr](http://readr.tidyverse.org/), "
#~ "[purrr](http://purrr.tidyverse.org/), "
#~ "[tibble](http://tibble.tidyverse.org/), "
#~ "[stringr](http://stringr.tidyverse.org/), "
#~ "[lubridate](http://lubridate.tidyverse.org/), and "
#~ "[broom](https://cran.r-project.org/web/packages/broom/vignettes/broom.html)"
#~ " from [conda-forge](https://conda-"
#~ "forge.github.io/feedstocks)"
#~ msgstr ""

#~ msgid ""
#~ "```dockerfile # Start from a core "
#~ "stack version FROM jupyter/datascience-"
#~ "notebook:9f9e5ca8fe5a # Install from "
#~ "requirements.txt file COPY requirements.txt "
#~ "/tmp/ RUN pip install --requirement "
#~ "/tmp/requirements.txt && \\"
#~ msgstr ""

#~ msgid ""
#~ "```dockerfile # Start from a core "
#~ "stack version FROM jupyter/datascience-"
#~ "notebook:9f9e5ca8fe5a # Install from "
#~ "requirements.txt file COPY requirements.txt "
#~ "/tmp/ RUN conda install --yes --file "
#~ "/tmp/requirements.txt && \\"
#~ msgstr ""

#~ msgid ""
#~ "# COPY environment.yml /home/$NB_USER/tmp/ #"
#~ " RUN cd /home/$NB_USER/tmp/ && \\ #"
#~ "     conda env create -p "
#~ "$CONDA_DIR/envs/$conda_env -f environment.yml && "
#~ "\\ #     conda clean --all -f -y"
#~ msgstr ""

#~ msgid "[Miniconda](https://conda.io/miniconda.html) Python 3.x in `/opt/conda`"
#~ msgstr ""

#~ msgid ""
#~ "[git](https://git-scm.com/), "
#~ "[emacs](https://www.gnu.org/software/emacs/) (actually "
#~ "`emacs-nox`), [vi](https://vim.org/) (actually "
#~ "`vim-tiny`), [jed](https://www.jedsoft.org/jed/), "
#~ "[nano](https://www.nano-editor.org/) (actually "
#~ "`nano-tiny`), tzdata, and unzip"
#~ msgstr ""

#~ msgid ""
#~ "Spark is shipped with a version of"
#~ " Py4J that has to be referenced "
#~ "in the `PYTHONPATH`. * `py4j_version`: "
#~ "The Py4J version (`0.10.9`), see the "
#~ "tip below."
#~ msgstr ""

#~ msgid ""
#~ "-t jupyter/pyspark-notebook:spark-2.4.6 "
#~ "./pyspark-notebook \\ --build-arg "
#~ "spark_version=2.4.6 \\ --build-arg "
#~ "hadoop_version=2.7 \\ --build-arg "
#~ "spark_checksum=3A9F401EDA9B5749CDAFD246B1D14219229C26387017791C345A23A65782FB8B25A302BF4AC1ED7C16A1FE83108E94E55DAD9639A51C751D81C8C0534A4A9641"
#~ " \\ --build-arg openjdk_version=8 \\ "
#~ "--build-arg py4j_version=0.10.7"
#~ msgstr ""

#~ msgid ""
#~ "# Check the newly built image "
#~ "docker images jupyter/pyspark-notebook:spark-2.4.6"
#~ msgstr ""

#~ msgid ""
#~ "# REPOSITORY                 TAG                 "
#~ "IMAGE ID            CREATED             SIZE #"
#~ " jupyter/pyspark-notebook   spark-2.4.6         "
#~ "7ad7b5a9dbcd        4 minutes ago       3.44GB"
#~ msgstr ""

#~ msgid ""
#~ "# Check the Spark version docker "
#~ "run -it --rm jupyter/pyspark-"
#~ "notebook:spark-2.4.6 pyspark --version"
#~ msgstr ""

#~ msgid ""
#~ "# Welcome to #       ____              "
#~ "__ #      / __/__  ___ _____/ /__"
#~ " #     _\\ \\/ _ \\/ _ `/ "
#~ "__/  '_/ #    /___/ .__/\\_,_/_/ "
#~ "/_/\\_\\   version 2.4.6 #       /_/ #"
#~ " # Using Scala version 2.11.12, "
#~ "OpenJDK 64-Bit Server VM, 1.8.0_265 ```"
#~ msgstr ""

#~ msgid "**Tip**: to get the version of Py4J shipped with Spark:"
#~ msgstr ""

#~ msgid ""
#~ "Build a first image without changing "
#~ "`py4j_version` (it will not prevent the"
#~ " image to build it will just "
#~ "prevent Python to find the `pyspark` "
#~ "module),"
#~ msgstr ""

#~ msgid "get the version (`ls /usr/local/spark/python/lib/`),"
#~ msgstr ""

#~ msgid "set the version `--build-arg py4j_version=0.10.7`."
#~ msgstr ""

#~ msgid ""
#~ "```bash docker run -it --rm jupyter"
#~ "/pyspark-notebook:spark-2.4.6 ls "
#~ "/usr/local/spark/python/lib/ # py4j-0.10.7-src.zip  "
#~ "PY4J_LICENSE.txt  pyspark.zip # You can "
#~ "now set the build-arg # "
#~ "--build-arg py4j_version= ```"
#~ msgstr ""

#~ msgid ""
#~ "*Note: At the time of writing "
#~ "there is an issue preventing to "
#~ "use Spark `2.4.6` with Python `3.8`, "
#~ "see [this answer on "
#~ "SO](https://stackoverflow.com/a/62173969/4413446) for more"
#~ " information.*"
#~ msgstr ""

#~ msgid "# Install the Dask dashboard RUN pip install dask_labextension ; \\"
#~ msgstr ""

#~ msgid "jupyter labextension install -y --clean \\ dask-labextension"
#~ msgstr ""

#~ msgid ""
#~ "The `jovyan` user has full read/write"
#~ " access to the `/opt/conda` directory. "
#~ "You can use either `conda` or "
#~ "`pip` to install new packages without"
#~ " any additional permissions."
#~ msgstr ""

#~ msgid ""
#~ "```bash # install a package into "
#~ "the default (python 3.x) environment pip"
#~ " install some-package conda install "
#~ "some-package ```"
#~ msgstr ""

#~ msgid ""
#~ "[Miniforge](https://github.com/conda-forge/miniforge) "
#~ "Python 3.x in `/opt/conda`"
#~ msgstr ""

#~ msgid ""
#~ "Spark distribution is defined by the "
#~ "combination of the Spark and the "
#~ "Hadoop version and verified by the "
#~ "package checksum, see [Download Apache "
#~ "Spark](https://spark.apache.org/downloads.html) for more"
#~ " information. At this time the build"
#~ " will only work with the set of"
#~ " versions available on the Apache "
#~ "Spark download page, so it will "
#~ "not work with the archived versions. "
#~ "* `spark_version`: The Spark version to"
#~ " install (`3.0.0`). * `hadoop_version`: The"
#~ " Hadoop version (`3.2`). * "
#~ "`spark_checksum`: The package checksum "
#~ "(`BFE4540...`)."
#~ msgstr ""

#~ msgid ""
#~ "And build the image as: ```bash "
#~ "docker build -t jupyter/scipy-"
#~ "dasklabextension:latest . ```"
#~ msgstr ""

#~ msgid ""
#~ "Once built, run using the command: "
#~ "```bash docker run -it --rm -p "
#~ "8888:8888 -p 8787:8787 jupyter/scipy-"
#~ "dasklabextension:latest ```"
#~ msgstr ""

#~ msgid ""
#~ "For Ubuntu 18.04 (bionic) and earlier,"
#~ " you may also require to workaround"
#~ " for a mandb bug, which was "
#~ "fixed in mandb >= 2.8.6.1: ```dockerfile"
#~ " # https://git.savannah.gnu.org/cgit/man-"
#~ "db.git/commit/?id=8197d7824f814c5d4b992b4c8730b5b0f7ec589a # "
#~ "http://launchpadlibrarian.net/435841763/man-"
#~ "db_2.8.5-2_2.8.6-1.diff.gz"
#~ msgstr ""

#~ msgid "``` docker run -p 8888:8888 jupyter/scipy-notebook:2c80cf3537ca"
#~ msgstr ""

#~ msgid ""
#~ "``` # list containers docker ps -a"
#~ " CONTAINER ID        IMAGE                   "
#~ "COMMAND                  CREATED    STATUS"
#~ "                      PORTS               NAMES "
#~ "d67fe77f1a84        jupyter/base-notebook   \"tini"
#~ " -- start-noteb…\"   44 seconds ago"
#~ "    Exited (0) 39 seconds ago"
#~ "                       cocky_mirzakhani"
#~ msgstr ""

#~ msgid ""
#~ "# start the stopped container docker "
#~ "start -a d67fe77f1a84 Executing the "
#~ "command: jupyter notebook [W 16:45:02.020 "
#~ "NotebookApp] WARNING: The notebook server "
#~ "is listening on all IP addresses "
#~ "and not using encryption. This is "
#~ "not recommended. ..."
#~ msgstr ""

#~ msgid "# remove the stopped container docker rm d67fe77f1a84 d67fe77f1a84 ```"
#~ msgstr ""

#~ msgid ""
#~ "``` docker run --rm -p 10000:8888 "
#~ "-v \"$PWD\":/home/jovyan/work "
#~ "jupyter/r-notebook:e5c5a7d3e52d"
#~ msgstr ""

#~ msgid "``` docker run -d -P --name notebook jupyter/all-spark-notebook ```"
#~ msgstr ""

#~ msgid ""
#~ "``` # get the random host port "
#~ "assigned to the container port 8888 "
#~ "docker port notebook 8888 0.0.0.0:32769"
#~ msgstr ""

#~ msgid "# get the notebook token from the logs docker logs --tail 3 notebook"
#~ msgstr ""

# c4bc333e19324e2a93118e21b1f8f360
#~ msgid ""
#~ "Together, the URL to visit on the"
#~ " host machine to access the server"
#~ " in this case is "
#~ "http://localhost:32769?token=15914ca95f495075c0aa7d0e060f1a78b6d94f70ea373b00."
#~ msgstr ""

#~ msgid "``` # stop the container docker stop notebook notebook"
#~ msgstr ""

#~ msgid "##### In Python"
#~ msgstr ""

#~ msgid "##### In R"
#~ msgstr ""

#~ msgid "##### In Scala"
#~ msgstr ""

#~ msgid ""
#~ "Run the Docker container with "
#~ "`--net=host` in a location that is "
#~ "network addressable by all of your "
#~ "Spark workers. (This is a [Spark "
#~ "networking requirement](http://spark.apache.org/docs/latest"
#~ "/cluster-overview.html#components).) * NOTE: When"
#~ " using `--net=host`, you must also "
#~ "use the flags `--pid=host -e "
#~ "TINI_SUBREAPER=true`. See https://github.com/jupyter"
#~ "/docker-stacks/issues/64 for details."
#~ msgstr ""

#~ msgid ""
#~ "You can pass [Jupyter command line "
#~ "options](https://jupyter.readthedocs.io/en/latest/projects/jupyter-"
#~ "command.html) to the `start-notebook.sh` "
#~ "script when launching the container. For"
#~ " example, to secure the Notebook "
#~ "server with a custom password hashed "
#~ "using `IPython.lib.passwd()` instead of the"
#~ " default token, you can run the "
#~ "following:"
#~ msgstr ""

#~ msgid ""
#~ "[git](https://git-scm.com/), [vi](https://vim.org/) "
#~ "(actually `vim-tiny`), [nano](https://www.nano-"
#~ "editor.org/) (actually `nano-tiny`), tzdata,"
#~ " and unzip"
#~ msgstr ""

#~ msgid ""
#~ "[ggplot2](http://ggplot2.org/), "
#~ "[sparklyr](http://spark.rstudio.com/), and "
#~ "[rcurl](https://cran.r-project.org/web/packages/RCurl/index.html) "
#~ "packages"
#~ msgstr ""

#~ msgid ""
#~ "Pull requests to the `jupyter/docker-"
#~ "stacks` repository trigger builds of all"
#~ " images on GitHub Actions. These "
#~ "images are for testing purposes only "
#~ "and are not saved for use. When"
#~ " pull requests merge to master, all"
#~ " images rebuild on Docker Cloud and"
#~ " become available to `docker pull` "
#~ "from Docker Hub."
#~ msgstr ""

