# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018- Project Jupyter
# This file is distributed under the same license as the docker-stacks
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: docker-stacks latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-05-22 21:39+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../using/common.md:1 9e2208cb86ea442ba34127bd0e50fd0a
msgid "Common Features"
msgstr ""

#: ../../using/common.md:3 eec6b9c3ea504e6baeecdc3fba73771a
msgid ""
"A container launched from any Jupyter Docker Stacks image runs a Jupyter "
"Notebook server by default. The container does so by executing a `start-"
"notebook.sh` script. This script configures the internal container "
"environment and then runs `jupyter notebook`, passing it any command line"
" arguments received."
msgstr ""

# 298bc09d3aab4abcb413ad481d6242ff
#: ../../using/common.md:5 18856b6dcd6b4b1197a914f3cee3330f
msgid ""
"This page describes the options supported by the startup script as well "
"as how to bypass it to run alternative commands."
msgstr ""

#: ../../using/common.md:7 207e80266bc24339821150b34434ef0c
msgid "Notebook Options"
msgstr ""

#: ../../using/common.md:9 358e0df95e60409c97b0eb31816f740f
msgid ""
"You can pass [Jupyter command line options](https://jupyter-"
"notebook.readthedocs.io/en/stable/config.html#options) to the `start-"
"notebook.sh` script when launching the container. For example, to secure "
"the Notebook server with a custom password hashed using "
"`IPython.lib.passwd()` instead of the default token, you can run the "
"following:"
msgstr ""

# 4c08f057def247cbbfc8231e628cb792
#: ../../using/common.md:15 841b715de6334598879155fa1e1fbfa8
msgid ""
"For example, to set the base URL of the notebook server, you can run the "
"following:"
msgstr ""

#: ../../using/common.md:21 a62394e3357d4ae086902b1930f5f401
msgid "Docker Options"
msgstr ""

#: ../../using/common.md:23 b1c69447e620450fb210f04e79fa0b0e
msgid ""
"You may instruct the `start-notebook.sh` script to customize the "
"container environment before launching the notebook server. You do so by "
"passing arguments to the `docker run` command."
msgstr ""

#: ../../using/common.md:26 ef8ade102aa44d50a88d62756b258d58
msgid ""
"`-e NB_USER=jovyan` - Instructs the startup script to change the default "
"container username from `jovyan` to the provided value. Causes the script"
" to rename the `jovyan` user home folder. For this option to take effect,"
" you must run the container with `--user root`, set the working directory"
" `-w /home/$NB_USER` and set the environment variable `-e CHOWN_HOME=yes`"
" (see below for detail). This feature is useful when mounting host "
"volumes with specific home folder."
msgstr ""

#: ../../using/common.md:27 548f8d3dcc7c4386af37c4978898c1b1
msgid ""
"`-e NB_UID=1000` - Instructs the startup script to switch the numeric "
"user ID of `$NB_USER` to the given value. This feature is useful when "
"mounting host volumes with specific owner permissions. For this option to"
" take effect, you must run the container with `--user root`. (The startup"
" script will `su $NB_USER` after adjusting the user ID.) You might "
"consider using modern Docker options `--user` and `--group-add` instead. "
"See the last bullet below for details."
msgstr ""

#: ../../using/common.md:28 856bc0a4be3b4ef0b2c5f3e58de90c2f
msgid ""
"`-e NB_GID=100` - Instructs the startup script to change the primary "
"group of`$NB_USER` to `$NB_GID` (the new group is added with a name of "
"`$NB_GROUP` if it is defined, otherwise the group is named `$NB_USER`). "
"This feature is useful when mounting host volumes with specific group "
"permissions. For this option to take effect, you must run the container "
"with `--user root`. (The startup script will `su $NB_USER` after "
"adjusting the group ID.) You might consider using modern Docker options "
"`--user` and `--group-add` instead. See the last bullet below for "
"details. The user is added to supplemental group `users` (gid 100) in "
"order to allow write access to the home directory and `/opt/conda`. If "
"you override the user/group logic, ensure the user stays in group `users`"
" if you want them to be able to modify files in the image."
msgstr ""

#: ../../using/common.md:29 222f8c7495664ce18fc93bcf4c1e0ed4
msgid ""
"`-e NB_GROUP=<name>` - The name used for `$NB_GID`, which defaults to "
"`$NB_USER`. This is only used if `$NB_GID` is specified and completely "
"optional: there is only cosmetic effect."
msgstr ""

#: ../../using/common.md:30 fd665899f7c24699bc59afb70483c27c
msgid ""
"`-e NB_UMASK=<umask>` - Configures Jupyter to use a different umask value"
" from default, i.e. `022`. For example, if setting umask to `002`, new "
"files will be readable and writable by group members instead of just "
"writable by the owner. Wikipedia has a good article about "
"[umask](https://en.wikipedia.org/wiki/Umask). Feel free to read it in "
"order to choose the value that better fits your needs. Default value "
"should fit most situations. Note that `NB_UMASK` when set only applies to"
" the Jupyter process itself - you cannot use it to set a umask for "
"additional files created during run-hooks e.g. via `pip` or `conda` - if "
"you need to set a umask for these you must set `umask` for each command."
msgstr ""

#: ../../using/common.md:31 3b514f5d7b8344d59468eed73979ba9e
msgid ""
"`-e CHOWN_HOME=yes` - Instructs the startup script to change the "
"`$NB_USER` home directory owner and group to the current value of "
"`$NB_UID` and `$NB_GID`. This change will take effect even if the user "
"home directory is mounted from the host using `-v` as described below. "
"The change is **not** applied recursively by default. You can change "
"modify the `chown` behavior by setting `CHOWN_HOME_OPTS` (e.g., `-e "
"CHOWN_HOME_OPTS='-R'`)."
msgstr ""

#: ../../using/common.md:32 2beac5e203fc484cb66e2745d8857dc3
msgid ""
"`-e CHOWN_EXTRA=\"<some dir>,<some other dir>\"` - Instructs the startup "
"script to change the owner and group of each comma-separated container "
"directory to the current value of `$NB_UID` and `$NB_GID`. The change is "
"**not** applied recursively by default. You can change modify the `chown`"
" behavior by setting `CHOWN_EXTRA_OPTS` (e.g., `-e "
"CHOWN_EXTRA_OPTS='-R'`)."
msgstr ""

#: ../../using/common.md:33 523dee0fa02042999ed1786925c80f82
msgid ""
"`-e GRANT_SUDO=yes` - Instructs the startup script to grant the `NB_USER`"
" user passwordless `sudo` capability. You do **not** need this option to "
"allow the user to `conda` or `pip` install additional packages. This "
"option is useful, however, when you wish to give `$NB_USER` the ability "
"to install OS packages with `apt` or modify other root-owned files in the"
" container. For this option to take effect, you must run the container "
"with `--user root`. (The `start-notebook.sh` script will `su $NB_USER` "
"after adding `$NB_USER` to sudoers.) **You should only enable `sudo` if "
"you trust the user or if the container is running on an isolated host.**"
msgstr ""

#: ../../using/common.md:34 40f016d7fe7d4b3e962a69942019808a
msgid ""
"`-e GEN_CERT=yes` - Instructs the startup script to generates a self-"
"signed SSL certificate and configure Jupyter Notebook to use it to accept"
" encrypted HTTPS connections."
msgstr ""

#: ../../using/common.md:35 6d4140dbb8b24cb0b08bfb13eec41f93
msgid ""
"`-e JUPYTER_ENABLE_LAB=yes` - Instructs the startup script to run "
"`jupyter lab` instead of the default `jupyter notebook` command. Useful "
"in container orchestration environments where setting environment "
"variables is easier than change command line parameters."
msgstr ""

#: ../../using/common.md:36 0579e43cac5d4716b05e78720c22ddd9
msgid ""
"`-e RESTARTABLE=yes` - Runs Jupyter in a loop so that quitting Jupyter "
"does not cause the container to exit. This may be useful when you need to"
" install extensions that require restarting Jupyter."
msgstr ""

#: ../../using/common.md:37 425c82b210fa479297aafaba4b1e6502
msgid ""
"`-v /some/host/folder/for/work:/home/jovyan/work` - Mounts a host machine"
" directory as folder in the container. Useful when you want to preserve "
"notebooks and other work even after the container is destroyed. **You "
"must grant the within-container notebook user or group (`NB_UID` or "
"`NB_GID`) write access to the host directory (e.g., `sudo chown 1000 "
"/some/host/folder/for/work`).**"
msgstr ""

#: ../../using/common.md:38 a6c32dc1c3d04121a023ff08fd4fc8e8
msgid ""
"`--user 5000 --group-add users` - Launches the container with a specific "
"user ID and adds that user to the `users` group so that it can modify "
"files in the default home directory and `/opt/conda`. You can use these "
"arguments as alternatives to setting `$NB_UID` and `$NB_GID`."
msgstr ""

#: ../../using/common.md:40 162b5273891e4d97b82e2a2bd1080d82
msgid "Startup Hooks"
msgstr ""

#: ../../using/common.md:42 019db3284a6e4f3080f90342ea8067f6
msgid ""
"You can further customize the container environment by adding shell "
"scripts (`*.sh`) to be sourced or executables (`chmod +x`) to be run to "
"the paths below:"
msgstr ""

#: ../../using/common.md:45 a23aee7177774645874ccb4003ad6a52
msgid ""
"`/usr/local/bin/start-notebook.d/` - handled before any of the standard "
"options noted above are applied"
msgstr ""

#: ../../using/common.md:47 afceea9d16314fe89fe8ac61f224c3d9
msgid ""
"`/usr/local/bin/before-notebook.d/` - handled after all of the standard "
"options noted above are applied and just before the notebook server "
"launches"
msgstr ""

#: ../../using/common.md:50 3232b0f6fbeb4779b3be96d11cdd5cbb
msgid ""
"See the `run-hooks` function in the [`jupyter/base-notebook "
"start.sh`](https://github.com/jupyter/docker-stacks/blob/master/base-"
"notebook/start.sh) script for execution details."
msgstr ""

#: ../../using/common.md:53 83b8f0aeaafb44b4868977e84b81eeca
msgid "SSL Certificates"
msgstr ""

#: ../../using/common.md:55 5ee295e306424719bb4e06adbea5c910
msgid ""
"You may mount SSL key and certificate files into a container and "
"configure Jupyter Notebook to use them to accept HTTPS connections. For "
"example, to mount a host folder containing a `notebook.key` and "
"`notebook.crt` and use them, you might run the following:"
msgstr ""

# e496d62ce1b7489eabf40a55471247b4
#: ../../using/common.md:65 c6c8579a0f5948c299e4b2662198215f
msgid ""
"Alternatively, you may mount a single PEM file containing both the key "
"and certificate. For example:"
msgstr ""

# 6ada67b7d1a34f59ad235d7e49e6a298
#: ../../using/common.md:74 60c8d5b9721f4696a2e86db510f79628
msgid ""
"In either case, Jupyter Notebook expects the key and certificate to be a "
"base64 encoded text file. The certificate file or PEM may contain one or "
"more certificates (e.g., server, intermediate, and root)."
msgstr ""

# c908965cf0084fc2b276b50b47b87d18
#: ../../using/common.md:76 7e517865f00e420d836cddd672bbcbb1
msgid "For additional information about using SSL, see the following:"
msgstr ""

#: ../../using/common.md:78 0da17fa3cc014a798e5782adf6429e88
msgid ""
"The [docker-stacks/examples](https://github.com/jupyter/docker-"
"stacks/tree/master/examples) for information about how to use [Let's "
"Encrypt](https://letsencrypt.org/) certificates when you run these stacks"
" on a publicly visible domain."
msgstr ""

#: ../../using/common.md:79 91b341c1551f4b049ff44f8c36f7fe34
msgid ""
"The [jupyter_notebook_config.py](https://github.com/jupyter/docker-"
"stacks/blob/master/base-notebook/jupyter_notebook_config.py) file for how"
" this Docker image generates a self-signed certificate."
msgstr ""

#: ../../using/common.md:80 a02066554dd84a3a90d0c3390c45812e
msgid ""
"The [Jupyter Notebook documentation](https://jupyter-"
"notebook.readthedocs.io/en/latest/public_server.html#securing-a-notebook-"
"server) for best practices about securing a public notebook server in "
"general."
msgstr ""

#: ../../using/common.md:82 679fbf3ca4ff4ccc8ef9ed25d0fedcf9
msgid "Alternative Commands"
msgstr ""

#: ../../using/common.md:84 ab23e76d893d4543a7c9f9651064e7a0
msgid "start.sh"
msgstr ""

#: ../../using/common.md:86 5c4e2428013d4406b618644d9a52dddd
msgid ""
"The `start-notebook.sh` script actually inherits most of its option "
"handling capability from a more generic `start.sh` script. The `start.sh`"
" script supports all of the features described above, but allows you to "
"specify an arbitrary command to execute. For example, to run the text-"
"based `ipython` console in a container, do the following:"
msgstr ""

# ad0be3e8095e4394afb367e9e56e1ca5
#: ../../using/common.md:92 e2c6b417411c4ec8ba596b97a4bfc26c
msgid "Or, to run JupyterLab instead of the classic notebook, run the following:"
msgstr ""

#: ../../using/common.md:98 d0291ae7f7bc403f94663a6539c01422
msgid ""
"This script is particularly useful when you derive a new Dockerfile from "
"this image and install additional Jupyter applications with subcommands "
"like `jupyter console`, `jupyter kernelgateway`, etc."
msgstr ""

#: ../../using/common.md:100 407f207c0ab3476c96b400af56a7cc58
msgid "Others"
msgstr ""

#: ../../using/common.md:102 3d218c5650ab488da976568ff611674e
msgid ""
"You can bypass the provided scripts and specify an arbitrary start "
"command. If you do, keep in mind that features supported by the "
"`start.sh` script and its kin will not function (e.g., `GRANT_SUDO`)."
msgstr ""

#: ../../using/common.md:104 927b30ae99ed459ea38f335b769b5900
msgid "Conda Environments"
msgstr ""

#: ../../using/common.md:106 f2d95a5e4a4a427a92fcfce94ff7e76e
msgid ""
"The default Python 3.x [Conda "
"environment](https://conda.io/projects/conda/en/latest/user-"
"guide/concepts/environments.html) resides in `/opt/conda`. The "
"`/opt/conda/bin` directory is part of the default `jovyan` user's "
"`$PATH`. That directory is also whitelisted for use in `sudo` commands by"
" the `start.sh` script."
msgstr ""

#: ../../using/common.md:108 dc62df7b1915495ca022632782fede06
msgid ""
"The `jovyan` user has full read/write access to the `/opt/conda` "
"directory. You can use either `conda`, `mamba` or `pip` to install new "
"packages without any additional permissions."
msgstr ""

#: ../../using/common.md:117 32d617fff915487eb76118fed4336394
msgid "Using alternative channels"
msgstr ""

#: ../../using/common.md:119 88d1f8f16010481782af02ccf8370dbc
msgid ""
"Conda is configured by default to use only the [`conda-"
"forge`](https://anaconda.org/conda-forge) channel. However, alternative "
"channels can be used either one shot by overwriting the default channel "
"in the installation command or by configuring `conda` to use different "
"channels. The examples below show how to use the [anaconda default "
"channels](https://repo.anaconda.com/pkgs/main) instead of `conda-forge` "
"to install packages."
msgstr ""

#: ../../using/recipes.md:1 a5f6bd0634304b528507781cfcfa6c35
msgid "Contributed Recipes"
msgstr ""

#: ../../using/recipes.md:3 46ddbff3917a49a191232e8c17dec5dc
msgid ""
"Users sometimes share interesting ways of using the Jupyter Docker "
"Stacks. We encourage users to [contribute these "
"recipes](../contributing/recipes.md) to the documentation in case they "
"prove useful to other members of the community by submitting a pull "
"request to `docs/using/recipes.md`. The sections below capture this "
"knowledge."
msgstr ""

#: ../../using/recipes.md:8 5bade6a9383746d4a70a9633619c67e0
msgid "Using `sudo` within a container"
msgstr ""

#: ../../using/recipes.md:10 b0d1b20ae07c423f8741cb7bc87218b6
msgid ""
"Password authentication is disabled for the `NB_USER` (e.g., `jovyan`). "
"This choice was made to avoid distributing images with a weak default "
"password that users ~might~ will forget to change before running a "
"container on a publicly accessible host."
msgstr ""

#: ../../using/recipes.md:14 51ab9eaf02674b06a6768ded27946b1b
msgid ""
"You can grant the within-container `NB_USER` passwordless `sudo` access "
"by adding `-e GRANT_SUDO=yes` and `--user root` to your Docker command "
"line or appropriate container orchestrator config."
msgstr ""

# f75300183d66418d958651b713e3c81e
#: ../../using/recipes.md:18 b102331711ba484398e928dea5c6d2aa
msgid "For example:"
msgstr ""

#: ../../using/recipes.md:24 a952971e1cbc4578b071155553be4a04
msgid ""
"**You should only enable `sudo` if you trust the user and/or if the "
"container is running on an isolated host.** See [Docker security "
"documentation](https://docs.docker.com/engine/security/userns-remap/) for"
" more information about running containers as `root`."
msgstr ""

#: ../../using/recipes.md:27 80baf8c8f7f44552ae1d0fc72b245917
msgid "Using `pip install` or `conda install` in a Child Docker image"
msgstr ""

# cfb1a65ed1a4453e8b3355f1c0c23b1c
#: ../../using/recipes.md:29 2d3115b9ccf34b9bb1ef67e2b81cb1f5
msgid "Create a new Dockerfile like the one shown below."
msgstr ""

# 3ab615dc6fb6425d954cae4ce14f08b9
#: ../../using/recipes.md:38 ca3aa5f540144e788c2e46c972a05c1d
msgid "Then build a new image."
msgstr ""

#: ../../using/recipes.md:44 0b5fe9389fa84760b140119eb5e13a82
msgid ""
"To use a requirements.txt file, first create your `requirements.txt` file"
" with the listing of packages desired. Next, create a new Dockerfile like"
" the one shown below."
msgstr ""

# f2f035925d764425b9999b19d36c1d30
#: ../../using/recipes.md:57 0fd40cdc901747788a305c7fbfa1a420
msgid "For conda, the Dockerfile is similar:"
msgstr ""

#: ../../using/recipes.md:69 af6d6961aec2446c81fcf939f0731885
msgid ""
"Ref: [docker-"
"stacks/commit/79169618d571506304934a7b29039085e77db78c](https://github.com/jupyter"
"/docker-"
"stacks/commit/79169618d571506304934a7b29039085e77db78c#commitcomment-15960081)"
msgstr ""

#: ../../using/recipes.md:71 90cf1a4584de42cca13e1e2912216242
msgid "Add a Python 2.x environment"
msgstr ""

#: ../../using/recipes.md:73 4f49ef506278450ba1075b1b87a2f0ea
msgid ""
"Python 2.x was removed from all images on August 10th, 2017, starting in "
"tag `cc9feab481f7`. You can add a Python 2.x environment by defining your"
" own Dockerfile inheriting from one of the images like so:"
msgstr ""

#: ../../using/recipes.md:97 3bec58599365492193bd3a4d0158c418
msgid "Ref: <https://github.com/jupyter/docker-stacks/issues/440>"
msgstr ""

#: ../../using/recipes.md:99 06aec3c8bc2740299a21f0ebe52732f7
msgid "Add a Python 3.x environment"
msgstr ""

#: ../../using/recipes.md:101 8e71c61dcf1e420cbe6d93df14615222
msgid ""
"The default version of Python that ships with conda/ubuntu may not be the"
" version you want. To add a conda environment with a different version "
"and make it accessible to Jupyter, the instructions are very similar to "
"Python 2.x but are slightly simpler (no need to switch to `root`):"
msgstr ""

#: ../../using/recipes.md:140 9806ddf45c9e4623aa4a67a346b4b67d
msgid "Run JupyterLab"
msgstr ""

#: ../../using/recipes.md:142 d3cf02f9f6144848b9c962c2c8f2e291
msgid ""
"JupyterLab is preinstalled as a notebook extension starting in tag "
"[c33a7dc0eece](https://github.com/jupyter/docker-stacks/pull/355)."
msgstr ""

#: ../../using/recipes.md:145 cf09d65e59c04050b49cce1ccd5a3216
msgid ""
"Run jupyterlab using a command such as `docker run -it --rm -p 8888:8888 "
"-e JUPYTER_ENABLE_LAB=yes jupyter/datascience-notebook`"
msgstr ""

#: ../../using/recipes.md:148 387d687889434017bb1991dd8edc5bf0
msgid "Dask JupyterLab Extension"
msgstr ""

#: ../../using/recipes.md:150 cfc5210bd6b8429898b2fef6e87393fa
msgid ""
"[Dask JupyterLab Extension](https://github.com/dask/dask-labextension) "
"provides a JupyterLab extension to manage Dask clusters, as well as embed"
" Dask's dashboard plots directly into JupyterLab panes. Create the "
"Dockerfile as:"
msgstr ""

#: ../../using/recipes.md:166 986dd63ff558491d980a560a57925c0c
msgid "And build the image as:"
msgstr ""

#: ../../using/recipes.md:172 80e2b83cfc06407089ee6bf6412c8b68
msgid "Once built, run using the command:"
msgstr ""

#: ../../using/recipes.md:178 748b3ab33a884e6cb226009c71a0fda8
msgid "Ref: <https://github.com/jupyter/docker-stacks/issues/999>"
msgstr ""

#: ../../using/recipes.md:180 320218f289e444d3aea886060fd11c50
msgid "Let's Encrypt a Notebook server"
msgstr ""

#: ../../using/recipes.md:182 9c4ef1808e7147bab04f06137ac3165d
msgid ""
"See the README for the simple automation here <https://github.com/jupyter"
"/docker-stacks/tree/master/examples/make-deploy> which includes steps for"
" requesting and renewing a Let's Encrypt certificate."
msgstr ""

#: ../../using/recipes.md:186 a7a182f69e9048c394f12b4982ef92b6
msgid "Ref: <https://github.com/jupyter/docker-stacks/issues/78>"
msgstr ""

#: ../../using/recipes.md:188 f7dd92e5a99f4e5dab923889dae6e156
msgid "Slideshows with Jupyter and RISE"
msgstr ""

#: ../../using/recipes.md:190 1779d3b1836c47c4b5ed1c729936b987
msgid ""
"[RISE](https://github.com/damianavila/RISE) allows via extension to "
"create live slideshows of your notebooks, with no conversion, adding "
"javascript Reveal.js:"
msgstr ""

#: ../../using/recipes.md:198 e10cb224200849798ad49f6bbfb3eb8e
msgid ""
"Credit: [Paolo D.](https://github.com/pdonorio) based on [docker-"
"stacks/issues/43](https://github.com/jupyter/docker-stacks/issues/43)"
msgstr ""

#: ../../using/recipes.md:201 4068cd8eaff747df81b77e5fe68b2511
msgid "xgboost"
msgstr ""

# ce204678c3af4aa9a0fb55bb6de7554b
#: ../../using/recipes.md:203 729ea29b9fba4b7aa116bf6bc4570423
msgid ""
"You need to install conda's gcc for Python xgboost to work properly. "
"Otherwise, you'll get an exception about libgomp.so.1 missing GOMP_4.0."
msgstr ""

#: ../../using/recipes.md:214 3d1d56a7f2b94650b55242fb285a090f
msgid "Running behind a nginx proxy"
msgstr ""

# ca7763a5a35a47bd9fb29ae9d00feab3
#: ../../using/recipes.md:216 0512fc30bec845899a1fe1e146a023e2
msgid ""
"Sometimes it is useful to run the Jupyter instance behind a nginx proxy, "
"for instance:"
msgstr ""

#: ../../using/recipes.md:218 0b644cf075d0445289071ba4b5de9c4a
msgid ""
"you would prefer to access the notebook at a server URL with a path "
"(`https://example.com/jupyter`) rather than a port "
"(`https://example.com:8888`)"
msgstr ""

# a5129fb6e2b042f5b8161ed5318123f9
#: ../../using/recipes.md:220 e56e81e8cce04ff08c73b11da9411bf4
msgid ""
"you may have many different services in addition to Jupyter running on "
"the same server, and want to nginx to help improve server performance in "
"manage the connections"
msgstr ""

#: ../../using/recipes.md:223 c8f7651493104fac964ca43975269490
msgid ""
"Here is a [quick example NGINX "
"configuration](https://gist.github.com/cboettig/8643341bd3c93b62b5c2) to "
"get started. You'll need a server, a `.crt` and `.key` file for your "
"server, and `docker` & `docker-compose` installed. Then just download the"
" files at that gist and run `docker-compose up -d` to test it out. "
"Customize the `nginx.conf` file to set the desired paths and add other "
"services."
msgstr ""

#: ../../using/recipes.md:228 d64583167fdb483e8ae498c156a5dd10
msgid "Host volume mounts and notebook errors"
msgstr ""

#: ../../using/recipes.md:230 541a0b407a6f45a8b5d9286bba1f2ad0
msgid ""
"If you are mounting a host directory as `/home/jovyan/work` in your "
"container and you receive permission errors or connection errors when you"
" create a notebook, be sure that the `jovyan` user (UID=1000 by default) "
"has read/write access to the directory on the host. Alternatively, "
"specify the UID of the `jovyan` user on container startup using the `-e "
"NB_UID` option described in the [Common Features, Docker Options "
"section](../using/common.html#Docker-Options)"
msgstr ""

#: ../../using/recipes.md:236 1caa434cac584684861be3081c0fb528
msgid "Ref: <https://github.com/jupyter/docker-stacks/issues/199>"
msgstr ""

#: ../../using/recipes.md:238 0d90b53d79e64860acb7e50c92668fd3
msgid "Manpage installation"
msgstr ""

# 7fc6566074ee4ba3a4e579437d7f151d
#: ../../using/recipes.md:240 a1334c273e77432fb4b6c2004b0b979f
msgid ""
"Most containers, including our Ubuntu base image, ship without manpages "
"installed to save space. You can use the following dockerfile to inherit "
"from one of our images to enable manpages:"
msgstr ""

#: ../../using/recipes.md:259 015168f1f9814c4b9f827c42e763d8d7
msgid ""
"Adding the documentation on top of an existing singleuser image wastes a "
"lot of space and requires reinstalling every system package, which can "
"take additional time and bandwidth; the `datascience-notebook` image has "
"been shown to grow by almost 3GB when adding manapages in this way. "
"Enabling manpages in the base Ubuntu layer prevents this container bloat."
" Just use previous `Dockerfile` with original ubuntu image as your base "
"container:"
msgstr ""

#: ../../using/recipes.md:271 546424ef8ca0466e939c046ac087f9b1
msgid ""
"For Ubuntu 18.04 (bionic) and earlier, you may also require to workaround"
" for a mandb bug, which was fixed in mandb >= 2.8.6.1:"
msgstr ""

#: ../../using/recipes.md:282 3af3544b99d84f62ada87f1f09c2f2c0
msgid ""
"Be sure to check the current base image in `base-notebook` before "
"building."
msgstr ""

#: ../../using/recipes.md:284 6bcf6ddff8b84ee2a72d1c603acf4215
msgid "JupyterHub"
msgstr ""

# af0ca920391b419b805ae3809388fcf2
#: ../../using/recipes.md:286 3618124e5f9f40d3a3da47497189b38c
msgid "We also have contributed recipes for using JupyterHub."
msgstr ""

#: ../../using/recipes.md:288 9463d1e639234939acc2749169a6dbd0
msgid "Use JupyterHub's dockerspawner"
msgstr ""

# 81e1dbb4c1c34f4c9e88630adff3d1e9
#: ../../using/recipes.md:290 962f0f8c4b9b4c099bafe902c50136c7
msgid ""
"In most cases for use with DockerSpawner, given any image that already "
"has a notebook stack set up, you would only need to add:"
msgstr ""

# 837b7a2dac01402e8cd2cc398bd5d785
#: ../../using/recipes.md:293 b01c184f1195459c9dfd3b3b1feac638
msgid "install the jupyterhub-singleuser script (for the right Python)"
msgstr ""

# d9816cb5ae2041e2a5fde9cdfb91262f
#: ../../using/recipes.md:294 e61092a13c434fd18f2753e5f1e0e629
msgid "change the command to launch the single-user server"
msgstr ""

#: ../../using/recipes.md:296 c295a0d3d8224367a29baf5521f340ff
msgid ""
"Swapping out the `FROM` line in the `jupyterhub/singleuser` Dockerfile "
"should be enough for most cases."
msgstr ""

#: ../../using/recipes.md:299 cc64d9c982e744399516d64d57a53322
msgid ""
"Credit: [Justin Tyberg](https://github.com/jtyberg), "
"[quanghoc](https://github.com/quanghoc), and [Min "
"RK](https://github.com/minrk) based on [docker-"
"stacks/issues/124](https://github.com/jupyter/docker-stacks/issues/124) "
"and [docker-stacks/pull/185](https://github.com/jupyter/docker-"
"stacks/pull/185)"
msgstr ""

#: ../../using/recipes.md:304 a2b5651071fd40a8a374846cd3a08e64
msgid "Containers with a specific version of JupyterHub"
msgstr ""

#: ../../using/recipes.md:306 367a3a9f352043abb0a698a34eae8fdf
msgid ""
"To use a specific version of JupyterHub, the version of `jupyterhub` in "
"your image should match the version in the Hub itself."
msgstr ""

#: ../../using/recipes.md:314 2b9c7c64eacb4556bbd5437771180f7c
msgid ""
"Credit: [MinRK](https://github.com/jupyter/docker-"
"stacks/issues/423#issuecomment-322767742)"
msgstr ""

#: ../../using/recipes.md:316 da3a88e732694f5887ef94cdf8aab118
msgid "Ref: <https://github.com/jupyter/docker-stacks/issues/177>"
msgstr ""

#: ../../using/recipes.md:318 ef56764d0dda4586ae3a612c2d25498d
msgid "Spark"
msgstr ""

# 975c96d6a0b843dfabd889c753671c93
#: ../../using/recipes.md:320 9ccdbf66c12f4e15bb938d65ac257a60
msgid "A few suggestions have been made regarding using Docker Stacks with spark."
msgstr ""

#: ../../using/recipes.md:322 6e0d15bf38b4400e9a10d7ad65b6387a
msgid "Using PySpark with AWS S3"
msgstr ""

# dc4059d42eaa495f8ebca84ebc91ac09
#: ../../using/recipes.md:324 c1b49058a9e14a0ea6c44b1f4fcf6671
msgid "Using Spark session for hadoop 2.7.3"
msgstr ""

# d2c12e3525bf4d9ca518fef02c4a79d3
#: ../../using/recipes.md:344 ed4b608cd6554a8c9bb8362657fe6f48
msgid "Using Spark context for hadoop 2.6.0"
msgstr ""

#: ../../using/recipes.md:366 358ac76b4ae24635baf94f0a9993cbff
msgid "Ref: <https://github.com/jupyter/docker-stacks/issues/127>"
msgstr ""

#: ../../using/recipes.md:368 b162cc45b0a44391b905dbabe6c6f199
msgid "Using Local Spark JARs"
msgstr ""

#: ../../using/recipes.md:384 652ce9fc5f7f4c50a7ab07f53dfa5d38
msgid "Ref: <https://github.com/jupyter/docker-stacks/issues/154>"
msgstr ""

#: ../../using/recipes.md:386 82003e03f52f497ca45fbcc9b01cb4d1
msgid "Using spark-packages.org"
msgstr ""

#: ../../using/recipes.md:388 3e59b71b676c4746853a3fb9f16124f9
msgid ""
"If you'd like to use packages from [spark-packages.org](https://spark-"
"packages.org/), see "
"[https://gist.github.com/parente/c95fdaba5a9a066efaab](https://gist.github.com/parente/c95fdaba5a9a066efaab)"
" for an example of how to specify the package identifier in the "
"environment before creating a SparkContext."
msgstr ""

#: ../../using/recipes.md:393 c983032ff57f484aa5c71a0c03e21050
msgid "Ref: <https://github.com/jupyter/docker-stacks/issues/43>"
msgstr ""

#: ../../using/recipes.md:395 8a2e0bc3e31c4aa0b7630faf221a4847
msgid "Use jupyter/all-spark-notebooks with an existing Spark/YARN cluster"
msgstr ""

#: ../../using/recipes.md:457 82e98bd64a114ad3a78aa169ebb1242e
msgid ""
"Credit: [britishbadger](https://github.com/britishbadger) from [docker-"
"stacks/issues/369](https://github.com/jupyter/docker-stacks/issues/369)"
msgstr ""

#: ../../using/recipes.md:460 84b5bab5908041e39a3b59929d8d1e6b
msgid ""
"Run Jupyter Notebook/Lab inside an already secured environment (i.e., "
"with no token)"
msgstr ""

#: ../../using/recipes.md:462 4372ad140d7245d19ec3e9bdd9a16ed6
msgid ""
"(Adapted from [issue 728](https://github.com/jupyter/docker-"
"stacks/issues/728))"
msgstr ""

#: ../../using/recipes.md:464 312a6c4526464f8dbe7a1ed1f66640d6
msgid ""
"The default security is very good. There are use cases, encouraged by "
"containers, where the jupyter container and the system it runs within, "
"lie inside the security boundary. In these use cases it is convenient to "
"launch the server without a password or token. In this case, you should "
"use the `start.sh` script to launch the server with no token:"
msgstr ""

# 7476a6d5eae74ecaae966e56390c096e
#: ../../using/recipes.md:469 ea5b8ac720a84c29a6e4c9a163c50174
msgid "For jupyterlab:"
msgstr ""

# f2efc5a0ba6b4c53b2047cc5f22bdbaa
#: ../../using/recipes.md:475 8c96b38eb12c4093b0fbad8f0ba0828b
msgid "For jupyter classic:"
msgstr ""

#: ../../using/recipes.md:481 44c833c65e9548719f3b3536b69d0c6b
msgid "Enable nbextension spellchecker for markdown (or any other nbextension)"
msgstr ""

# 8ccfbcb4264f48d0b6709fe81aa0a86d
#: ../../using/recipes.md:483 c70c2e50d754473bafebccf237e9d007
msgid "NB: this works for classic notebooks only"
msgstr ""

#: ../../using/recipes.md:497 d2ce79120ae149aeb373d35ddd81f56c
msgid "Ref: <https://github.com/jupyter/docker-stacks/issues/675>"
msgstr ""

#: ../../using/recipes.md:499 1908a55eef6d43e783651de6693e308b
msgid "Enable auto-sklearn notebooks"
msgstr ""

#: ../../using/recipes.md:501 df0a96ae1d1b4dc4aeda55a823521500
msgid ""
"Using `auto-sklearn` requires `swig`, which the other notebook images "
"lack, so it cant be experimented with. Also, there is no Conda package "
"for `auto-sklearn`."
msgstr ""

#: ../../using/recipes.md:519 840376ff9863459a9d7ce43275ea3afd
msgid "Enable Delta Lake in Spark notebooks"
msgstr ""

#: ../../using/recipes.md:521 7ae1f325beee4f8a984669db8b89d2fa
msgid ""
"Please note that the [Delta Lake](https://delta.io/) packages are only "
"available for Spark version > `3.0`. By adding the properties to `spark-"
"defaults.conf`, the user no longer needs to enable Delta support in each "
"notebook."
msgstr ""

#: ../../using/running.md:1 63be58b2925e43568e4cd987737590fb
msgid "Running a Container"
msgstr ""

# 1f345e7a53e94439b936b3f4bbc877da
# 324906e630c646b0ae10bbff6ed587fa
#: ../../using/running.md:3 ../../using/selecting.md:7
#: 22bdf9ca42e747e6b1272d125af27e39 3d8eb3f32b2549d7940827b40572340f
msgid "Using one of the Jupyter Docker Stacks requires two choices:"
msgstr ""

# 781cbaffaea24fb08451cc83327cfa9b
# 1c6c83776a3b4a27a8ed4128a0dceeb7
#: ../../using/running.md:5 ../../using/selecting.md:9
#: 82ab4cad9c77463c9c4d52c387854b67 95e3996fe07a4da0b2575f2f4457847f
msgid "Which Docker image you wish to use"
msgstr ""

# 632f67c9207e4ed9ba01bf59c4d942f7
# ab191cfc95204429b7c0271ecdf69d33
#: ../../using/running.md:6 ../../using/selecting.md:10
#: 39a88959f44441cc8971d197da9929ef 8af85806465d4f1a81239df8da06273a
msgid "How you wish to start Docker containers from that image"
msgstr ""

# ebf870aa1ede4e2ab8fdcb2cef0fd610
#: ../../using/running.md:8 6c33a5bf902440ec8fe105f41376a83d
msgid "This section provides details about the second."
msgstr ""

#: ../../using/running.md:10 1965837d9fd645209d7de5e3eaa70f9e
msgid "Using the Docker CLI"
msgstr ""

#: ../../using/running.md:12 805dce8d006049d29978dbd45a3d7941
msgid ""
"You can launch a local Docker container from the Jupyter Docker Stacks "
"using the [Docker command line "
"interface](https://docs.docker.com/engine/reference/commandline/cli/). "
"There are numerous ways to configure containers using the CLI. The "
"following are some common patterns."
msgstr ""

#: ../../using/running.md:14 1fdfb59e24b14eda8d05c73cd59c3247
msgid ""
"**Example 1** This command pulls the `jupyter/scipy-notebook` image "
"tagged `33add21fab64` from Docker Hub if it is not already present on the"
" local host. It then starts a container running a Jupyter Notebook server"
" and exposes the server on host port 8888. The server logs appear in the "
"terminal and include a URL to the notebook server."
msgstr ""

#: ../../using/running.md:36 be2f357c3f294c82888f9a3083b28c07
msgid ""
"Pressing `Ctrl-C` shuts down the notebook server but leaves the container"
" intact on disk for later restart or permanent deletion using commands "
"like the following:"
msgstr ""

#: ../../using/running.md:55 14b75c9d1bf94390b7387f18c0504494
msgid ""
"**Example 2** This command pulls the `jupyter/r-notebook` image tagged "
"`33add21fab64` from Docker Hub if it is not already present on the local "
"host. It then starts a container running a Jupyter Notebook server and "
"exposes the server on host port 10000. The server logs appear in the "
"terminal and include a URL to the notebook server, but with the internal "
"container port (8888) instead of the the correct host port (10000)."
msgstr ""

#: ../../using/running.md:77 9b786cbb58294e55a0ef3a92a304ed0f
msgid ""
"Pressing `Ctrl-C` shuts down the notebook server and immediately destroys"
" the Docker container. Files written to `~/work` in the container remain "
"touched. Any other changes made in the container are lost."
msgstr ""

#: ../../using/running.md:79 6b272082f3c148db92dde5b0ed3ee33f
msgid ""
"**Example 3** This command pulls the `jupyter/all-spark-notebook` image "
"currently tagged `latest` from Docker Hub if an image tagged `latest` is "
"not already present on the local host. It then starts a container named "
"`notebook` running a JupyterLab server and exposes the server on a "
"randomly selected port."
msgstr ""

# 9a561b9bb5944059801c71862521d66a
#: ../../using/running.md:85 2eb935f0b9fb42ee965f3dfbe4664974
msgid ""
"The assigned port and notebook server token are visible using other "
"Docker commands."
msgstr ""

#: ../../using/running.md:99 5803243ab6f74d27b3a8ba80d837df2b
msgid ""
"Together, the URL to visit on the host machine to access the server in "
"this case is "
"<http://localhost:32769?token=15914ca95f495075c0aa7d0e060f1a78b6d94f70ea373b00>."
msgstr ""

# bf82931e197b40ad940d9969993120a2
#: ../../using/running.md:101 21e24aa18f304554977832d81c0785ee
msgid ""
"The container runs in the background until stopped and/or removed by "
"additional Docker commands."
msgstr ""

#: ../../using/running.md:113 eb3e8d49884245fd8fffbde5d06323b7
msgid "Using Binder"
msgstr ""

#: ../../using/running.md:115 76bde274a2064baa8f1d5c4beb1ee21d
msgid ""
"[Binder](https://mybinder.org/) is a service that allows you to create "
"and share custom computing environments for projects in version control. "
"You can use any of the Jupyter Docker Stacks images as a basis for a "
"Binder-compatible Dockerfile. See the [docker-stacks "
"example](https://mybinder.readthedocs.io/en/latest/sample_repos.html#using-a"
"-docker-image-from-the-jupyter-docker-stacks-repository) and [Using a "
"Dockerfile](https://mybinder.readthedocs.io/en/latest/tutorials/dockerfile.html)"
" sections in the [Binder "
"documentation](https://mybinder.readthedocs.io/en/latest/index.html) for "
"instructions."
msgstr ""

#: ../../using/running.md:117 b6228201dd27425482f8b76fda225a36
msgid "Using JupyterHub"
msgstr ""

#: ../../using/running.md:119 322b0ab0462046978858b8f382edebce
msgid ""
"You can configure JupyterHub to launcher Docker containers from the "
"Jupyter Docker Stacks images. If you've been following the [Zero to "
"JupyterHub with Kubernetes](https://zero-to-"
"jupyterhub.readthedocs.io/en/latest/) guide, see the [Use an existing "
"Docker image](https://zero-to-"
"jupyterhub.readthedocs.io/en/latest/jupyterhub/customizing/user-"
"environment.html#choose-and-use-an-existing-docker-image) section for "
"details. If you have a custom JupyterHub deployment, see the [Picking or "
"building a Docker image](https://github.com/jupyterhub/dockerspawner"
"#picking-or-building-a-docker-image) instructions for the "
"[dockerspawner](https://github.com/jupyterhub/dockerspawner) instead."
msgstr ""

#: ../../using/running.md:121 0a6b783263f04e2ba4f993114edf499e
msgid "Using Other Tools and Services"
msgstr ""

#: ../../using/running.md:123 6c0e9fd9636f44319207da6aa28608ea
msgid ""
"You can use the Jupyter Docker Stacks with any Docker-compatible "
"technology (e.g., [Docker Compose](https://docs.docker.com/compose/), "
"[docker-py](https://github.com/docker/docker-py), your favorite cloud "
"container service). See the documentation of the tool, library, or "
"service for details about how to reference, configure, and launch "
"containers from these images."
msgstr ""

#: ../../using/selecting.md:1 4ea78a05e1a74facaa8ada4f97ddd86c
msgid "Selecting an Image"
msgstr ""

#: ../../using/selecting.md:3 fb537b0b4965401c83a633d91cda30fc
msgid "[Core Stacks](#core-stacks)"
msgstr ""

#: ../../using/selecting.md:4 62eba5b26e294e56bf2d8c5d5ed70b81
msgid "[Image Relationships](#image-relationships)"
msgstr ""

#: ../../using/selecting.md:5 9084fc4ad10d4f34b71ee26ce77a8642
msgid "[Community Stacks](#community-stacks)"
msgstr ""

# af7e19bb10ec44348e8121be4129ce8a
#: ../../using/selecting.md:12 f04d84a21f7f4d92bc5b539700d83cd6
msgid "This section provides details about the first."
msgstr ""

#: ../../using/selecting.md:14 3b99e2dec072433f9e24d3aa288ce4f7
msgid "Core Stacks"
msgstr ""

#: ../../using/selecting.md:16 ae61ca8e69dd47ba8c650766822b9665
msgid ""
"The Jupyter team maintains a set of Docker image definitions in the "
"<https://github.com/jupyter/docker-stacks> GitHub repository. The "
"following sections describe these images including their contents, "
"relationships, and versioning strategy."
msgstr ""

#: ../../using/selecting.md:21 ce04b4f669884321a1cd8322bce4d089
msgid "jupyter/base-notebook"
msgstr ""

#: ../../using/selecting.md:23 78a1c1a3c2a8442bbf25f83871364709
msgid ""
"[Source on GitHub](https://github.com/jupyter/docker-stacks/tree/master"
"/base-notebook) | [Dockerfile commit history](https://github.com/jupyter"
"/docker-stacks/commits/master/base-notebook/Dockerfile) | [Docker Hub "
"image tags](https://hub.docker.com/r/jupyter/base-notebook/tags/)"
msgstr ""

#: ../../using/selecting.md:27 5d713e2065854f80b3ba13cd9cfb7d35
msgid ""
"`jupyter/base-notebook` is a small image supporting the [options common "
"across all core stacks](common.md). It is the basis for all other stacks."
msgstr ""

#: ../../using/selecting.md:30 d76aa1bcfbc24fc28e58a37399bdf1f4
msgid ""
"Minimally-functional Jupyter Notebook server (e.g., no LaTeX support for "
"saving notebooks as PDFs)"
msgstr ""

#: ../../using/selecting.md:31 a072ce5e14b44e508d0a1cbf5832f9d6
msgid ""
"[Miniforge](https://github.com/conda-forge/miniforge) Python 3.x in "
"`/opt/conda` with two package managers"
msgstr ""

#: ../../using/selecting.md:32 18f734d011224c00940f224a78f77833
msgid ""
"[conda](https://github.com/conda/conda): \"cross-platform, language-"
"agnostic binary package manager\"."
msgstr ""

#: ../../using/selecting.md:33 d09da753a8314b33aa4d90ad3be045a8
msgid ""
"[mamba](https://github.com/mamba-org/mamba): \"reimplementation of the "
"conda package manager in C++\"."
msgstr ""

# c5732a5536554f91b8dd7e8946beaab8
#: ../../using/selecting.md:34 cf8420351c8644f39f043e51960d252f
msgid "No preinstalled scientific computing packages"
msgstr ""

#: ../../using/selecting.md:35 c6f0fb7f265e4b4cb20451f7ad4bacdf
msgid ""
"Unprivileged user `jovyan` (`uid=1000`, configurable, see options) in "
"group `users` (`gid=100`) with ownership over the `/home/jovyan` and "
"`/opt/conda` paths"
msgstr ""

#: ../../using/selecting.md:37 93d6b7099efd4f1f8c821247ec97337a
msgid ""
"`tini` as the container entrypoint and a `start-notebook.sh` script as "
"the default command"
msgstr ""

#: ../../using/selecting.md:38 2a138355ef18449887dcc809de9a5d7c
msgid ""
"A `start-singleuser.sh` script useful for launching containers in "
"JupyterHub"
msgstr ""

#: ../../using/selecting.md:39 15efebebc3ba42c288797cca6a3a7378
msgid ""
"A `start.sh` script useful for running alternative commands in the "
"container (e.g. `ipython`, `jupyter kernelgateway`, `jupyter lab`)"
msgstr ""

# 075e6ffe0f5b4d508d555992f5dd6fe1
#: ../../using/selecting.md:41 7e120210635340eeac6c01412dd6661f
msgid "Options for a self-signed HTTPS certificate and passwordless sudo"
msgstr ""

#: ../../using/selecting.md:43 057e8372b6e649b7aee38f0cae5c73d3
msgid "jupyter/minimal-notebook"
msgstr ""

#: ../../using/selecting.md:45 7c00ec2a2cbf4edca93e6bd60d2ddce0
msgid ""
"[Source on GitHub](https://github.com/jupyter/docker-stacks/tree/master"
"/minimal-notebook) | [Dockerfile commit "
"history](https://github.com/jupyter/docker-stacks/commits/master/minimal-"
"notebook/Dockerfile) | [Docker Hub image "
"tags](https://hub.docker.com/r/jupyter/minimal-notebook/tags/)"
msgstr ""

#: ../../using/selecting.md:49 1ce5caea2f2d44ae814d288f0cebd9ad
msgid ""
"`jupyter/minimal-notebook` adds command line tools useful when working in"
" Jupyter applications."
msgstr ""

#: ../../using/selecting.md:51 6fec3e3f6e95484e933bfc8678a2adda
msgid "Everything in `jupyter/base-notebook`"
msgstr ""

#: ../../using/selecting.md:52 2fb51217cec2417ebeeeeee6af98f03c
msgid "[TeX Live](https://www.tug.org/texlive/) for notebook document conversion"
msgstr ""

#: ../../using/selecting.md:53 dc06ef6b33634472b05ea024808846f5
msgid ""
"[git](https://git-scm.com/), [vi](https://www.vim.org) (actually `vim-"
"tiny`), [nano](https://www.nano-editor.org/) (actually `nano-tiny`), "
"tzdata, and unzip"
msgstr ""

#: ../../using/selecting.md:57 7b80842d22184daabada1a835575366b
msgid "jupyter/r-notebook"
msgstr ""

#: ../../using/selecting.md:59 bfb897ab937444469b24c2d132bbeff6
msgid ""
"[Source on GitHub](https://github.com/jupyter/docker-"
"stacks/tree/master/r-notebook) | [Dockerfile commit "
"history](https://github.com/jupyter/docker-"
"stacks/commits/master/r-notebook/Dockerfile) | [Docker Hub image "
"tags](https://hub.docker.com/r/jupyter/r-notebook/tags/)"
msgstr ""

#: ../../using/selecting.md:63 63e64a92c218461688a08e16f7dc123f
msgid "`jupyter/r-notebook` includes popular packages from the R ecosystem."
msgstr ""

#: ../../using/selecting.md:65 ../../using/selecting.md:88
#: 9531ebb219164562bbfa59ef07b4cb67 b7a7b656c48d483ebc6b535b099c0d41
msgid "Everything in `jupyter/minimal-notebook` and its ancestor images"
msgstr ""

#: ../../using/selecting.md:66 6d2ebae34bfa4bc78930480e39d6393a
msgid "The [R](https://www.r-project.org/) interpreter and base environment"
msgstr ""

#: ../../using/selecting.md:67 ../../using/selecting.md:157
#: 9215021a7e824157a5f0e0c5f5031e37 9df8ddaa2be04c92af2ae2a706cc60f1
msgid ""
"[IRKernel](https://irkernel.github.io/) to support R code in Jupyter "
"notebooks"
msgstr ""

#: ../../using/selecting.md:68 559ff8c904cd4117b65968650cb55a9d
msgid ""
"[tidyverse](https://www.tidyverse.org/) packages from [conda-forge](https"
"://conda-forge.org/feedstock-outputs/index.html)"
msgstr ""

#: ../../using/selecting.md:70 bf055a2439154f8b90870a184cb640e3
msgid ""
"[devtools](https://cran.r-project.org/web/packages/devtools/index.html), "
"[shiny](https://shiny.rstudio.com/), "
"[rmarkdown](https://rmarkdown.rstudio.com), "
"[forecast](https://cran.r-project.org/web/packages/forecast/forecast.pdf),"
" [rsqlite](https://cran.r-project.org/web/packages/RSQLite/index.html), "
"[nycflights13](https://cran.r-project.org/web/packages/nycflights13/index.html),"
" [caret](https://topepo.github.io/caret/index.html), "
"[tidymodels](https://www.tidymodels.org/), "
"[rcurl](https://cran.r-project.org/web/packages/RCurl/index.html), and "
"[randomforest](https://cran.r-project.org/web/packages/randomForest/randomForest.pdf)"
" packages from [conda-forge](https://conda-forge.org/feedstock-"
"outputs/index.html)"
msgstr ""

#: ../../using/selecting.md:80 3a8c2ac351d04f4ab821ed121248ee50
msgid "jupyter/scipy-notebook"
msgstr ""

#: ../../using/selecting.md:82 3749201aa0da41ffb1e2114540f37758
msgid ""
"[Source on GitHub](https://github.com/jupyter/docker-stacks/tree/master"
"/scipy-notebook) | [Dockerfile commit history](https://github.com/jupyter"
"/docker-stacks/commits/master/scipy-notebook/Dockerfile) | [Docker Hub "
"image tags](https://hub.docker.com/r/jupyter/scipy-notebook/tags/)"
msgstr ""

#: ../../using/selecting.md:86 368b8ac2438c46d18009e5be2179923f
msgid ""
"`jupyter/scipy-notebook` includes popular packages from the scientific "
"Python ecosystem."
msgstr ""

#: ../../using/selecting.md:89 c9a070515d7b44a7b903bbd6223c8be0
msgid ""
"[dask](https://dask.org/), [pandas](https://pandas.pydata.org/), "
"[numexpr](https://github.com/pydata/numexpr), "
"[matplotlib](https://matplotlib.org/), [scipy](https://www.scipy.org/), "
"[seaborn](https://seaborn.pydata.org/), [scikit-learn](https://scikit-"
"learn.org/stable/), [scikit-image](https://scikit-image.org), "
"[sympy](https://www.sympy.org/en/index.html), "
"[cython](https://cython.org), "
"[patsy](https://patsy.readthedocs.io/en/latest/), "
"[statsmodel](https://www.statsmodels.org/stable/index.html), "
"[cloudpickle](https://github.com/cloudpipe/cloudpickle), "
"[dill](https://pypi.org/project/dill/), "
"[numba](https://numba.pydata.org/), "
"[bokeh](https://docs.bokeh.org/en/latest/), "
"[sqlalchemy](https://www.sqlalchemy.org/), [hdf5](https://www.h5py.org), "
"[vincent](https://vincent.readthedocs.io/en/latest/), "
"[beautifulsoup](https://www.crummy.com/software/BeautifulSoup/), "
"[protobuf](https://developers.google.com/protocol-"
"buffers/docs/pythontutorial), [xlrd](https://www.python-excel.org), "
"[bottleneck](https://bottleneck.readthedocs.io/en/latest/), and "
"[pytables](https://www.pytables.org/) packages"
msgstr ""

#: ../../using/selecting.md:104 971de3ce804c40db90a2af363ae7e0df
msgid ""
"[ipywidgets](https://ipywidgets.readthedocs.io/en/stable/) and "
"[ipympl](https://github.com/matplotlib/ipympl) for interactive "
"visualizations and plots in Python notebooks"
msgstr ""

#: ../../using/selecting.md:107 48b9541dc67c4d5cb4b68b274fe565a2
msgid ""
"[Facets](https://github.com/PAIR-code/facets) for visualizing machine "
"learning datasets"
msgstr ""

#: ../../using/selecting.md:109 d105dd2d78954e778f6d34535e04743b
msgid "jupyter/tensorflow-notebook"
msgstr ""

#: ../../using/selecting.md:111 c888e3a8e73e43d69869bb79292959fb
msgid ""
"[Source on GitHub](https://github.com/jupyter/docker-stacks/tree/master"
"/tensorflow-notebook) | [Dockerfile commit "
"history](https://github.com/jupyter/docker-stacks/commits/master"
"/tensorflow-notebook/Dockerfile) | [Docker Hub image "
"tags](https://hub.docker.com/r/jupyter/tensorflow-notebook/tags/)"
msgstr ""

#: ../../using/selecting.md:115 8056aa465968492aa1671a4ade131f40
msgid ""
"`jupyter/tensorflow-notebook` includes popular Python deep learning "
"libraries."
msgstr ""

#: ../../using/selecting.md:117 ../../using/selecting.md:145
#: 49a6b3ebf71147e7bd477da8c74d7127 e8419ba5ce834f5eb211a4c270d68428
msgid "Everything in `jupyter/scipy-notebook` and its ancestor images"
msgstr ""

#: ../../using/selecting.md:118 1ae52324ebaf472e9b7940afdf825ddf
msgid ""
"[tensorflow](https://www.tensorflow.org/) and [keras](https://keras.io/) "
"machine learning libraries"
msgstr ""

#: ../../using/selecting.md:121 a7cf784d01f54bd19223c030e8e45c3c
msgid "jupyter/datascience-notebook"
msgstr ""

#: ../../using/selecting.md:123 7b655ac3f74b4544b44c752e83ee6130
msgid ""
"[Source on GitHub](https://github.com/jupyter/docker-stacks/tree/master"
"/datascience-notebook) | [Dockerfile commit "
"history](https://github.com/jupyter/docker-stacks/commits/master"
"/datascience-notebook/Dockerfile) | [Docker Hub image "
"tags](https://hub.docker.com/r/jupyter/datascience-notebook/tags/)"
msgstr ""

#: ../../using/selecting.md:127 b68dc2948a09496c8dbd216ed97a7ada
msgid ""
"`jupyter/datascience-notebook` includes libraries for data analysis from "
"the Julia, Python, and R communities."
msgstr ""

#: ../../using/selecting.md:130 8d2ac9cd35d842ca93072972fe7381b4
msgid ""
"Everything in the `jupyter/scipy-notebook` and `jupyter/r-notebook` "
"images, and their ancestor images"
msgstr ""

#: ../../using/selecting.md:132 dccf322a96af4e378cfc9e392e5e7901
msgid "The [Julia](https://julialang.org/) compiler and base environment"
msgstr ""

#: ../../using/selecting.md:133 b19bd84a8a0b4d17a867775be019415a
msgid ""
"[IJulia](https://github.com/JuliaLang/IJulia.jl) to support Julia code in"
" Jupyter notebooks"
msgstr ""

#: ../../using/selecting.md:134 b19b8408beed4c10a46c7ee1e19fc782
msgid ""
"[HDF5](https://github.com/JuliaIO/HDF5.jl), "
"[Gadfly](https://gadflyjl.org/stable/), and "
"[RDatasets](https://github.com/JuliaStats/RDatasets.jl) packages"
msgstr ""

#: ../../using/selecting.md:137 0c4bdcd850a144e9844a5dacdafda536
msgid "jupyter/pyspark-notebook"
msgstr ""

#: ../../using/selecting.md:139 0ddca516eb23407290ae7171734ea3f9
msgid ""
"[Source on GitHub](https://github.com/jupyter/docker-stacks/tree/master"
"/pyspark-notebook) | [Dockerfile commit "
"history](https://github.com/jupyter/docker-stacks/commits/master/pyspark-"
"notebook/Dockerfile) | [Docker Hub image "
"tags](https://hub.docker.com/r/jupyter/pyspark-notebook/tags/)"
msgstr ""

#: ../../using/selecting.md:143 52452cc2efc1457aae2502c0fc35c705
msgid "`jupyter/pyspark-notebook` includes Python support for Apache Spark."
msgstr ""

#: ../../using/selecting.md:146 25a093ebdfe643deb55e4685a7c0b5cf
msgid "[Apache Spark](https://spark.apache.org/) with Hadoop binaries"
msgstr ""

#: ../../using/selecting.md:148 164a6ef6ad7442f6999ad88a43e752d5
msgid "jupyter/all-spark-notebook"
msgstr ""

#: ../../using/selecting.md:150 0875c3e92cd4490b9e8d1a97ee604042
msgid ""
"[Source on GitHub](https://github.com/jupyter/docker-stacks/tree/master"
"/all-spark-notebook) | [Dockerfile commit "
"history](https://github.com/jupyter/docker-stacks/commits/master/all-"
"spark-notebook/Dockerfile) | [Docker Hub image "
"tags](https://hub.docker.com/r/jupyter/all-spark-notebook/tags/)"
msgstr ""

#: ../../using/selecting.md:154 9b4e1475ae3947b994d4521ec1ec0be6
msgid ""
"`jupyter/all-spark-notebook` includes Python, R, and Scala support for "
"Apache Spark."
msgstr ""

#: ../../using/selecting.md:156 33f4b1c92b5345e7a929d72202c88dc2
msgid "Everything in `jupyter/pyspark-notebook` and its ancestor images"
msgstr ""

#: ../../using/selecting.md:158 72ed37789dfc45468283c02e50019344
msgid ""
"[Apache Toree](https://toree.apache.org/) and [spylon-"
"kernel](https://github.com/vericast/spylon-kernel) to support Scala code "
"in Jupyter notebooks"
msgstr ""

#: ../../using/selecting.md:161 1a988ba72aa242d8ae06e07faec28bd3
msgid ""
"[ggplot2](https://ggplot2.tidyverse.org), "
"[sparklyr](https://spark.rstudio.com), and "
"[rcurl](https://cran.r-project.org/web/packages/RCurl/index.html) "
"packages"
msgstr ""

#: ../../using/selecting.md:164 b7906dd4939f44928739063601ea3539
msgid "Image Relationships"
msgstr ""

#: ../../using/selecting.md:166 2dc8433ea5f3423c91ffa52edce9f0a6
msgid ""
"The following diagram depicts the build dependency tree of the core "
"images. (i.e., the `FROM` statements in their Dockerfiles). Any given "
"image inherits the complete content of all ancestor images pointing to "
"it."
msgstr ""

#: ../../using/selecting.md:170 5848bc94d4ff4edb91576f8b2e18232f
msgid ""
"[![Image inheritance "
"diagram](../images/inherit.svg)](http://interactive.blockdiag.com/?compression=deflate&src"
"=eJyFzTEPgjAQhuHdX9Gws5sQjGzujsaYKxzmQrlr2msMGv-"
"71K0srO_3XGud9NNA8DSfgzESCFlBSdi0xkvQAKTNugw4QnL6GIU10hvX-"
"Zh7Z24OLLq2SjaxpvP10lX35vCf6pOxELFmUbQiUz4oQhYzMc3gCrRt2cWe_FKosmSjyFHC6OS1AwdQWCtyj7sfh523_BI9hKlQ25YdOFdv5fcH0kiEMA)"
msgstr ""

#: ../../using/selecting.md:173 c5e7315c5bb34d7ab15773f342e7d560
msgid "Builds"
msgstr ""

#: ../../using/selecting.md:175 5e4c752848e24f48b5fd59f024fd12ec
msgid ""
"Pull requests to the `jupyter/docker-stacks` repository trigger builds of"
" all images on GitHub Actions. These images are for testing purposes only"
" and are not saved for use. When pull requests merge to master, all "
"images rebuild on Docker Hub and become available to `docker pull` from "
"Docker Hub."
msgstr ""

#: ../../using/selecting.md:180 1e82ab28b0964cb68f9d50b7eebfa6fd
msgid "Versioning"
msgstr ""

#: ../../using/selecting.md:182 652c6f74a1884f02a16e8ecb10aaae1c
msgid ""
"The `latest` tag in each Docker Hub repository tracks the master branch "
"`HEAD` reference on GitHub. `latest` is a moving target, by definition, "
"and will have backward-incompatible changes regularly."
msgstr ""

#: ../../using/selecting.md:185 928c69d71a384ceb80b69d39991587a6
msgid ""
"Every image on Docker Hub also receives a 12-character tag which "
"corresponds with the git commit SHA that triggered the image build. You "
"can inspect the state of the `jupyter/docker-stacks` repository for that "
"commit to review the definition of the image (e.g., images with tag "
"`33add21fab64` were built from <https://github.com/jupyter/docker-"
"stacks/tree/33add21fab64>."
msgstr ""

#: ../../using/selecting.md:191 03a2b3fc138949969038289418598157
msgid ""
"You must refer to git-SHA image tags when stability and reproducibility "
"are important in your work. (e.g. `FROM jupyter/scipy-"
"notebook:33add21fab64`, `docker run -it --rm jupyter/scipy-"
"notebook:33add21fab64`). You should only use `latest` when a one-off "
"container instance is acceptable (e.g., you want to briefly try a new "
"library in a notebook)."
msgstr ""

#: ../../using/selecting.md:197 5107388039ed42498fce2791f0533e95
msgid "Community Stacks"
msgstr ""

# a448d28293544f72b0e5de024b0a1ef5
#: ../../using/selecting.md:199 c6ef23ae97c04a95abc172b6afc566d5
msgid ""
"The core stacks are just a tiny sample of what's possible when combining "
"Jupyter with other technologies. We encourage members of the Jupyter "
"community to create their own stacks based on the core images and link "
"them below."
msgstr ""

#: ../../using/selecting.md:203 17f0f35a99064efbbde66294ccfc8f64
msgid ""
"[csharp-notebook is a community Jupyter Docker Stack image. Try C# in "
"Jupyter Notebooks](https://github.com/tlinnet/csharp-notebook). The image"
" includes more than 200 Jupyter Notebooks with example C# code and can "
"readily be tried online via mybinder.org. Click here to launch "
"[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/tlinnet"
"/csharp-notebook/master)."
msgstr ""

#: ../../using/selecting.md:208 de24d6c6822746bb86df1ec9c070913b
msgid ""
"[education-notebook is a community Jupyter Docker Stack "
"image](https://github.com/umsi-mads/education-notebook). The image "
"includes nbgrader and RISE on top of the datascience-notebook image. "
"Click here to launch it on "
"[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh"
"/umsi-mads/education-notebook/master)."
msgstr ""

#: ../../using/selecting.md:213 192ffa1b2ea54b65957efd277072b970
msgid "**crosscompass/ihaskell-notebook**"
msgstr ""

#: ../../using/selecting.md:215 ce674a8c0b4c420589d492b3b9605460
msgid ""
"[Source on GitHub](https://github.com/jamesdbrock/ihaskell-notebook) | "
"[Dockerfile commit history](https://github.com/jamesdbrock/ihaskell-"
"notebook/commits/master/Dockerfile) | [Docker Hub image "
"tags](https://hub.docker.com/r/crosscompass/ihaskell-notebook/tags)"
msgstr ""

#: ../../using/selecting.md:219 62d0232dfe6042a5a7542b660058fa4b
msgid ""
"`crosscompass/ihaskell-notebook` is based on "
"[IHaskell](https://github.com/gibiansky/IHaskell). Includes popular "
"packages and example notebooks."
msgstr ""

#: ../../using/selecting.md:222 698011f8726f46c3a057ddee4960bb96
msgid ""
"Try it on "
"[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/jamesdbrock"
"/learn-you-a-haskell-"
"notebook/master?urlpath=lab/tree/ihaskell_examples/ihaskell/IHaskell.ipynb)"
msgstr ""

#: ../../using/selecting.md:225 a41a8bc35c1c4bf3a1e015b157b867d1
msgid ""
"[java-notebook is a community Jupyter Docker Stack "
"image](https://github.com/jbindinga/java-notebook). The image includes "
"[IJava](https://github.com/SpencerPark/IJava) kernel on top of the "
"minimal-notebook image. Click here to launch it on "
"[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/jbindinga"
"/java-notebook/master)."
msgstr ""

#: ../../using/selecting.md:230 f7f10dceb65b48e184e407ebc09538f5
msgid ""
"[sage-notebook](https://github.com/sharpTrick/sage-notebook) is a "
"community Jupyter Docker Stack image with the "
"[sagemath](https://www.sagemath.org) kernel on top of the minimal-"
"notebook image. Click here to launch it on "
"[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/sharpTrick"
"/sage-notebook/master)."
msgstr ""

#: ../../using/selecting.md:235 22e3c9e819a341e7ac8dacdbbbb485fb
msgid ""
"[GPU-Jupyter](https://github.com/iot-salzburg/gpu-jupyter/): Leverage "
"Jupyter Notebooks with the power of your NVIDIA GPU and perform GPU "
"calculations using Tensorflow and Pytorch in collaborative notebooks. "
"This is done by generating a Dockerfile, that consists of the "
"**nvidia/cuda** base image, the well-maintained **docker-stacks** that is"
" integrated as submodule and GPU-able libraries like **Tensorflow**, "
"**Keras** and **PyTorch** on top of it."
msgstr ""

#: ../../using/selecting.md:241 0425803e08e74a719f7dc38ffc574c80
msgid ""
"[PRP GPU Jupyter repo](https://gitlab.nautilus.optiputer.net/prp/jupyter-"
"stack/-/tree/prp) and "
"[Registry](https://gitlab.nautilus.optiputer.net/prp/jupyter-"
"stack/container_registry): PRP (Pacific Research Platform) maintained "
"registry for jupyter stack based on NVIDIA CUDA-enabled image. Added the "
"PRP image with Pytorch and some other python packages, and GUI Desktop "
"notebook based on <https://github.com/jupyterhub/jupyter-remote-desktop-"
"proxy>."
msgstr ""

#: ../../using/selecting.md:243 6ebcd18af3bb454e8eab04206ba62140
msgid ""
"[cgspatial-notebook](https://github.com/SCiO-systems/cgspatial-notebook) "
"is a community Jupyter Docker Stack image. The image includes major "
"geospatial Python & R libraries on top of the datascience-notebook image."
" Try it on "
"binder:[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh"
"/SCiO-systems/cgspatial-notebook/master)"
msgstr ""

#: ../../using/selecting.md:248 44e7c0aeab3d46eeab9b0549756b149e
msgid ""
"[kotlin-notebook](https://github.com/knonm/kotlin-notebook) is a "
"community Jupyter Docker Stack image. The image includes [Kotlin kernel "
"for Jupyter/IPython](https://github.com/Kotlin/kotlin-jupyter) on top of "
"the `base-notebook` image. Try it on Binder: "
"[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/knonm"
"/kotlin-notebook/main)"
msgstr ""

#: ../../using/selecting.md:253 fb522afcd7894d42a0f5b31feccc4a5d
msgid ""
"See the [contributing guide](../contributing/stacks.md) for information "
"about how to create your own Jupyter Docker Stack."
msgstr ""

#: ../../using/specifics.md:1 c2010fb8e960461a8424b64f424054f9
msgid "Image Specifics"
msgstr ""

# 06b0d21a881140a29e17e5b9fa5598ab
#: ../../using/specifics.md:3 87a87a17f494438abe7d17e606220931
msgid "This page provides details about features specific to one or more images."
msgstr ""

#: ../../using/specifics.md:5 9807e01451c240ef9b7c3726e2117a30
msgid "Apache Spark™"
msgstr ""

#: ../../using/specifics.md:7 33ac2131cf954ee7bf61bb6834b3b6de
msgid "Specific Docker Image Options"
msgstr ""

#: ../../using/specifics.md:9 4e71cc1446264d628ab54b11c8eabeaa
msgid ""
"`-p 4040:4040` - The `jupyter/pyspark-notebook` and `jupyter/all-spark-"
"notebook` images open [SparkUI (Spark Monitoring and Instrumentation "
"UI)](https://spark.apache.org/docs/latest/monitoring.html) at default "
"port `4040`, this option map `4040` port inside docker container to "
"`4040` port on host machine . Note every new spark context that is "
"created is put onto an incrementing port (ie. 4040, 4041, 4042, etc.), "
"and it might be necessary to open multiple ports. For example: `docker "
"run -d -p 8888:8888 -p 4040:4040 -p 4041:4041 jupyter/pyspark-notebook`."
msgstr ""

#: ../../using/specifics.md:11 f26608635f3145ccb0129ac5bd0d88fe
msgid "Build an Image with a Different Version of Spark"
msgstr ""

#: ../../using/specifics.md:13 2dd3d578c4b643ac82205cebd83521ea
msgid ""
"You can build a `pyspark-notebook` image (and also the downstream `all-"
"spark-notebook` image) with a different version of Spark by overriding "
"the default value of the following arguments at build time."
msgstr ""

#: ../../using/specifics.md:15 613c4ce196bf4b0da51d5fa8fcce4ae6
msgid ""
"Spark distribution is defined by the combination of the Spark and the "
"Hadoop version and verified by the package checksum, see [Download Apache"
" Spark](https://spark.apache.org/downloads.html) and the [archive "
"repo](https://archive.apache.org/dist/spark/) for more information."
msgstr ""

#: ../../using/specifics.md:16 c05322087bda4d71b4d86b281b9b17ba
msgid "`spark_version`: The Spark version to install (`3.0.0`)."
msgstr ""

#: ../../using/specifics.md:17 80a04ddb4be848e0bcecb1c346dbde5a
msgid "`hadoop_version`: The Hadoop version (`3.2`)."
msgstr ""

#: ../../using/specifics.md:18 e62452d520f042f494c7e60d37422508
msgid "`spark_checksum`: The package checksum (`BFE4540...`)."
msgstr ""

#: ../../using/specifics.md:19 39dda71367df4fc5a358281db6e7d6c1
msgid "Spark can run with different OpenJDK versions."
msgstr ""

#: ../../using/specifics.md:20 0e28b9e522b44f189fb58f7086ee0328
msgid ""
"`openjdk_version`: The version of (JRE headless) the OpenJDK distribution"
" (`11`), see [Ubuntu "
"packages](https://packages.ubuntu.com/search?keywords=openjdk)."
msgstr ""

#: ../../using/specifics.md:22 242f14e2a81344b1835b4d40d69f9cce
msgid ""
"For example here is how to build a `pyspark-notebook` image with Spark "
"`2.4.7`, Hadoop `2.7` and OpenJDK `8`."
msgstr ""

#: ../../using/specifics.md:47 a33c6a54188a41019d04691234d94c24
msgid "Usage Examples"
msgstr ""

#: ../../using/specifics.md:49 15aeeb7dcb754557b6de632090413b58
msgid ""
"The `jupyter/pyspark-notebook` and `jupyter/all-spark-notebook` images "
"support the use of [Apache Spark](https://spark.apache.org/) in Python, "
"R, and Scala notebooks. The following sections provide some examples of "
"how to get started using them."
msgstr ""

#: ../../using/specifics.md:51 24f491c6d1a3455698a7aada1b452621
msgid "Using Spark Local Mode"
msgstr ""

#: ../../using/specifics.md:53 1631e461d7174f779af2c7448b4887b7
msgid ""
"Spark **local mode** is useful for experimentation on small data when you"
" do not have a Spark cluster available."
msgstr ""

#: ../../using/specifics.md:55 de0baeca8314404ea81e400450864c5e
msgid "Local Mode in Python"
msgstr ""

#: ../../using/specifics.md:57 e562c1189b0943b98bb95a92e26d9baf
msgid "In a Python notebook."
msgstr ""

#: ../../using/specifics.md:72 a0f8061580da4bfa8de8aa8453de63c8
msgid "Local Mode in R"
msgstr ""

#: ../../using/specifics.md:74 ../../using/specifics.md:162
#: aa2d0b379aba4b13bd88bb4d7d8189a5 ef225baaf19e4940b3ed9c894a1c4d82
msgid "In a R notebook with [SparkR][sparkr]."
msgstr ""

#: ../../using/specifics.md:91 ../../using/specifics.md:179
#: 44f0cb5a7880464f93386d329b6daa2e e18a077a27a84e1cbd53b79bc81e48a7
msgid "In a R notebook with [sparklyr][sparklyr]."
msgstr ""

#: ../../using/specifics.md:110 b56f76b8009a40d1887cb4130f8ef186
msgid "Local Mode in Scala"
msgstr ""

#: ../../using/specifics.md:112 ../../using/specifics.md:199
#: 5dbc4bcebf5a454689e525d4b2089c56 bff503bc97154d23bc76e8d514451d89
#, python-format
msgid ""
"Spylon kernel instantiates a `SparkContext` for you in variable `sc` "
"after you configure Spark options in a `%%init_spark` magic cell."
msgstr ""

#: ../../using/specifics.md:128 8cbcc70af9d34d3f9edba32d55de8e9d
msgid "Connecting to a Spark Cluster in Standalone Mode"
msgstr ""

#: ../../using/specifics.md:130 30938fcda7954f1c8023b6dc07fe0459
msgid ""
"Connection to Spark Cluster on **[Standalone "
"Mode](https://spark.apache.org/docs/latest/spark-standalone.html)** "
"requires the following set of steps:"
msgstr ""

# 2c728588b6df4753a0c08f969364a79a
#: ../../using/specifics.md:132 a0c9a3356dd14e32a96d51af401c16c1
msgid ""
"Verify that the docker image (check the Dockerfile) and the Spark Cluster"
" which is being deployed, run the same version of Spark."
msgstr ""

#: ../../using/specifics.md:134 012f5f83287340369b219d0dc78facf3
msgid ""
"[Deploy Spark in Standalone Mode](https://spark.apache.org/docs/latest"
"/spark-standalone.html)."
msgstr ""

#: ../../using/specifics.md:135 08f11b49929d41e6b6a276c786abde5f
msgid ""
"Run the Docker container with `--net=host` in a location that is network "
"addressable by all of your Spark workers. (This is a [Spark networking "
"requirement](https://spark.apache.org/docs/latest/cluster-"
"overview.html#components).)"
msgstr ""

#: ../../using/specifics.md:138 94b0dfff791e4b869741cbec321b54f8
msgid ""
"NOTE: When using `--net=host`, you must also use the flags `--pid=host -e"
" TINI_SUBREAPER=true`. See <https://github.com/jupyter/docker-"
"stacks/issues/64> for details."
msgstr ""

#: ../../using/specifics.md:140 6590de3b147d4099b4cc89f305653e4b
msgid ""
"**Note**: In the following examples we are using the Spark master URL "
"`spark://master:7077` that shall be replaced by the URL of the Spark "
"master."
msgstr ""

#: ../../using/specifics.md:142 e290e6bf2fd146f2982d486f4b961c45
msgid "Standalone Mode in Python"
msgstr ""

#: ../../using/specifics.md:144 be950d7cb970494b8a1d7233b7e9e400
msgid ""
"The **same Python version** needs to be used on the notebook (where the "
"driver is located) and on the Spark workers. The python version used at "
"driver and worker side can be adjusted by setting the environment "
"variables `PYSPARK_PYTHON` and / or `PYSPARK_DRIVER_PYTHON`, see [Spark "
"Configuration][spark-conf] for more information."
msgstr ""

#: ../../using/specifics.md:160 b47b2965112244d3be69f61aa7673b7a
msgid "Standalone Mode in R"
msgstr ""

#: ../../using/specifics.md:197 7298d0689f3c46198e047006b57481ab
msgid "Standalone Mode in Scala"
msgstr ""

#: ../../using/specifics.md:215 1c526204009b429ea1da803cc4712a9e
msgid "Tensorflow"
msgstr ""

#: ../../using/specifics.md:217 ee91242344b243cbba8e137db385af73
msgid ""
"The `jupyter/tensorflow-notebook` image supports the use of "
"[Tensorflow](https://www.tensorflow.org/) in single machine or "
"distributed mode."
msgstr ""

#: ../../using/specifics.md:220 663af92407f24029a147d21d74bea00a
msgid "Single Machine Mode"
msgstr ""

#: ../../using/specifics.md:234 4cf7c1dc09304031b856e1eabf748084
msgid "Distributed Mode"
msgstr ""

# 5e06096348924f51881d05f984e91381
#~ msgid "This list only has 2 examples. You can be the next!"
#~ msgstr ""

# 7ed4a7919dfd446c817c64a7e420e95e
#~ msgid ""
#~ "To use a requirements.txt file, first"
#~ " create your requirements.txt file with "
#~ "the listing of packages desired.  Next,"
#~ " create a new Dockerfile like the "
#~ "one shown below."
#~ msgstr ""

# 56f2354437c74650a70bd154647eed26
#~ msgid ""
#~ "Here is a quick example NGINX "
#~ "configuration to get started.  You'll "
#~ "need a server, a .crt and .key "
#~ "file for your server, and docker &"
#~ " docker-compose installed.  Then just "
#~ "download the files at that gist "
#~ "and run docker-compose up -d to"
#~ " test it out.  Customize the "
#~ "nginx.conf file to set the desired "
#~ "paths and add other services."
#~ msgstr ""

#~ msgid ""
#~ "You must refer to git-SHA image"
#~ " tags when stability and reproducibility"
#~ " are important in your work. (e.g."
#~ " FROM jupyter/scipy-notebook:7c45ec67c8e7, docker"
#~ " run -it --rm jupyter/scipy-"
#~ "notebook:7c45ec67c8e7). You should only use"
#~ " latest when a one-off container "
#~ "instance is acceptable (e.g., you want"
#~ " to briefly try a new library "
#~ "in a notebook)."
#~ msgstr ""

# 577f93f6511a4b17afcef782def7f802
#~ msgid "ipywidgets for interactive visualizations in Python notebooks"
#~ msgstr ""

#~ msgid ""
#~ "You must refer to git-SHA image"
#~ " tags when stability and reproducibility"
#~ " are important in your work. (e.g."
#~ " FROM jupyter/scipy-notebook:7c45ec67c8e7, docker"
#~ " run  -it --rm jupyter/scipy-"
#~ "notebook:7c45ec67c8e7). You should only use"
#~ " latest when a one-off container "
#~ "instance is acceptable (e.g., you want"
#~ " to briefly try a new library "
#~ "in a notebook)."
#~ msgstr ""

# 909f17eb57bc4e4e8df8216423d9c008
#~ msgid ""
#~ "You should only enable sudo if you"
#~ " trust the user and/or if the "
#~ "container is running on an isolated "
#~ "host."
#~ msgstr ""

# 7c56c3891bd94336b21fc82d5aeab6ae
#~ msgid "Common Features"
#~ msgstr ""

# bf4e4ace24d144538edc1d9a2605cfef
#~ msgid ""
#~ "A container launched from any Jupyter"
#~ " Docker Stacks image runs a Jupyter"
#~ " Notebook server by default. The "
#~ "container does so by executing a "
#~ "start-notebook.sh script. This script "
#~ "configures the internal container environment"
#~ " and then runs jupyter notebook, "
#~ "passing it any command line arguments"
#~ " received."
#~ msgstr ""

# 056d2f8a9a4343668131dfb9de71838a
#~ msgid "Notebook Options"
#~ msgstr ""

# d1c32336e1f545d496f7a411fb18cb4e
#~ msgid ""
#~ "You can pass Jupyter command line "
#~ "options to the start-notebook.sh script"
#~ " when launching the container. For "
#~ "example, to secure the Notebook server"
#~ " with a custom password hashed using"
#~ " IPython.lib.passwd() instead of the "
#~ "default token, you can run the "
#~ "following:"
#~ msgstr ""

# 58ad38b4300449da805bc67e73be5fd0
#~ msgid "Docker Options"
#~ msgstr ""

# 0118197966504e3ab1c03a0c49e68c97
#~ msgid ""
#~ "You may instruct the start-notebook.sh"
#~ " script to customize the container "
#~ "environment before launching the notebook "
#~ "server. You do so by passing "
#~ "arguments to the docker run command."
#~ msgstr ""

# 391efc925af248fa9bfa2220bdf0730b
#~ msgid ""
#~ "-e NB_USER=jovyan - Instructs the "
#~ "startup script to change the default "
#~ "container username from jovyan to the"
#~ " provided value. Causes the script to"
#~ " rename the jovyan user home folder."
#~ " For this option to take effect, "
#~ "you must run the container with "
#~ "--user root and set the working "
#~ "directory -w /home/$NB_USER. This feature "
#~ "is useful when mounting host volumes "
#~ "with specific home folder."
#~ msgstr ""

# 97929e34ea254dd289e235276b72068f
#~ msgid ""
#~ "-e NB_UID=1000 - Instructs the startup"
#~ " script to switch the numeric user"
#~ " ID of $NB_USER to the given "
#~ "value. This feature is useful when "
#~ "mounting host volumes with specific "
#~ "owner permissions. For this option to"
#~ " take effect, you must run the "
#~ "container with --user root. (The startup"
#~ " script will su $NB_USER after "
#~ "adjusting the user ID.) You might "
#~ "consider using modern Docker options "
#~ "--user and --group-add instead. See "
#~ "the last bullet below for details."
#~ msgstr ""

# 71cac0c045d342008ca80ce23ef32431
#~ msgid ""
#~ "-e NB_GID=100 - Instructs the startup"
#~ " script to change the primary group"
#~ " of$NB_USER to $NB_GID (the new group"
#~ " is added with a name of "
#~ "$NB_GROUP if it is defined, otherwise"
#~ " the group is named $NB_USER).  This"
#~ " feature is useful when mounting host"
#~ " volumes with specific group permissions."
#~ " For this option to take effect, "
#~ "you must run the container with "
#~ "--user root. (The startup script will"
#~ " su $NB_USER after adjusting the "
#~ "group ID.) You might consider using "
#~ "modern Docker options --user and "
#~ "--group-add instead. See the last "
#~ "bullet below for details.  The user "
#~ "is added to supplemental group users "
#~ "(gid 100) in order to allow write"
#~ " access to the home directory and "
#~ "/opt/conda.  If you override the "
#~ "user/group logic, ensure the user stays"
#~ " in group users if you want "
#~ "them to be able to modify files"
#~ " in the image."
#~ msgstr ""

# 5ca13bdafc214f8b997ca2752592f1be
#~ msgid ""
#~ "-e NB_GROUP=<name> - The name used "
#~ "for $NB_GID, which defaults to $NB_USER."
#~ "  This is only used if $NB_GID "
#~ "is specified and completely optional: "
#~ "there is only cosmetic effect."
#~ msgstr ""

# 4d57d0bd85ae417687747831670ec35f
#~ msgid ""
#~ "-e NB_UMASK=<umask> - Configures Jupyter "
#~ "to use a different umask value "
#~ "from default, i.e. 022. For example, "
#~ "if setting umask to 002, new files"
#~ " will be readable and writable by "
#~ "group members instead of just writable"
#~ " by the owner. Wikipedia has a "
#~ "good article about umask. Feel free "
#~ "to read it in order to choose "
#~ "the value that better fits your "
#~ "needs. Default value should fit most "
#~ "situations. Note that NB_UMASK when set"
#~ " only applies to the Jupyter process"
#~ " itself - you cannot use it to"
#~ " set a umask for additional files "
#~ "created during run-hooks e.g. via "
#~ "pip or conda - if you need "
#~ "to set a umask for these you "
#~ "must set umask for each command."
#~ msgstr ""

# 580637e7f00d4a36b69ce3f6ec43370e
#~ msgid ""
#~ "-e CHOWN_HOME=yes - Instructs the "
#~ "startup script to change the $NB_USER"
#~ " home directory owner and group to"
#~ " the current value of $NB_UID and "
#~ "$NB_GID. This change will take effect"
#~ " even if the user home directory "
#~ "is mounted from the host using -v"
#~ " as described below. The change is"
#~ " not applied recursively by default. "
#~ "You can change modify the chown "
#~ "behavior by setting CHOWN_HOME_OPTS (e.g., "
#~ "-e CHOWN_HOME_OPTS='-R')."
#~ msgstr ""

# 42bbfaf32b43482ba99263a74b383ac3
#~ msgid ""
#~ "-e CHOWN_EXTRA=\"<some dir>,<some other dir>\""
#~ " - Instructs the startup script to"
#~ " change the owner and group of "
#~ "each comma-separated container directory "
#~ "to the current value of $NB_UID "
#~ "and $NB_GID. The change is not "
#~ "applied recursively by default. You can"
#~ " change modify the chown behavior by"
#~ " setting CHOWN_EXTRA_OPTS (e.g., -e "
#~ "CHOWN_EXTRA_OPTS='-R')."
#~ msgstr ""

# 399a6318e3724410a4dcc93cc9d8736d
#~ msgid ""
#~ "-e GRANT_SUDO=yes - Instructs the "
#~ "startup script to grant the NB_USER "
#~ "user passwordless sudo capability. You "
#~ "do not need this option to allow"
#~ " the user to conda or pip "
#~ "install additional packages. This option "
#~ "is useful, however, when you wish "
#~ "to give $NB_USER the ability to "
#~ "install OS packages with apt or "
#~ "modify other root-owned files in "
#~ "the container. For this option to "
#~ "take effect, you must run the "
#~ "container with --user root. (The "
#~ "start-notebook.sh script will su $NB_USER"
#~ " after adding $NB_USER to sudoers.) "
#~ "You should only enable sudo if you"
#~ " trust the user or if the "
#~ "container is running on an isolated "
#~ "host."
#~ msgstr ""

# 3c6485fef5d44f72b4693c1a3d1ec35c
#~ msgid ""
#~ "-e GEN_CERT=yes - Instructs the startup"
#~ " script to generates a self-signed"
#~ " SSL certificate and configure Jupyter "
#~ "Notebook to use it to accept "
#~ "encrypted HTTPS connections."
#~ msgstr ""

# efe931ecaeac4348a6f0112a65371306
#~ msgid ""
#~ "-e JUPYTER_ENABLE_LAB=yes - Instructs the "
#~ "startup script to run jupyter lab "
#~ "instead of the default jupyter notebook"
#~ " command. Useful in container orchestration"
#~ " environments where setting environment "
#~ "variables is easier than change command"
#~ " line parameters."
#~ msgstr ""

# fe40b3a059e54a53a7a5fde86441ae72
#~ msgid ""
#~ "-e RESTARTABLE=yes - Runs Jupyter in "
#~ "a loop so that quitting Jupyter "
#~ "does not cause the container to "
#~ "exit.  This may be useful when you"
#~ " need to install extensions that "
#~ "require restarting Jupyter."
#~ msgstr ""

# bb82e70358e7452d86eb1b8e971fbf27
#~ msgid ""
#~ "-v /some/host/folder/for/work:/home/jovyan/work - "
#~ "Mounts a host machine directory as "
#~ "folder in the container. Useful when "
#~ "you want to preserve notebooks and "
#~ "other work even after the container "
#~ "is destroyed. You must grant the "
#~ "within-container notebook user or group "
#~ "(NB_UID or NB_GID) write access to "
#~ "the host directory (e.g., sudo chown "
#~ "1000 /some/host/folder/for/work)."
#~ msgstr ""

# 403f8e6101534bc0951bf5bb0b03c5a0
#~ msgid ""
#~ "--user 5000 --group-add users - "
#~ "Launches the container with a specific"
#~ " user ID and adds that user to"
#~ " the users group so that it can"
#~ " modify files in the default home "
#~ "directory and /opt/conda. You can use"
#~ " these arguments as alternatives to "
#~ "setting $NB_UID and $NB_GID."
#~ msgstr ""

# 565fbbe944ed4e68a5e202eaf07d1402
#~ msgid "Startup Hooks"
#~ msgstr ""

# 70f6f3501e1b43d3a95e200c39eef8d2
#~ msgid ""
#~ "You can further customize the container"
#~ " environment by adding shell scripts "
#~ "(*.sh) to be sourced or executables "
#~ "(chmod +x) to be run to the "
#~ "paths below:"
#~ msgstr ""

# bdc8d9262aea4329b09bac1deb92d6da
#~ msgid ""
#~ "/usr/local/bin/start-notebook.d/ - handled "
#~ "before any of the standard options "
#~ "noted above are applied"
#~ msgstr ""

# 786fba9678e24e3ba5ded6536dc0492a
#~ msgid ""
#~ "/usr/local/bin/before-notebook.d/ - handled "
#~ "after all of the standard options "
#~ "noted above are applied and just "
#~ "before the notebook server launches"
#~ msgstr ""

# 5903b6a921cb42a9a8b6db0e9592769c
#~ msgid ""
#~ "See the run-hooks function in the"
#~ " jupyter/base-notebook start.sh script for"
#~ " execution details."
#~ msgstr ""

# ffb01f3597d1453bb0299e9a4a888757
#~ msgid "SSL Certificates"
#~ msgstr ""

# 7b1a34debd094e02930aa7197377b691
#~ msgid ""
#~ "You may mount SSL key and "
#~ "certificate files into a container and"
#~ " configure Jupyter Notebook to use "
#~ "them to accept HTTPS connections. For"
#~ " example, to mount a host folder "
#~ "containing a notebook.key and notebook.crt "
#~ "and use them, you might run the"
#~ " following:"
#~ msgstr ""

# 11ef89b3d17b4bcf827e73a7ebb13756
#~ msgid ""
#~ "The docker-stacks/examples for information "
#~ "about how to use Let's Encrypt "
#~ "certificates when you run these stacks"
#~ " on a publicly visible domain."
#~ msgstr ""

# 4a42ccc5b624431bbacdc8c1d5624fb4
#~ msgid ""
#~ "The jupyter_notebook_config.py file for how"
#~ " this Docker image generates a "
#~ "self-signed certificate."
#~ msgstr ""

# 95d9c3081fa34def82e309c53ef2147b
#~ msgid ""
#~ "The Jupyter Notebook documentation for "
#~ "best practices about securing a public"
#~ " notebook server in general."
#~ msgstr ""

# 9950b2e426414111ad46c6ba1e9d29bb
#~ msgid "Alternative Commands"
#~ msgstr ""

# 2e90717352804ebd8086eef378fa411d
#~ msgid "start.sh"
#~ msgstr ""

# 11637ea03062425e94964f2c70ed8676
#~ msgid ""
#~ "The start-notebook.sh script actually "
#~ "inherits most of its option handling "
#~ "capability from a more generic start.sh"
#~ " script. The start.sh script supports "
#~ "all of the features described above, "
#~ "but allows you to specify an "
#~ "arbitrary command to execute. For "
#~ "example, to run the text-based "
#~ "ipython console in a container, do "
#~ "the following:"
#~ msgstr ""

# 3d92501fb3b940b385ee986095610391
#~ msgid ""
#~ "This script is particularly useful when"
#~ " you derive a new Dockerfile from "
#~ "this image and install additional "
#~ "Jupyter applications with subcommands like "
#~ "jupyter console, jupyter kernelgateway, etc."
#~ msgstr ""

# ff1b1af310d54eedb852dc5eff7a4f7e
#~ msgid "Others"
#~ msgstr ""

# 127ffe0a552b4dafaa77d173883350d7
#~ msgid ""
#~ "You can bypass the provided scripts "
#~ "and specify an arbitrary start command."
#~ " If you do, keep in mind that"
#~ " features supported by the start.sh "
#~ "script and its kin will not "
#~ "function (e.g., GRANT_SUDO)."
#~ msgstr ""

# 1d8bc4b15c3044b3932e0df72dd694a7
#~ msgid "Conda Environments"
#~ msgstr ""

# 97935ba423ed4a8787f9895f00015e4b
#~ msgid ""
#~ "The default Python 3.x Conda environment"
#~ " resides in /opt/conda. The /opt/conda/bin"
#~ " directory is part of the default "
#~ "jovyan user's $PATH. That directory is"
#~ " also whitelisted for use in sudo "
#~ "commands by the start.sh script."
#~ msgstr ""

# a8fe459cc9ff43b3b2f31efd4587f145
#~ msgid ""
#~ "The jovyan user has full read/write "
#~ "access to the /opt/conda directory. You"
#~ " can use either conda or pip to"
#~ " install new packages without any "
#~ "additional permissions."
#~ msgstr ""

# 36939901b3744e3fb67d2bae58ae8e25
#~ msgid "Contributed Recipes"
#~ msgstr ""

# 8bc65b7f51f4442c95ea0dec5b4b2704
#~ msgid ""
#~ "Users sometimes share interesting ways "
#~ "of using the Jupyter Docker Stacks. "
#~ "We encourage users to contribute these"
#~ " recipes to the documentation in case"
#~ " they prove useful to other members"
#~ " of the community by submitting a "
#~ "pull request to docs/using/recipes.md. The "
#~ "sections below capture this knowledge."
#~ msgstr ""

# 7447af86f4f3438ba413a7e9cc9764e5
#~ msgid "Using sudo within a container"
#~ msgstr ""

# ed8292c31667424184fe7515a30f79cd
#~ msgid ""
#~ "Password authentication is disabled for "
#~ "the NB_USER (e.g., jovyan). This choice"
#~ " was made to avoid distributing "
#~ "images with a weak default password "
#~ "that users ~might~ will forget to "
#~ "change before running a container on "
#~ "a publicly accessible host."
#~ msgstr ""

# d22ae301bebb4857b866359ddbfb7e53
#~ msgid ""
#~ "You can grant the within-container "
#~ "NB_USER passwordless sudo access by "
#~ "adding -e GRANT_SUDO=yes and --user root"
#~ " to your Docker command line or "
#~ "appropriate container orchestrator config."
#~ msgstr ""

#~ msgid ""
#~ "You should only enable sudo if you"
#~ " trust the user and/or if the "
#~ "container is running on an isolated "
#~ "host. See Docker security documentation "
#~ "for more information about running "
#~ "containers as root."
#~ msgstr ""

# 5b38bd48b58242788cc8b581b575241a
#~ msgid "Using pip install or conda install in a Child Docker image"
#~ msgstr ""

# c35347a79a2e4a7faffe139767808965
#~ msgid ""
#~ "To use a requirements.txt file, first"
#~ " create your requirements.txt file with "
#~ "the listing of packages desired. Next,"
#~ " create a new Dockerfile like the "
#~ "one shown below."
#~ msgstr ""

# fd2320ac3001480992ab2dd80285467b
#~ msgid "Ref: docker-stacks/commit/79169618d571506304934a7b29039085e77db78c"
#~ msgstr ""

# 179407610520450ea0e4b566eac8ec96
#~ msgid "Add a Python 2.x environment"
#~ msgstr ""

# 19bf98219e344b80b68fbf7f3aa68ec6
#~ msgid ""
#~ "Python 2.x was removed from all "
#~ "images on August 10th, 2017, starting"
#~ " in tag cc9feab481f7. You can add "
#~ "a Python 2.x environment by defining "
#~ "your own Dockerfile inheriting from one"
#~ " of the images like so:"
#~ msgstr ""

# be4f7d9b615d490c87cc6393ed0fabf2
#~ msgid "Ref: https://github.com/jupyter/docker-stacks/issues/440"
#~ msgstr ""

#~ msgid "Add a Python 3.x environment"
#~ msgstr ""

#~ msgid ""
#~ "The default version of Python that "
#~ "ships with conda/ubuntu may not be "
#~ "the version you want. To add a "
#~ "conda environment with a different "
#~ "version and make it accessible to "
#~ "Jupyter, the instructions are very "
#~ "similar to Python 2.x but are "
#~ "slightly simpler (no need to switch "
#~ "to root):"
#~ msgstr ""

# 747e87a9067b4870bad5aa335ab39f7d
#~ msgid "Run JupyterLab"
#~ msgstr ""

# e062399bbaee4f1eb3ab48dcc60289b8
#~ msgid ""
#~ "JupyterLab is preinstalled as a notebook"
#~ " extension starting in tag c33a7dc0eece."
#~ msgstr ""

# 7c0f192d197143698dd371fff8fa3ceb
#~ msgid ""
#~ "Run jupyterlab using a command such "
#~ "as docker run -it --rm -p "
#~ "8888:8888 jupyter/datascience-notebook start.sh "
#~ "jupyter lab"
#~ msgstr ""

#~ msgid "Dask JupyterLab Extension"
#~ msgstr ""

#~ msgid ""
#~ "Dask JupyterLab Extension provides a "
#~ "JupyterLab extension to manage Dask "
#~ "clusters, as well as embed Dask's "
#~ "dashboard plots directly into JupyterLab "
#~ "panes. Create the Dockerfile as:"
#~ msgstr ""

#~ msgid "And build the image as:"
#~ msgstr ""

#~ msgid "Once built, run using the command:"
#~ msgstr ""

#~ msgid "Ref: https://github.com/jupyter/docker-stacks/issues/999"
#~ msgstr ""

# e7842069e6ce432b9f1a12271e0ddc24
#~ msgid "Let's Encrypt a Notebook server"
#~ msgstr ""

# 4c00785b93734066b349b42b23c312af
#~ msgid ""
#~ "See the README for the simple "
#~ "automation here https://github.com/jupyter/docker-"
#~ "stacks/tree/master/examples/make-deploy which "
#~ "includes steps for requesting and "
#~ "renewing a Let's Encrypt certificate."
#~ msgstr ""

# c386f5913a78475487e9f12c76af9032
#~ msgid "Ref: https://github.com/jupyter/docker-stacks/issues/78"
#~ msgstr ""

# dd297c8f73a44707bf02064434a50a47
#~ msgid "Slideshows with Jupyter and RISE"
#~ msgstr ""

# a1834343ae3045ea962e0efc80f69443
#~ msgid ""
#~ "RISE allows via extension to create "
#~ "live slideshows of your notebooks, with"
#~ " no conversion, adding javascript "
#~ "Reveal.js:"
#~ msgstr ""

# 6e0c67b18d3546a9ab024c5663aa8f90
#~ msgid "Credit: Paolo D. based on docker-stacks/issues/43"
#~ msgstr ""

# 6bf66d68f2e5439b8403c0dd8ded40c5
#~ msgid "xgboost"
#~ msgstr ""

# a9bc4b88bd3d4bc1a7832f31677c298a
#~ msgid "Running behind a nginx proxy"
#~ msgstr ""

# dd58dbc3b08744a0b9415448d3bdbba6
#~ msgid ""
#~ "you would prefer to access the "
#~ "notebook at a server URL with a"
#~ " path (https://example.com/jupyter) rather than"
#~ " a port (https://example.com:8888)"
#~ msgstr ""

# cffd649e66ae4efb8122522e465ce3e3
#~ msgid ""
#~ "Here is a quick example NGINX "
#~ "configuration to get started. You'll "
#~ "need a server, a .crt and .key "
#~ "file for your server, and docker &"
#~ " docker-compose installed. Then just "
#~ "download the files at that gist "
#~ "and run docker-compose up -d to"
#~ " test it out. Customize the "
#~ "nginx.conf file to set the desired "
#~ "paths and add other services."
#~ msgstr ""

# 7ba37cfc11224013a862d6519168acd0
#~ msgid "Host volume mounts and notebook errors"
#~ msgstr ""

# 0fc6706374ee4a5d98517ec02ee24a03
#~ msgid ""
#~ "If you are mounting a host "
#~ "directory as /home/jovyan/work in your "
#~ "container and you receive permission "
#~ "errors or connection errors when you "
#~ "create a notebook, be sure that "
#~ "the jovyan user (UID=1000 by default)"
#~ " has read/write access to the "
#~ "directory on the host. Alternatively, "
#~ "specify the UID of the jovyan user"
#~ " on container startup using the -e"
#~ " NB_UID option described in the "
#~ "Common Features, Docker Options section"
#~ msgstr ""

# a6c910ab798b43ee91c0af160a3aadb6
#~ msgid "Ref: https://github.com/jupyter/docker-stacks/issues/199"
#~ msgstr ""

# 908924a0b4fa44d79fbca1413a0fb296
#~ msgid "Manpage installation"
#~ msgstr ""

# fb4a0f5bc3534bd9bb8909ce6512f4dd
#~ msgid ""
#~ "Adding the documentation on top of "
#~ "an existing singleuser image wastes a"
#~ " lot of space and requires "
#~ "reinstalling every system package, which "
#~ "can take additional time and bandwidth;"
#~ " the datascience-notebook image has "
#~ "been shown to grow by almost 3GB"
#~ " when adding manapages in this way."
#~ " Enabling manpages in the base Ubuntu"
#~ " layer prevents this container bloat:"
#~ msgstr ""

# 84b7fb0b5fd748ecba457f867a0e30bf
#~ msgid ""
#~ "Be sure to check the current base"
#~ " image in base-notebook before "
#~ "building."
#~ msgstr ""

# 5764b06de0d941a585e5107f313235f4
#~ msgid "JupyterHub"
#~ msgstr ""

# fbff97a16a2a4a53a69dd2d1c7dfbe91
#~ msgid "Use JupyterHub's dockerspawner"
#~ msgstr ""

# 8b1bc94531e7490fbaa012f5c4a257bd
#~ msgid ""
#~ "Swapping out the FROM line in the"
#~ " jupyterhub/singleuser Dockerfile should be "
#~ "enough for most cases."
#~ msgstr ""

# ce864521fffa4c89b7584d24296515d5
#~ msgid ""
#~ "Credit: Justin Tyberg, quanghoc, and Min"
#~ " RK based on docker-stacks/issues/124 "
#~ "and docker-stacks/pull/185"
#~ msgstr ""

# 6a5d92e7b071449686d148be90544e64
#~ msgid "Containers with a specific version of JupyterHub"
#~ msgstr ""

# 091b62f4a91c4d87b92554795a00744c
#~ msgid ""
#~ "To use a specific version of "
#~ "JupyterHub, the version of jupyterhub in"
#~ " your image should match the version"
#~ " in the Hub itself."
#~ msgstr ""

# 67db6ce9d62f499a9d9aaf675a86cddc
#~ msgid "Credit: MinRK"
#~ msgstr ""

# d4613cff20a140cbbbacc84ada8fcd87
#~ msgid "Ref: https://github.com/jupyter/docker-stacks/issues/177"
#~ msgstr ""

# 19439bd85c2946bb89f385651f8283dc
#~ msgid "Spark"
#~ msgstr ""

# 9c295c93db724e5fb11a8f870f805f41
#~ msgid "Using PySpark with AWS S3"
#~ msgstr ""

# 59f08373c7354fa4bb5b7c10441b5d69
#~ msgid "Ref: https://github.com/jupyter/docker-stacks/issues/127"
#~ msgstr ""

# c32dccc031664268983f72ed7927beff
#~ msgid "Using Local Spark JARs"
#~ msgstr ""

# 19614ffa973f49bab235cb5ac9cdf259
#~ msgid "Ref: https://github.com/jupyter/docker-stacks/issues/154"
#~ msgstr ""

# fc70801958a34e5aa578388147a8a1fb
#~ msgid "Using spark-packages.org"
#~ msgstr ""

# 031b9633ca0849e9a9035f4fa5ec2d29
#~ msgid ""
#~ "If you'd like to use packages from"
#~ " spark-packages.org, see "
#~ "https://gist.github.com/parente/c95fdaba5a9a066efaab for "
#~ "an example of how to specify the"
#~ " package identifier in the environment "
#~ "before creating a SparkContext."
#~ msgstr ""

# 08c4d39ccfa84551af78867ab37d3f18
#~ msgid "Ref: https://github.com/jupyter/docker-stacks/issues/43"
#~ msgstr ""

# 285d9bf0eefb480386dfdcd55fd76ef5
#~ msgid "Use jupyter/all-spark-notebooks with an existing Spark/YARN cluster"
#~ msgstr ""

# 1b1c743d85d542989f6a8f2c97a588d3
#~ msgid "Credit: britishbadger from docker-stacks/issues/369"
#~ msgstr ""

# 06d2e360eccb489abeeebada6c0b41eb
#~ msgid ""
#~ "Run Jupyter Notebook/Lab inside an "
#~ "already secured environment (i.e., with "
#~ "no token)"
#~ msgstr ""

# 42dd63565c4a4f67825f675972554d34
#~ msgid "(Adapted from issue 728)"
#~ msgstr ""

# 8af2ceb1414f46e1802681695b5917f8
#~ msgid ""
#~ "The default security is very good. "
#~ "There are use cases, encouraged by "
#~ "containers, where the jupyter container "
#~ "and the system it runs within, lie"
#~ " inside the security boundary. In "
#~ "these use cases it is convenient "
#~ "to launch the server without a "
#~ "password or token. In this case, "
#~ "you should use the start.sh script "
#~ "to launch the server with no "
#~ "token:"
#~ msgstr ""

# 158396013982441e9e62402c499dfb11
#~ msgid "Enable nbextension spellchecker for markdown (or any other nbextension)"
#~ msgstr ""

# 78ba1c20de2445fb9b76ec6202e4d794
#~ msgid "Ref: https://github.com/jupyter/docker-stacks/issues/675"
#~ msgstr ""

# f66d723263124285a641f0dee8a41565
#~ msgid "Running a Container"
#~ msgstr ""

# 3a614d7e864741199c1223a26fc37c03
#~ msgid "Using the Docker CLI"
#~ msgstr ""

# 3039d667df25426b84be7ab9d920cfee
#~ msgid ""
#~ "You can launch a local Docker "
#~ "container from the Jupyter Docker Stacks"
#~ " using the Docker command line "
#~ "interface. There are numerous ways to"
#~ " configure containers using the CLI. "
#~ "The following are some common patterns."
#~ msgstr ""

# 0ea4263c502142b2b3fa7f55a917af19
#~ msgid ""
#~ "Example 1 This command pulls the "
#~ "jupyter/scipy-notebook image tagged "
#~ "2c80cf3537ca from Docker Hub if it "
#~ "is not already present on the "
#~ "local host. It then starts a "
#~ "container running a Jupyter Notebook "
#~ "server and exposes the server on "
#~ "host port 8888. The server logs "
#~ "appear in the terminal and include "
#~ "a URL to the notebook server."
#~ msgstr ""

# 402a9d9ecccb479994d2903710aabaa6
#~ msgid ""
#~ "Pressing Ctrl-C shuts down the notebook"
#~ " server but leaves the container "
#~ "intact on disk for later restart "
#~ "or permanent deletion using commands "
#~ "like the following:"
#~ msgstr ""

# fe38eef5fbe24b90ab070cefeef42230
#~ msgid ""
#~ "Example 2 This command pulls the "
#~ "jupyter/r-notebook image tagged e5c5a7d3e52d "
#~ "from Docker Hub if it is not "
#~ "already present on the local host. "
#~ "It then starts a container running "
#~ "a Jupyter Notebook server and exposes"
#~ " the server on host port 10000. "
#~ "The server logs appear in the "
#~ "terminal and include a URL to the"
#~ " notebook server, but with the "
#~ "internal container port (8888) instead "
#~ "of the the correct host port "
#~ "(10000)."
#~ msgstr ""

# d911c29555904311b29d8eb79fcb9843
#~ msgid ""
#~ "Pressing Ctrl-C shuts down the notebook"
#~ " server and immediately destroys the "
#~ "Docker container. Files written to "
#~ "~/work in the container remain touched."
#~ " Any other changes made in the "
#~ "container are lost."
#~ msgstr ""

# 718d037e82a64d69aea592f76b3f047b
#~ msgid ""
#~ "Example 3 This command pulls the "
#~ "jupyter/all-spark-notebook image currently "
#~ "tagged latest from Docker Hub if "
#~ "an image tagged latest is not "
#~ "already present on the local host. "
#~ "It then starts a container named "
#~ "notebook running a JupyterLab server and"
#~ " exposes the server on a randomly "
#~ "selected port."
#~ msgstr ""

# f9627b2638ec498ebfd06d0475e1dc4c
#~ msgid "Using Binder"
#~ msgstr ""

# 6e355acc72ca41a2aca2972df65259c7
#~ msgid ""
#~ "Binder is a service that allows "
#~ "you to create and share custom "
#~ "computing environments for projects in "
#~ "version control. You can use any "
#~ "of the Jupyter Docker Stacks images "
#~ "as a basis for a Binder-compatible"
#~ " Dockerfile. See the docker-stacks "
#~ "example and Using a Dockerfile sections"
#~ " in the Binder documentation for "
#~ "instructions."
#~ msgstr ""

# d6f8d0ee10b542488dce87b84eb48036
#~ msgid "Using JupyterHub"
#~ msgstr ""

# ef9a37b25db542dea89c9c1fb31c18cd
#~ msgid ""
#~ "You can configure JupyterHub to launcher"
#~ " Docker containers from the Jupyter "
#~ "Docker Stacks images. If you've been "
#~ "following the Zero to JupyterHub with"
#~ " Kubernetes guide, see the Use an "
#~ "existing Docker image section for "
#~ "details. If you have a custom "
#~ "JupyterHub deployment, see the Picking "
#~ "or building a Docker image instructions"
#~ " for the dockerspawner instead."
#~ msgstr ""

# bf63b713aece4a7eacc2ad77f6f47c2c
#~ msgid "Using Other Tools and Services"
#~ msgstr ""

# fcce8862fc7a41a394c1e19d35363653
#~ msgid ""
#~ "You can use the Jupyter Docker "
#~ "Stacks with any Docker-compatible "
#~ "technology (e.g., Docker Compose, docker-"
#~ "py, your favorite cloud container "
#~ "service). See the documentation of the"
#~ " tool, library, or service for "
#~ "details about how to reference, "
#~ "configure, and launch containers from "
#~ "these images."
#~ msgstr ""

# 75674f1f85cb43bcbc020de3b84f18f7
#~ msgid "Selecting an Image"
#~ msgstr ""

# 686b01e6feaf4363930c16cecff5f462
# cdbd4076608348a182dc09701223093a
#~ msgid "Core Stacks"
#~ msgstr ""

# daaad3b4f13e4c6395b0e9186c73030d
# d0275f3e7b07428a85c62db44d774d71
#~ msgid "Image Relationships"
#~ msgstr ""

# 892152661ffc4ea096ba152334ff086f
# a6f02cacf6334057bdb5eb1339411a32
#~ msgid "Community Stacks"
#~ msgstr ""

# fc2fca9d04f442e9a313123cec1174ff
#~ msgid ""
#~ "The Jupyter team maintains a set "
#~ "of Docker image definitions in the "
#~ "https://github.com/jupyter/docker-stacks GitHub "
#~ "repository. The following sections describe"
#~ " these images including their contents, "
#~ "relationships, and versioning strategy."
#~ msgstr ""

# 4e9d03b93e964d16b23b30610d17b3e2
#~ msgid "jupyter/base-notebook"
#~ msgstr ""

# f43dd3334aac4971a67e5bb833dafcb8
# 93db5d969cea480a827c0d6d028fc717
# 4ff6dbde14924b73b3a54bdb94096ba2
# da116e35b2494285abe8447ab372324b
# 6fb499ae6636492b979bad5a17733c4b
# c10b1e6040c84241a77edb90ea3306a4
# 227408f175a24d1cb70e69ca32f11434
# b8ff65660ef14b0692edbe3a2fdff42b
# b50d8b1a5d3849279bcbda725f9f8e62
#~ msgid "Source on GitHub | Dockerfile commit history | Docker Hub image tags"
#~ msgstr ""

# eea41b7365bd4751ae599beb4edfa168
#~ msgid ""
#~ "jupyter/base-notebook is a small image"
#~ " supporting the options common across "
#~ "all core stacks. It is the basis"
#~ " for all other stacks."
#~ msgstr ""

# facfb37f7fa64b85930d8f12fdeef2dd
#~ msgid ""
#~ "Minimally-functional Jupyter Notebook server"
#~ " (e.g., no pandoc for saving "
#~ "notebooks as PDFs)"
#~ msgstr ""

# e90347274dd1459383e31a40bc6685f2
#~ msgid "Miniconda Python 3.x in /opt/conda"
#~ msgstr ""

# 0396d289dcdd49788f06c18efeca5013
#~ msgid ""
#~ "Unprivileged user jovyan (uid=1000, "
#~ "configurable, see options) in group "
#~ "users (gid=100) with ownership over the"
#~ " /home/jovyan and /opt/conda paths"
#~ msgstr ""

# 0e9211b01ef94b66bad9288682e1a833
#~ msgid ""
#~ "tini as the container entrypoint and "
#~ "a start-notebook.sh script as the "
#~ "default command"
#~ msgstr ""

# e38b63a14dae4b718a94c6e0523daf1e
#~ msgid ""
#~ "A start-singleuser.sh script useful for"
#~ " launching containers in JupyterHub"
#~ msgstr ""

# 0a603f43d1b34be28d2c1002f6686fda
#~ msgid ""
#~ "A start.sh script useful for running "
#~ "alternative commands in the container "
#~ "(e.g. ipython, jupyter kernelgateway, jupyter"
#~ " lab)"
#~ msgstr ""

# 9cff5da6908e42d5a7da093ba0bfcfe7
#~ msgid "jupyter/minimal-notebook"
#~ msgstr ""

# 8596676795f142d2912833d1320aa6a0
#~ msgid ""
#~ "jupyter/minimal-notebook adds command line "
#~ "tools useful when working in Jupyter "
#~ "applications."
#~ msgstr ""

# b1167e8a2430451fbb41ea876714d541
#~ msgid "Everything in jupyter/base-notebook"
#~ msgstr ""

# c46294c22bd44a86ac08b977f060a21d
#~ msgid "Pandoc and TeX Live for notebook document conversion"
#~ msgstr ""

# ad6fec23e1bf4a42b0cafd2f15e74574
#~ msgid "git, emacs, jed, nano, tzdata, and unzip"
#~ msgstr ""

# 1c7363e9e14148f7a302b0075598590a
#~ msgid "jupyter/r-notebook"
#~ msgstr ""

# a6bc72d21b0c4102b16a38df077a48dd
#~ msgid "jupyter/r-notebook includes popular packages from the R ecosystem."
#~ msgstr ""

# bfe937844bef465081bdd0cc74064b77
# eb5808624ae249d5aa6b1b06350035dc
#~ msgid "Everything in jupyter/minimal-notebook and its ancestor images"
#~ msgstr ""

# db6a08c9a21f4e1eae1f4a7c7656a60d
#~ msgid "The R interpreter and base environment"
#~ msgstr ""

# c1cf2ef729d04aacbbf220cbe78edb07
# 486896c4482443dcb0f7408c888f29e9
#~ msgid "IRKernel to support R code in Jupyter notebooks"
#~ msgstr ""

# ce8993612e2e44aea34dedc24740025d
#~ msgid ""
#~ "tidyverse packages, including ggplot2, dplyr,"
#~ " tidyr, readr, purrr, tibble, stringr, "
#~ "lubridate, and broom from conda-forge"
#~ msgstr ""

# dcf536112dad48369dbd06c240f5b337
#~ msgid ""
#~ "plyr, devtools, shiny, rmarkdown, forecast,"
#~ " rsqlite, reshape2, nycflights13, caret, "
#~ "rcurl, and randomforest packages from "
#~ "conda-forge"
#~ msgstr ""

# 3e8e6435e2b64a9fb9be8fe252ed2f3a
#~ msgid "jupyter/scipy-notebook"
#~ msgstr ""

# 7d06f0f385c844389eabb820a73b9cf1
#~ msgid ""
#~ "jupyter/scipy-notebook includes popular "
#~ "packages from the scientific Python "
#~ "ecosystem."
#~ msgstr ""

# 9b123df88f864a9f8bd0472877a47a23
#~ msgid ""
#~ "pandas, numexpr, matplotlib, scipy, seaborn,"
#~ " scikit-learn, scikit-image, sympy, "
#~ "cython, patsy, statsmodel, cloudpickle, dill,"
#~ " numba, bokeh, sqlalchemy, hdf5, vincent,"
#~ " beautifulsoup, protobuf, and xlrd packages"
#~ msgstr ""

#~ msgid ""
#~ "ipywidgets and ipympl for interactive "
#~ "visualizations and plots in Python "
#~ "notebooks"
#~ msgstr ""

# 538f0c0d60e84ac7b96c747c780dfd9e
#~ msgid "Facets for visualizing machine learning datasets"
#~ msgstr ""

# 91f89dafe55d46219648e753b94f3054
#~ msgid "jupyter/tensorflow-notebook"
#~ msgstr ""

# 183ce48c172144bc91143bc63797512d
#~ msgid ""
#~ "jupyter/tensorflow-notebook includes popular "
#~ "Python deep learning libraries."
#~ msgstr ""

# 5406ba3cf8a644a79a678c7968ef36cc
# 7dad34e3954840d69b1c418bfdc475c5
#~ msgid "Everything in jupyter/scipy-notebook and its ancestor images"
#~ msgstr ""

# 7698f92c854b4324a3371453e3ee1878
#~ msgid "tensorflow and keras machine learning libraries"
#~ msgstr ""

# e1403de76d344f4d93bd47a91dd00428
#~ msgid "jupyter/datascience-notebook"
#~ msgstr ""

# 2bd4e59533d04b86846cea01ccf36ed4
#~ msgid ""
#~ "jupyter/datascience-notebook includes libraries "
#~ "for data analysis from the Julia, "
#~ "Python, and R communities."
#~ msgstr ""

# ba7ecdc5c2444acd86073ac84157e7cf
#~ msgid ""
#~ "Everything in the jupyter/scipy-notebook "
#~ "and jupyter/r-notebook images, and their "
#~ "ancestor images"
#~ msgstr ""

# bfa2ae2246be45fdb389767d6f74baa6
#~ msgid "The Julia compiler and base environment"
#~ msgstr ""

# 31750842f94747f4a0ebd0ca4ac8f2af
#~ msgid "IJulia to support Julia code in Jupyter notebooks"
#~ msgstr ""

# d8985019373a4360a66ce8c6e32056fa
#~ msgid "HDF5, Gadfly, and RDatasets packages"
#~ msgstr ""

# 051a6e882e974e599bc0221add5e0c50
#~ msgid "jupyter/pyspark-notebook"
#~ msgstr ""

# a1a474f29c9047d6bb99e9a41e789351
#~ msgid ""
#~ "jupyter/pyspark-notebook includes Python "
#~ "support for Apache Spark, optionally on"
#~ " Mesos."
#~ msgstr ""

# 6d585f39fb334a5c95c7f9864baea8a9
#~ msgid "Apache Spark with Hadoop binaries"
#~ msgstr ""

# 33bbd9311c5640008e775210d3f75097
#~ msgid "Mesos client libraries"
#~ msgstr ""

#~ msgid "jupyter/all-spark-notebook"
#~ msgstr ""

# 954fbce53b9d4e3c90c88a65e7d138bd
#~ msgid ""
#~ "jupyter/all-spark-notebook includes Python,"
#~ " R, and Scala support for Apache "
#~ "Spark, optionally on Mesos."
#~ msgstr ""

# 671183aa9bcb4f4ba34933a4cc0e28c0
#~ msgid "Everything in jupyter/pyspark-notebook and its ancestor images"
#~ msgstr ""

# 0114a45f63054b1e9a56aff6c04bd670
#~ msgid ""
#~ "Apache Toree and spylon-kernel to "
#~ "support Scala code in Jupyter notebooks"
#~ msgstr ""

# aa21cb83205c4045960bcfd3f3fc1542
#~ msgid "ggplot2, sparklyr, and rcurl packages"
#~ msgstr ""

# 07d86ef0562f455abb691bffeaca467f
#~ msgid ""
#~ "The following diagram depicts the build"
#~ " dependency tree of the core images."
#~ " (i.e., the FROM statements in their"
#~ " Dockerfiles). Any given image inherits "
#~ "the complete content of all ancestor "
#~ "images pointing to it."
#~ msgstr ""

# fbf5d0a65b8748a5ba1b29a0e43ce9f4
#~ msgid "Builds"
#~ msgstr ""

# 75fc61a8cc874e9196ee00f7af15bb0b
#~ msgid ""
#~ "Pull requests to the jupyter/docker-"
#~ "stacks repository trigger builds of all"
#~ " images on Travis CI. These images"
#~ " are for testing purposes only and"
#~ " are not saved for use. When "
#~ "pull requests merge to master, all "
#~ "images rebuild on Docker Cloud and "
#~ "become available to docker pull from "
#~ "Docker Hub."
#~ msgstr ""

# d226a5a7f673440cbe70097864dda848
#~ msgid "Versioning"
#~ msgstr ""

# 34b4f765c48944bd939679eeb9810497
#~ msgid ""
#~ "The latest tag in each Docker Hub"
#~ " repository tracks the master branch "
#~ "HEAD reference on GitHub. latest is "
#~ "a moving target, by definition, and "
#~ "will have backward-incompatible changes "
#~ "regularly."
#~ msgstr ""

# 7ea772c3bc1d4463b29db3b57e48be8d
#~ msgid ""
#~ "Every image on Docker Hub also "
#~ "receives a 12-character tag which "
#~ "corresponds with the git commit SHA "
#~ "that triggered the image build. You "
#~ "can inspect the state of the "
#~ "jupyter/docker-stacks repository for that "
#~ "commit to review the definition of "
#~ "the image (e.g., images with tag "
#~ "7c45ec67c8e7 were built from "
#~ "https://github.com/jupyter/docker-stacks/tree/7c45ec67c8e7)."
#~ msgstr ""

# cf34bef9989940dda5de9dc026732a4c
#~ msgid ""
#~ "csharp-notebook is a community Jupyter"
#~ " Docker Stack image. Try C# in "
#~ "Jupyter Notebooks. The image includes "
#~ "more than 200 Jupyter Notebooks with "
#~ "example C# code and can readily be"
#~ " tried online via mybinder.org. Click "
#~ "here to launch ."
#~ msgstr ""

# e5c4a7b08c2f4b34b361a923f9fb3dbd
#~ msgid ""
#~ "education-notebook is a community "
#~ "Jupyter Docker Stack image. The image"
#~ " includes nbgrader and RISE on top"
#~ " of the datascience-notebook image. "
#~ "Click here to launch it on ."
#~ msgstr ""

# 8a550c70c3454d72b976cabc1cbdf465
#~ msgid "crosscompass/ihaskell-notebook"
#~ msgstr ""

# 997dafa5bad846f49a7eee78001ed3fc
#~ msgid ""
#~ "crosscompass/ihaskell-notebook is based on "
#~ "IHaskell. Includes popular packages and "
#~ "example notebooks."
#~ msgstr ""

# 9af612ef9b1847e9a537228c2d3bc77d
#~ msgid "Try it on binder:"
#~ msgstr ""

# d514a88096544a2ca92ceaf14b1323eb
#~ msgid ""
#~ "java-notebook is a community Jupyter "
#~ "Docker Stack image. The image includes"
#~ " IJava kernel on top of the "
#~ "minimal-notebook image. Click here to "
#~ "launch it on ."
#~ msgstr ""

# e5b3d27fa68b47d4a2c02c7a039d7daf
#~ msgid ""
#~ "sage-notebook is a community Jupyter "
#~ "Docker Stack image with the sagemath "
#~ "kernel on top of the minimal-"
#~ "notebook image. Click here to launch "
#~ "it on ."
#~ msgstr ""

#~ msgid ""
#~ "GPU-Jupyter: Leverage Jupyter Notebooks "
#~ "with the power of your NVIDIA GPU"
#~ " and perform GPU calculations using "
#~ "Tensorflow and Pytorch in collaborative "
#~ "notebooks. This is done by generating"
#~ " a Dockerfile, that consists of the"
#~ " nvidia/cuda base image, the well-"
#~ "maintained docker-stacks that is "
#~ "integrated as submodule and GPU-able "
#~ "libraries like Tensorflow, Keras and "
#~ "PyTorch on top of it."
#~ msgstr ""

#~ msgid ""
#~ "cgspatial-notebook is a community "
#~ "Jupyter Docker Stack image. The image"
#~ " includes major geospatial Python & R"
#~ " libraries on top of the "
#~ "datascience-notebook image. Try it on "
#~ "binder:"
#~ msgstr ""

# f9f4ef31795249d9bf2a752dfbb27a8f
#~ msgid ""
#~ "See the contributing guide for "
#~ "information about how to create your "
#~ "own Jupyter Docker Stack."
#~ msgstr ""

# 7b67588ff359486cb64810359db6704c
#~ msgid "Image Specifics"
#~ msgstr ""

# 4e5d822c2e1a410099f1ab5831e29927
#~ msgid "Apache Spark"
#~ msgstr ""

# 433d8d99798649029dafd444253567b4
#~ msgid "Specific Docker Image Options"
#~ msgstr ""

# 70083fc71521409895897387117748bc
#~ msgid ""
#~ "-p 4040:4040 - The jupyter/pyspark-"
#~ "notebook and jupyter/all-spark-notebook "
#~ "images open SparkUI (Spark Monitoring "
#~ "and Instrumentation UI) at default port"
#~ " 4040, this option map 4040 port "
#~ "inside docker container to 4040 port "
#~ "on host machine . Note every new"
#~ " spark context that is created is "
#~ "put onto an incrementing port (ie. "
#~ "4040, 4041, 4042, etc.), and it "
#~ "might be necessary to open multiple "
#~ "ports. For example: docker run -d "
#~ "-p 8888:8888 -p 4040:4040 -p 4041:4041"
#~ " jupyter/pyspark-notebook"
#~ msgstr ""

# 2449b18de82e4d129cbd49e52ce9e522
#~ msgid "Usage Examples"
#~ msgstr ""

# ec077f84f7394baba4071d0d8a9c9dbf
#~ msgid ""
#~ "The jupyter/pyspark-notebook and jupyter"
#~ "/all-spark-notebook images support the "
#~ "use of Apache Spark in Python, R,"
#~ " and Scala notebooks. The following "
#~ "sections provide some examples of how"
#~ " to get started using them."
#~ msgstr ""

# ca35b3b020914e2eb2e877199a90d4a4
#~ msgid "Using Spark Local Mode"
#~ msgstr ""

# 2c5367b84e444a1aa504910b22ba1454
# 09d8b02687704d368a670cb243e299fb
#~ msgid "In a Python Notebook"
#~ msgstr ""

# 2b5c49ea60184570a8b50622140c22e1
# 192add33e94844f080ae03254899e2ee
#~ msgid "In a R Notebook"
#~ msgstr ""

# 80cedeb3b4514de792dba8e03b1c8774
# 5f3159414ddc427699709ddef740d6fd
#~ msgid "In a Spylon Kernel Scala Notebook"
#~ msgstr ""

# 07c9256c669b488aaa2df48676d5a188
#~ msgid ""
#~ "Spylon kernel instantiates a SparkContext "
#~ "for you in variable sc after you"
#~ " configure Spark options in a "
#~ "%%init_spark magic cell."
#~ msgstr ""

# aeec453983524d3ab59f7241cf8bac7b
# 472a48e72aaf46ca86a89e1598595045
#~ msgid "In an Apache Toree Scala Notebook"
#~ msgstr ""

# 762d164260cd4938b5f9556b29b0e171
#~ msgid ""
#~ "Apache Toree instantiates a local "
#~ "SparkContext for you in variable sc "
#~ "when the kernel starts."
#~ msgstr ""

# 8da1ef6876324b61885c5dec2c6a9cbf
#~ msgid "Connecting to a Spark Cluster on Mesos"
#~ msgstr ""

# e8c29961728146a28c6581966a2d2341
#~ msgid "Deploy Spark on Mesos."
#~ msgstr ""

# 1838d7f4481246538ca4ffe89e02ff4d
#~ msgid ""
#~ "Configure each slave with the --no-"
#~ "switch_user flag or create the $NB_USER"
#~ " account on every slave node."
#~ msgstr ""

# d4ee49cc6cb547389ed3228e74a4a67c
# 4b8c4c1e7ea441f1af4b4e0fbed73888
#~ msgid ""
#~ "Run the Docker container with --net=host"
#~ " in a location that is network "
#~ "addressable by all of your Spark "
#~ "workers. (This is a Spark networking "
#~ "requirement.)"
#~ msgstr ""

# 9a026387155e46fa8e4e1ea3f00d3a63
# 68e479d8f50e4685a0fb5de56a978347
#~ msgid ""
#~ "NOTE: When using --net=host, you must"
#~ " also use the flags --pid=host -e "
#~ "TINI_SUBREAPER=true. See https://github.com/jupyter"
#~ "/docker-stacks/issues/64 for details."
#~ msgstr ""

# 929575857ae647aebbcb721af39bdd7e
#~ msgid ""
#~ "The Apache Toree kernel automatically "
#~ "creates a SparkContext when it starts"
#~ " based on configuration information from"
#~ " its command line arguments and "
#~ "environment variables. You can pass "
#~ "information about your Mesos cluster via"
#~ " the SPARK_OPTS environment variable when"
#~ " you spawn a container."
#~ msgstr ""

# da5d5d861e914df98df9dba50fb3d66a
#~ msgid "Connecting to a Spark Cluster in Standalone Mode"
#~ msgstr ""

# d5a341bb44524a8cb33f086803daaf63
#~ msgid "Deploy Spark in Standalone Mode."
#~ msgstr ""

# 85baa5bd4ed5426b96dad49dacfab9cb
#~ msgid "Tensorflow"
#~ msgstr ""

# 4249b4b266fc4aeeb85dc8386ab60592
#~ msgid ""
#~ "The jupyter/tensorflow-notebook image supports"
#~ " the use of Tensorflow in single "
#~ "machine or distributed mode."
#~ msgstr ""

# 68fba23f7cd94702a9dead3c51719206
#~ msgid "Single Machine Mode"
#~ msgstr ""

# d4b74babe01d4a3a86c46844a737151b
#~ msgid "Distributed Mode"
#~ msgstr ""

#~ msgid ""
#~ "[git](https://git-scm.com/), "
#~ "[emacs](https://www.gnu.org/software/emacs/), "
#~ "[jed](https://www.jedsoft.org/jed/), [nano](https://www.nano-"
#~ "editor.org/), tzdata, and"
#~ msgstr ""

#~ msgid ""
#~ "Minimally-functional Jupyter Notebook server"
#~ " (e.g., no [pandoc](https://pandoc.org/) for "
#~ "saving notebooks as PDFs)"
#~ msgstr ""

#~ msgid ""
#~ "[Pandoc](http://pandoc.org) and [TeX "
#~ "Live](https://www.tug.org/texlive/) for notebook "
#~ "document conversion"
#~ msgstr ""

#~ msgid ""
#~ "[git](https://git-scm.com/), "
#~ "[emacs](https://www.gnu.org/software/emacs/), "
#~ "[vi](https://vim.org/) (actually `vim-tiny`), "
#~ "[jed](https://www.jedsoft.org/jed/), [nano](https://www.nano-"
#~ "editor.org/), tzdata, and"
#~ msgstr ""

#~ msgid "unzip"
#~ msgstr ""

#~ msgid ""
#~ "[pandas](https://pandas.pydata.org/), "
#~ "[numexpr](https://github.com/pydata/numexpr), "
#~ "[matplotlib](https://matplotlib.org/), "
#~ "[scipy](https://www.scipy.org/),"
#~ msgstr ""

#~ msgid ""
#~ "[seaborn](https://seaborn.pydata.org/), [scikit-"
#~ "learn](http://scikit-learn.org/stable/), [scikit-"
#~ "image](http://scikit-image.org/), "
#~ "[sympy](http://www.sympy.org/en/index.html), "
#~ "[cython](http://cython.org/), "
#~ "[patsy](https://patsy.readthedocs.io/en/latest/), "
#~ "[statsmodel](http://www.statsmodels.org/stable/index.html), "
#~ "[cloudpickle](https://github.com/cloudpipe/cloudpickle), "
#~ "[dill](https://pypi.python.org/pypi/dill), "
#~ "[numba](https://numba.pydata.org/), "
#~ "[bokeh](https://bokeh.pydata.org/en/latest/), "
#~ "[sqlalchemy](https://www.sqlalchemy.org/), "
#~ "[hdf5](http://www.h5py.org/), "
#~ "[vincent](http://vincent.readthedocs.io/en/latest/), "
#~ "[beautifulsoup](https://www.crummy.com/software/BeautifulSoup/), "
#~ "[protobuf](https://developers.google.com/protocol-"
#~ "buffers/docs/pythontutorial), and [xlrd](http://www"
#~ ".python-excel.org/) packages * "
#~ "[ipywidgets](https://ipywidgets.readthedocs.io/en/stable/) and"
#~ " [ipympl](https://github.com/matplotlib/jupyter-matplotlib)"
#~ " for interactive visualizations and plots"
#~ " in Python notebooks * "
#~ "[Facets](https://github.com/PAIR-code/facets) for "
#~ "visualizing machine learning datasets"
#~ msgstr ""

#~ msgid "Try it on binder: [![launch Learn You a Haskell for Great"
#~ msgstr ""

#~ msgid ""
#~ "Good!](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/jamesdbrock"
#~ "/learn-you-a-haskell-"
#~ "notebook/master?urlpath=lab/tree/learn_you_a_haskell/00-preface.ipynb)"
#~ msgstr ""

#~ msgid ""
#~ "`-e NB_USER=jovyan` - Instructs the "
#~ "startup script to change the default "
#~ "container username from `jovyan` to the"
#~ " provided value. Causes the script to"
#~ " rename the `jovyan` user home "
#~ "folder. For this option to take "
#~ "effect, you must run the container "
#~ "with `--user root` and set the "
#~ "working directory `-w /home/$NB_USER`. This"
#~ " feature is useful when mounting host"
#~ " volumes with specific home folder."
#~ msgstr ""

#~ msgid ""
#~ "`jupyter/pyspark-notebook` includes Python "
#~ "support for Apache Spark, optionally on"
#~ " Mesos."
#~ msgstr ""

#~ msgid "[Mesos](http://mesos.apache.org/) client libraries"
#~ msgstr ""

#~ msgid ""
#~ "`jupyter/all-spark-notebook` includes Python,"
#~ " R, and Scala support for Apache "
#~ "Spark, optionally on Mesos."
#~ msgstr ""

#~ msgid "### Connecting to a Spark Cluster on Mesos"
#~ msgstr ""

# 4926e921fbd24baba9888b3f08cf4f51
#~ msgid "This configuration allows your compute cluster to scale with your data."
#~ msgstr ""

#~ msgid ""
#~ "[Deploy Spark on "
#~ "Mesos](http://spark.apache.org/docs/latest/running-on-"
#~ "mesos.html)."
#~ msgstr ""

#~ msgid ""
#~ "Configure each slave with [the `--no-"
#~ "switch_user` flag](https://open.mesosphere.com/reference"
#~ "/mesos-slave/) or create the `$NB_USER` "
#~ "account on every slave node."
#~ msgstr ""

# 16c4327879294075a64b4329f972321c
#~ msgid "Follow the language specific instructions below."
#~ msgstr ""

#~ msgid ""
#~ "# point to mesos master or "
#~ "zookeeper entry (e.g., zk://10.10.10.10:2181/mesos)"
#~ " conf.setMaster(\"mesos://10.10.10.10:5050\") # point"
#~ " to spark binary package in HDFS "
#~ "or on local filesystem on all "
#~ "slave # nodes (e.g., "
#~ "file:///opt/spark/spark-2.2.0-bin-hadoop2.7.tgz) "
#~ "conf.set(\"spark.executor.uri\", "
#~ "\"hdfs://10.10.10.10/spark/spark-2.2.0-bin-hadoop2.7.tgz\") "
#~ "# set other options as desired "
#~ "conf.set(\"spark.executor.memory\", \"8g\") "
#~ "conf.set(\"spark.core.connection.ack.wait.timeout\", \"1200\")"
#~ msgstr ""

#~ msgid ""
#~ "# Point to mesos master or "
#~ "zookeeper entry (e.g., zk://10.10.10.10:2181/mesos)"
#~ " # Point to spark binary package "
#~ "in HDFS or on local filesystem on"
#~ " all slave # nodes (e.g., "
#~ "file:///opt/spark/spark-2.2.0-bin-hadoop2.7.tgz) in "
#~ "sparkEnvir # Set other options in "
#~ "sparkEnvir sc <- "
#~ "sparkR.session(\"mesos://10.10.10.10:5050\", sparkEnvir=list("
#~ msgstr ""

#~ msgid ""
#~ "spark.executor.uri=\"hdfs://10.10.10.10/spark/spark-2.2.0-bin-"
#~ "hadoop2.7.tgz\", spark.executor.memory=\"8g\" )"
#~ msgstr ""

#~ msgid ""
#~ "```python %%init_spark # Configure the "
#~ "location of the mesos master and "
#~ "spark distribution on HDFS launcher.master "
#~ "= \"mesos://10.10.10.10:5050\" "
#~ "launcher.conf.spark.executor.uri=hdfs://10.10.10.10/spark/spark-2.2.0"
#~ "-bin-hadoop2.7.tgz ```"
#~ msgstr ""

#~ msgid ""
#~ "The Apache Toree kernel automatically "
#~ "creates a `SparkContext` when it starts"
#~ " based on configuration information from"
#~ " its command line arguments and "
#~ "environment variables. You can pass "
#~ "information about your Mesos cluster via"
#~ " the `SPARK_OPTS` environment variable when"
#~ " you spawn a container."
#~ msgstr ""

# 3e3d5ec9fa554e75989856139938f4f8
#~ msgid ""
#~ "For instance, to pass information about"
#~ " a Mesos master, Spark binary "
#~ "location in HDFS, and an executor "
#~ "options, you could start the container"
#~ " like so:"
#~ msgstr ""

#~ msgid ""
#~ "``` docker run -d -p 8888:8888 -e"
#~ " SPARK_OPTS='--master=mesos://10.10.10.10:5050 \\"
#~ msgstr ""

#~ msgid ""
#~ "--spark.executor.uri=hdfs://10.10.10.10/spark/spark-2.2.0-bin-"
#~ "hadoop2.7.tgz \\ --spark.executor.memory=8g' jupyter"
#~ "/all-spark-notebook"
#~ msgstr ""

# 3c781f06114240e28dcdb0c40a5d5cf5
#~ msgid ""
#~ "The language specific instructions are "
#~ "almost same as mentioned above for "
#~ "Mesos, only the master url would "
#~ "now be something like spark://10.10.10.10:7077"
#~ msgstr ""

#~ msgid ""
#~ "**Specific Docker Image Options** * `-p"
#~ " 4040:4040` - The `jupyter/pyspark-"
#~ "notebook` and `jupyter/all-spark-notebook` "
#~ "images open [SparkUI (Spark Monitoring "
#~ "and Instrumentation "
#~ "UI)](http://spark.apache.org/docs/latest/monitoring.html) at "
#~ "default port `4040`, this option map "
#~ "`4040` port inside docker container to"
#~ " `4040` port on host machine . "
#~ "Note every new spark context that "
#~ "is created is put onto an "
#~ "incrementing port (ie. 4040, 4041, 4042,"
#~ " etc.), and it might be necessary "
#~ "to open multiple ports. For example: "
#~ "`docker run -d -p 8888:8888 -p "
#~ "4040:4040 -p 4041:4041 jupyter/pyspark-"
#~ "notebook`"
#~ msgstr ""

# 15a0171869f3437481b9dfb2aec3db00
#~ msgid ""
#~ "Spark local mode is useful for "
#~ "experimentation on small data when you"
#~ " do not have a Spark cluster "
#~ "available."
#~ msgstr ""

#~ msgid "#### In a Python Notebook"
#~ msgstr ""

#~ msgid ""
#~ "```python from pyspark.sql import SparkSession"
#~ " spark = "
#~ "SparkSession.builder.appName(\"SimpleApp\").getOrCreate() # "
#~ "do something to prove it works "
#~ "spark.sql('SELECT \"Test\" as c1').show() ```"
#~ msgstr ""

#~ msgid "#### In a R Notebook"
#~ msgstr ""

#~ msgid "```r library(SparkR)"
#~ msgstr ""

#~ msgid "as <- sparkR.session(\"local[*]\")"
#~ msgstr ""

#~ msgid ""
#~ "# do something to prove it works"
#~ " df <- as.DataFrame(iris) head(filter(df, "
#~ "df$Petal_Width > 0.2)) ```"
#~ msgstr ""

#~ msgid "#### In a Spylon Kernel Scala Notebook"
#~ msgstr ""

#~ msgid ""
#~ "```python %%init_spark # Configure Spark "
#~ "to use a local master launcher.master"
#~ " = \"local[*]\" ```"
#~ msgstr ""

#~ msgid ""
#~ "```scala // Now run Scala code "
#~ "that uses the initialized SparkContext "
#~ "in sc val rdd = sc.parallelize(0 "
#~ "to 999) rdd.takeSample(false, 5) ```"
#~ msgstr ""

#~ msgid "#### In an Apache Toree Scala Notebook"
#~ msgstr ""

#~ msgid ""
#~ "```scala val rdd = sc.parallelize(0 to"
#~ " 999) rdd.takeSample(false, 5) ```"
#~ msgstr ""

# 79db0ba4244a4701aa8dfe0053d5579c
#~ msgid ""
#~ "Connection to Spark Cluster on "
#~ "Standalone Mode requires the following "
#~ "set of steps:"
#~ msgstr ""

#~ msgid ""
#~ "```python import os # make sure "
#~ "pyspark tells workers to use python3 "
#~ "not 2 if both are installed "
#~ "os.environ['PYSPARK_PYTHON'] = '/usr/bin/python3'"
#~ msgstr ""

#~ msgid "import pyspark conf = pyspark.SparkConf()"
#~ msgstr ""

#~ msgid ""
#~ "# Point to spark master "
#~ "conf.setMaster(\"spark://10.10.10.10:7070\") # point "
#~ "to spark binary package in HDFS or"
#~ " on local filesystem on all slave "
#~ "# nodes (e.g., file:///opt/spark/spark-2.2.0-bin-"
#~ "hadoop2.7.tgz) conf.set(\"spark.executor.uri\", "
#~ "\"hdfs://10.10.10.10/spark/spark-2.2.0-bin-hadoop2.7.tgz\") "
#~ "# set other options as desired "
#~ "conf.set(\"spark.executor.memory\", \"8g\") "
#~ "conf.set(\"spark.core.connection.ack.wait.timeout\", \"1200\")"
#~ msgstr ""

#~ msgid "# create the context sc = pyspark.SparkContext(conf=conf)"
#~ msgstr ""

#~ msgid ""
#~ "# do something to prove it works"
#~ " rdd = sc.parallelize(range(100000000)) "
#~ "rdd.sumApprox(3) ```"
#~ msgstr ""

#~ msgid ""
#~ "# Point to spark master # Point"
#~ " to spark binary package in HDFS "
#~ "or on local filesystem on all "
#~ "worker # nodes (e.g., "
#~ "file:///opt/spark/spark-2.2.0-bin-hadoop2.7.tgz) in "
#~ "sparkEnvir # Set other options in "
#~ "sparkEnvir sc <- "
#~ "sparkR.session(\"spark://10.10.10.10:7070\", sparkEnvir=list("
#~ msgstr ""

#~ msgid ""
#~ "spark.executor.uri=\"hdfs://10.10.10.10/spark/spark-2.4.3-bin-"
#~ "hadoop2.7.tgz\", spark.executor.memory=\"8g\" )"
#~ msgstr ""

#~ msgid ""
#~ "# do something to prove it works"
#~ " data(iris) df <- as.DataFrame(iris) "
#~ "head(filter(df, df$Petal_Width > 0.2)) ```"
#~ msgstr ""

#~ msgid ""
#~ "```python %%init_spark # Point to spark"
#~ " master launcher.master = "
#~ "\"spark://10.10.10.10:7070\" "
#~ "launcher.conf.spark.executor.uri=hdfs://10.10.10.10/spark/spark-2.4.3"
#~ "-bin-hadoop2.7.tgz ```"
#~ msgstr ""

#~ msgid ""
#~ "For instance, to pass information about"
#~ " a standalone Spark master, Spark "
#~ "binary location in HDFS, and an "
#~ "executor options, you could start the"
#~ " container like so:"
#~ msgstr ""

#~ msgid ""
#~ "``` docker run -d -p 8888:8888 -e"
#~ " SPARK_OPTS='--master=spark://10.10.10.10:7070 \\"
#~ msgstr ""

#~ msgid ""
#~ "--spark.executor.uri=hdfs://10.10.10.10/spark/spark-2.4.3-bin-"
#~ "hadoop2.7.tgz \\ --spark.executor.memory=8g' jupyter"
#~ "/all-spark-notebook"
#~ msgstr ""

#~ msgid ""
#~ "// do something to prove it works"
#~ " val rdd = sc.parallelize(0 to "
#~ "99999999) rdd.sum() ```"
#~ msgstr ""

#~ msgid ""
#~ "``` docker run -d -p 8888:8888 "
#~ "jupyter/base-notebook start-notebook.sh "
#~ "--NotebookApp.password='sha1:74ba40f8a388:c913541b7ee99d15d5ed31d4226bf7838f83a50e'"
#~ " ```"
#~ msgstr ""

#~ msgid ""
#~ "``` docker run -d -p 8888:8888 "
#~ "jupyter/base-notebook start-notebook.sh "
#~ "--NotebookApp.base_url=/some/path ```"
#~ msgstr ""

#~ msgid "``` docker run -d -p 8888:8888 \\"
#~ msgstr ""

#~ msgid "``` docker run -it --rm jupyter/base-notebook start.sh ipython ```"
#~ msgstr ""

#~ msgid ""
#~ "``` docker run -it --rm -p "
#~ "8888:8888 jupyter/base-notebook start.sh "
#~ "jupyter lab ```"
#~ msgstr ""

#~ msgid ""
#~ "``` # install a package into the"
#~ " default (python 3.x) environment pip "
#~ "install some-package conda install "
#~ "some-package ```"
#~ msgstr ""

#~ msgid ""
#~ "``` docker run -it -e GRANT_SUDO=yes "
#~ "--user root jupyter/minimal-notebook ```"
#~ msgstr ""

#~ msgid "``` # Choose your desired base image FROM jupyter/scipy-notebook:latest"
#~ msgstr ""

#~ msgid ""
#~ "``` # Choose your desired base "
#~ "image FROM jupyter/minimal-notebook:latest"
#~ msgstr ""

#~ msgid ""
#~ "And build the image as: ``` docker"
#~ " build -t jupyter/scipy-dasklabextension:latest"
#~ " . ```"
#~ msgstr ""

#~ msgid ""
#~ "Once built, run using the command: "
#~ "``` docker run -it --rm -p "
#~ "8888:8888 -p 8787:8787 jupyter/scipy-"
#~ "dasklabextension:latest ```"
#~ msgstr ""

#~ msgid ""
#~ "``` # Add Live slideshows with "
#~ "RISE RUN conda install -c damianavila82"
#~ " rise ```"
#~ msgstr ""

#~ msgid "``` %%bash conda install -y gcc pip install xgboost"
#~ msgstr ""

#~ msgid ""
#~ "``` FROM  jupyter/base-notebook:5ded1de07260 "
#~ "RUN pip install jupyterhub==0.8.0b1 ```"
#~ msgstr ""

#~ msgid ""
#~ "``` import os os.environ['PYSPARK_SUBMIT_ARGS'] "
#~ "= '--jars /home/jovyan/spark-streaming-"
#~ "kafka-assembly_2.10-1.6.1.jar pyspark-shell' "
#~ "import pyspark from pyspark.streaming.kafka "
#~ "import KafkaUtils from pyspark.streaming "
#~ "import StreamingContext sc = "
#~ "pyspark.SparkContext() ssc = StreamingContext(sc,1)"
#~ " broker = \"<my_broker_ip>\" directKafkaStream"
#~ " = KafkaUtils.createDirectStream(ssc, [\"test1\"], "
#~ "{\"metadata.broker.list\": broker}) "
#~ "directKafkaStream.pprint() ssc.start() ```"
#~ msgstr ""

#~ msgid "``` FROM jupyter/all-spark-notebook"
#~ msgstr ""

#~ msgid ""
#~ "``` docker run jupyter/base-"
#~ "notebook:6d2a05346196 start.sh jupyter lab "
#~ "--LabApp.token='' ```"
#~ msgstr ""

#~ msgid ""
#~ "``` docker run jupyter/base-"
#~ "notebook:6d2a05346196 start.sh jupyter notebook "
#~ "--NotebookApp.token='' ```"
#~ msgstr ""

#~ msgid ""
#~ "``` # Update with your base image"
#~ " of choice FROM jupyter/minimal-"
#~ "notebook:latest"
#~ msgstr ""

#~ msgid ""
#~ "``` ARG BASE_CONTAINER=jupyter/scipy-notebook "
#~ "FROM jupyter/scipy-notebook:latest"
#~ msgstr ""

#~ msgid ""
#~ "Run the Docker container with "
#~ "`--net=host` in a location that is "
#~ "network addressable by all of your "
#~ "Spark workers. (This is a [Spark "
#~ "networking requirement](http://spark.apache.org/docs/latest"
#~ "/cluster-overview.html#components).)"
#~ msgstr ""

#~ msgid ""
#~ "NOTE: When using `--net=host`, you must"
#~ " also use the flags `--pid=host -e"
#~ " TINI_SUBREAPER=true`. See https://github.com/jupyter"
#~ "/docker-stacks/issues/64 for details."
#~ msgstr ""

#~ msgid ""
#~ "# Workaround for a mandb bug, "
#~ "should be fixed in mandb > 2.8.5"
#~ " # https://git.savannah.gnu.org/cgit/man-"
#~ "db.git/commit/?id=8197d7824f814c5d4b992b4c8730b5b0f7ec589a RUN"
#~ " echo \"MANPATH_MAP ${CONDA_DIR}/bin "
#~ "${CONDA_DIR}/man\" >> /etc/manpath.config \\"
#~ msgstr ""

#~ msgid ""
#~ "Adding the documentation on top of "
#~ "an existing singleuser image wastes a"
#~ " lot of space and requires "
#~ "reinstalling every system package, which "
#~ "can take additional time and bandwidth;"
#~ " the `datascience-notebook` image has "
#~ "been shown to grow by almost 3GB"
#~ " when adding manapages in this way."
#~ " Enabling manpages in the base Ubuntu"
#~ " layer prevents this container bloat:"
#~ msgstr ""

#~ msgid ""
#~ "```Dockerfile # Ubuntu 18.04 (bionic) "
#~ "from 2018-05-26 # https://github.com/docker-"
#~ "library/official-"
#~ "images/commit/aac6a45b9eb2bffb8102353c350d341a410fb169 ARG "
#~ "BASE_CONTAINER=ubuntu:bionic-20180526@sha256:c8c275751219dadad8fa56b3ac41ca6cb22219ff117ca98fe82b42f24e1ba64e"
#~ " FROM $BASE_CONTAINER"
#~ msgstr ""

#~ msgid ""
#~ "ENV DEBIAN_FRONTEND noninteractive # Remove"
#~ " the manpage blacklist, install man, "
#~ "install docs RUN rm "
#~ "/etc/dpkg/dpkg.cfg.d/excludes \\"
#~ msgstr ""

#~ msgid ""
#~ "# Workaround for a mandb bug, "
#~ "should be fixed in mandb > 2.8.5"
#~ " # https://git.savannah.gnu.org/cgit/man-"
#~ "db.git/commit/?id=8197d7824f814c5d4b992b4c8730b5b0f7ec589a RUN"
#~ " echo \"MANPATH_MAP /opt/conda/bin "
#~ "/opt/conda/man\" >> /etc/manpath.config \\"
#~ msgstr ""

#~ msgid ""
#~ "&& echo \"MANPATH_MAP /opt/conda/bin "
#~ "/opt/conda/share/man\" >> /etc/manpath.config"
#~ msgstr ""

#~ msgid ""
#~ "[tidyr](http://tidyr.tidyverse.org/), "
#~ "[readr](http://readr.tidyverse.org/), "
#~ "[purrr](http://purrr.tidyverse.org/), "
#~ "[tibble](http://tibble.tidyverse.org/), "
#~ "[stringr](http://stringr.tidyverse.org/), "
#~ "[lubridate](http://lubridate.tidyverse.org/), and "
#~ "[broom](https://cran.r-project.org/web/packages/broom/vignettes/broom.html)"
#~ " from [conda-forge](https://conda-"
#~ "forge.github.io/feedstocks) * "
#~ "[plyr](https://cran.r-project.org/web/packages/plyr/index.html), "
#~ "[devtools](https://cran.r-project.org/web/packages/devtools/index.html),"
#~ " [shiny](https://shiny.rstudio.com/), "
#~ "[rmarkdown](http://rmarkdown.rstudio.com/), "
#~ "[forecast](https://cran.r-project.org/web/packages/forecast/forecast.pdf),"
#~ " "
#~ "[rsqlite](https://cran.r-project.org/web/packages/RSQLite/index.html),"
#~ " "
#~ "[reshape2](https://cran.r-project.org/web/packages/reshape2/reshape2.pdf),"
#~ " "
#~ "[nycflights13](https://cran.r-project.org/web/packages/nycflights13/index.html),"
#~ " [caret](http://topepo.github.io/caret/index.html), "
#~ "[rcurl](https://cran.r-project.org/web/packages/RCurl/index.html), "
#~ "and "
#~ "[randomforest](https://cran.r-project.org/web/packages/randomForest/randomForest.pdf)"
#~ " packages from [conda-forge](https://conda-"
#~ "forge.github.io/feedstocks)"
#~ msgstr ""

#~ msgid ""
#~ "[tidyverse](https://www.tidyverse.org/) packages, "
#~ "including [ggplot2](http://ggplot2.org/), "
#~ "[dplyr](http://dplyr.tidyverse.org/),"
#~ msgstr ""

#~ msgid ""
#~ "[tidyr](http://tidyr.tidyverse.org/), "
#~ "[readr](http://readr.tidyverse.org/), "
#~ "[purrr](http://purrr.tidyverse.org/), "
#~ "[tibble](http://tibble.tidyverse.org/), "
#~ "[stringr](http://stringr.tidyverse.org/), "
#~ "[lubridate](http://lubridate.tidyverse.org/), and "
#~ "[broom](https://cran.r-project.org/web/packages/broom/vignettes/broom.html)"
#~ " from [conda-forge](https://conda-"
#~ "forge.github.io/feedstocks) * "
#~ "[devtools](https://cran.r-project.org/web/packages/devtools/index.html),"
#~ " [shiny](https://shiny.rstudio.com/), "
#~ "[rmarkdown](http://rmarkdown.rstudio.com/), "
#~ "[forecast](https://cran.r-project.org/web/packages/forecast/forecast.pdf),"
#~ " "
#~ "[rsqlite](https://cran.r-project.org/web/packages/RSQLite/index.html),"
#~ " "
#~ "[nycflights13](https://cran.r-project.org/web/packages/nycflights13/index.html),"
#~ " [caret](http://topepo.github.io/caret/index.html), "
#~ "[tidymodels](https://www.tidymodels.org/), "
#~ "[rcurl](https://cran.r-project.org/web/packages/RCurl/index.html), "
#~ "and "
#~ "[randomforest](https://cran.r-project.org/web/packages/randomForest/randomForest.pdf)"
#~ " packages from [conda-forge](https://conda-"
#~ "forge.github.io/feedstocks)"
#~ msgstr ""

#~ msgid ""
#~ "[dask](https://dask.org/), [pandas](https://pandas.pydata.org/),"
#~ " [numexpr](https://github.com/pydata/numexpr), "
#~ "[matplotlib](https://matplotlib.org/), "
#~ "[scipy](https://www.scipy.org/),"
#~ msgstr ""

#~ msgid ""
#~ "[seaborn](https://seaborn.pydata.org/), [scikit-"
#~ "learn](http://scikit-learn.org/stable/), [scikit-"
#~ "image](http://scikit-image.org/), "
#~ "[sympy](http://www.sympy.org/en/index.html), "
#~ "[cython](http://cython.org/), "
#~ "[patsy](https://patsy.readthedocs.io/en/latest/), "
#~ "[statsmodel](http://www.statsmodels.org/stable/index.html), "
#~ "[cloudpickle](https://github.com/cloudpipe/cloudpickle), "
#~ "[dill](https://pypi.python.org/pypi/dill), "
#~ "[numba](https://numba.pydata.org/), "
#~ "[bokeh](https://bokeh.pydata.org/en/latest/), "
#~ "[sqlalchemy](https://www.sqlalchemy.org/), "
#~ "[hdf5](http://www.h5py.org/), "
#~ "[vincent](http://vincent.readthedocs.io/en/latest/), "
#~ "[beautifulsoup](https://www.crummy.com/software/BeautifulSoup/), "
#~ "[protobuf](https://developers.google.com/protocol-"
#~ "buffers/docs/pythontutorial), [xlrd](http://www.python-"
#~ "excel.org/), "
#~ "[bottleneck](https://bottleneck.readthedocs.io/en/latest/), and"
#~ " [pytables](https://www.pytables.org/) packages * "
#~ "[ipywidgets](https://ipywidgets.readthedocs.io/en/stable/) and"
#~ " [ipympl](https://github.com/matplotlib/jupyter-matplotlib)"
#~ " for interactive visualizations and plots"
#~ " in Python notebooks * "
#~ "[Facets](https://github.com/PAIR-code/facets) for "
#~ "visualizing machine learning datasets"
#~ msgstr ""

#~ msgid ""
#~ "Pull requests to the `jupyter/docker-"
#~ "stacks` repository trigger builds of all"
#~ " images on Travis CI. These images"
#~ " are for testing purposes only and"
#~ " are not saved for use. When "
#~ "pull requests merge to master, all "
#~ "images rebuild on Docker Cloud and "
#~ "become available to `docker pull` from"
#~ " Docker Hub."
#~ msgstr ""

#~ msgid ""
#~ "[csharp-notebook is a community Jupyter"
#~ " Docker Stack image. Try C# in "
#~ "Jupyter Notebooks](https://github.com/tlinnet/csharp-"
#~ "notebook). The image includes more"
#~ msgstr ""

#~ msgid ""
#~ "than 200 Jupyter Notebooks with example"
#~ " C# code and can readily be "
#~ "tried online via mybinder.org. Click "
#~ "here to launch "
#~ "[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/tlinnet"
#~ "/csharp-notebook/master)."
#~ msgstr ""

#~ msgid ""
#~ "[education-notebook is a community "
#~ "Jupyter Docker Stack image](https://github.com"
#~ "/umsi-mads/education-notebook). The image "
#~ "includes nbgrader and RISE on top "
#~ "of"
#~ msgstr ""

#~ msgid ""
#~ "the datascience-notebook image. Click "
#~ "here to launch it on "
#~ "[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh"
#~ "/umsi-mads/education-notebook/master)."
#~ msgstr ""

#~ msgid "__crosscompass/ihaskell-notebook__"
#~ msgstr ""

#~ msgid ""
#~ "[java-notebook is a community Jupyter"
#~ " Docker Stack image](https://github.com/jbindinga"
#~ "/java-notebook). The image includes"
#~ msgstr ""

#~ msgid ""
#~ "[IJava](https://github.com/SpencerPark/IJava) kernel on"
#~ " top of the minimal-notebook image."
#~ " Click here to launch it on "
#~ "[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/jbindinga"
#~ "/java-notebook/master)."
#~ msgstr ""

#~ msgid ""
#~ "[sage-notebook](https://github.com/sharpTrick/sage-"
#~ "notebook) is a community Jupyter Docker"
#~ " Stack image with the "
#~ "[sagemath](https://sagemath.org) kernel on top "
#~ "of"
#~ msgstr ""

#~ msgid ""
#~ "the minimal-notebook image. Click here"
#~ " to launch it on "
#~ "[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/sharpTrick"
#~ "/sage-notebook/master)."
#~ msgstr ""

#~ msgid ""
#~ "[GPU-Jupyter](https://github.com/iot-salzburg/gpu-"
#~ "jupyter/): Leverage Jupyter Notebooks with "
#~ "the power of your NVIDIA GPU and"
#~ " perform GPU calculations using"
#~ msgstr ""

#~ msgid ""
#~ "Tensorflow and Pytorch in collaborative "
#~ "notebooks. This is done by generating"
#~ " a Dockerfile, that consists of the"
#~ " **nvidia/cuda** base image, the well-"
#~ "maintained **docker-stacks** that is "
#~ "integrated as submodule and GPU-able "
#~ "libraries like **Tensorflow**, **Keras** and"
#~ " **PyTorch** on top of it."
#~ msgstr ""

#~ msgid ""
#~ "[cgspatial-notebook](https://github.com/SCiO-systems"
#~ "/cgspatial-notebook) is a community Jupyter"
#~ " Docker Stack image. The image "
#~ "includes major geospatial Python &"
#~ msgstr ""

#~ msgid ""
#~ "R libraries on top of the "
#~ "datascience-notebook image. Try it on "
#~ "binder:[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh"
#~ "/SCiO-systems/cgspatial-notebook/master)"
#~ msgstr ""

#~ msgid "## Apache Spark"
#~ msgstr ""

#~ msgid "**Specific Docker Image Options**"
#~ msgstr ""

#~ msgid "**Usage Examples**"
#~ msgstr ""

#~ msgid "### Using Spark Local Mode"
#~ msgstr ""

#~ msgid "#### In Python"
#~ msgstr ""

#~ msgid "#### In R"
#~ msgstr ""

#~ msgid "#### In Scala"
#~ msgstr ""

#~ msgid "##### In a Spylon Kernel"
#~ msgstr ""

#~ msgid "##### In an Apache Toree Kernel"
#~ msgstr ""

#~ msgid ""
#~ "Apache Toree instantiates a local "
#~ "`SparkContext` for you in variable `sc`"
#~ " when the kernel starts."
#~ msgstr ""

#~ msgid "### Connecting to a Spark Cluster in Standalone Mode"
#~ msgstr ""

#~ msgid "##### In an Apache Toree Scala Notebook"
#~ msgstr ""

#~ msgid ""
#~ "The Apache Toree kernel automatically "
#~ "creates a `SparkContext` when it starts"
#~ " based on configuration information from"
#~ " its command line arguments and "
#~ "environment variables. You can pass "
#~ "information about your cluster via the"
#~ " `SPARK_OPTS` environment variable when you"
#~ " spawn a container."
#~ msgstr ""

#~ msgid ""
#~ "For instance, to pass information about"
#~ " a standalone Spark master, you could"
#~ " start the container like so:"
#~ msgstr ""

#~ msgid ""
#~ "```bash docker run -d -p 8888:8888 "
#~ "-e SPARK_OPTS='--master=spark://master:7077' \\"
#~ msgstr ""

# fa8494a4dde544109b9f6f49ac28178f
#~ msgid ""
#~ "Note that this is the same "
#~ "information expressed in a notebook in"
#~ " the Python case above. Once the "
#~ "kernel spec has your cluster "
#~ "information, you can test your cluster"
#~ " in an Apache Toree notebook like "
#~ "so:"
#~ msgstr ""

#~ msgid ""
#~ "```scala // should print the value "
#~ "of --master in the kernel spec "
#~ "println(sc.master)"
#~ msgstr ""

#~ msgid ""
#~ "// Sum of the first 100 whole "
#~ "numbers val rdd = sc.parallelize(0 to"
#~ " 100) rdd.sum() // 5050 ```"
#~ msgstr ""

#~ msgid ""
#~ "Spark distribution is defined by the "
#~ "combination of the Spark and the "
#~ "Hadoop version and verified by the "
#~ "package checksum, see [Download Apache "
#~ "Spark](https://spark.apache.org/downloads.html) for more"
#~ " information. * `spark_version`: The Spark"
#~ " version to install (`3.0.0`). * "
#~ "`hadoop_version`: The Hadoop version (`3.2`)."
#~ " * `spark_checksum`: The package checksum"
#~ " (`BFE4540...`)."
#~ msgstr ""

#~ msgid ""
#~ "[git](https://git-scm.com/), "
#~ "[emacs](https://www.gnu.org/software/emacs/) (actually "
#~ "`emacs-nox`), [vi](https://vim.org/) (actually "
#~ "`vim-tiny`), [jed](https://www.jedsoft.org/jed/), "
#~ "[nano](https://www.nano-editor.org/), tzdata, and"
#~ " unzip"
#~ msgstr ""

#~ msgid ""
#~ "[tidyverse](https://www.tidyverse.org/) packages, "
#~ "including [ggplot2](http://ggplot2.org/), "
#~ "[dplyr](http://dplyr.tidyverse.org/), "
#~ "[tidyr](http://tidyr.tidyverse.org/), "
#~ "[readr](http://readr.tidyverse.org/), "
#~ "[purrr](http://purrr.tidyverse.org/), "
#~ "[tibble](http://tibble.tidyverse.org/), "
#~ "[stringr](http://stringr.tidyverse.org/), "
#~ "[lubridate](http://lubridate.tidyverse.org/), and "
#~ "[broom](https://cran.r-project.org/web/packages/broom/vignettes/broom.html)"
#~ " from [conda-forge](https://conda-"
#~ "forge.github.io/feedstocks)"
#~ msgstr ""

#~ msgid ""
#~ "```dockerfile # Start from a core "
#~ "stack version FROM jupyter/datascience-"
#~ "notebook:9f9e5ca8fe5a # Install from "
#~ "requirements.txt file COPY requirements.txt "
#~ "/tmp/ RUN pip install --requirement "
#~ "/tmp/requirements.txt && \\"
#~ msgstr ""

#~ msgid ""
#~ "```dockerfile # Start from a core "
#~ "stack version FROM jupyter/datascience-"
#~ "notebook:9f9e5ca8fe5a # Install from "
#~ "requirements.txt file COPY requirements.txt "
#~ "/tmp/ RUN conda install --yes --file "
#~ "/tmp/requirements.txt && \\"
#~ msgstr ""

#~ msgid ""
#~ "# COPY environment.yml /home/$NB_USER/tmp/ #"
#~ " RUN cd /home/$NB_USER/tmp/ && \\ #"
#~ "     conda env create -p "
#~ "$CONDA_DIR/envs/$conda_env -f environment.yml && "
#~ "\\ #     conda clean --all -f -y"
#~ msgstr ""

#~ msgid "[Miniconda](https://conda.io/miniconda.html) Python 3.x in `/opt/conda`"
#~ msgstr ""

#~ msgid ""
#~ "[git](https://git-scm.com/), "
#~ "[emacs](https://www.gnu.org/software/emacs/) (actually "
#~ "`emacs-nox`), [vi](https://vim.org/) (actually "
#~ "`vim-tiny`), [jed](https://www.jedsoft.org/jed/), "
#~ "[nano](https://www.nano-editor.org/) (actually "
#~ "`nano-tiny`), tzdata, and unzip"
#~ msgstr ""

#~ msgid ""
#~ "Spark is shipped with a version of"
#~ " Py4J that has to be referenced "
#~ "in the `PYTHONPATH`. * `py4j_version`: "
#~ "The Py4J version (`0.10.9`), see the "
#~ "tip below."
#~ msgstr ""

#~ msgid ""
#~ "-t jupyter/pyspark-notebook:spark-2.4.6 "
#~ "./pyspark-notebook \\ --build-arg "
#~ "spark_version=2.4.6 \\ --build-arg "
#~ "hadoop_version=2.7 \\ --build-arg "
#~ "spark_checksum=3A9F401EDA9B5749CDAFD246B1D14219229C26387017791C345A23A65782FB8B25A302BF4AC1ED7C16A1FE83108E94E55DAD9639A51C751D81C8C0534A4A9641"
#~ " \\ --build-arg openjdk_version=8 \\ "
#~ "--build-arg py4j_version=0.10.7"
#~ msgstr ""

#~ msgid ""
#~ "# Check the newly built image "
#~ "docker images jupyter/pyspark-notebook:spark-2.4.6"
#~ msgstr ""

#~ msgid ""
#~ "# REPOSITORY                 TAG                 "
#~ "IMAGE ID            CREATED             SIZE #"
#~ " jupyter/pyspark-notebook   spark-2.4.6         "
#~ "7ad7b5a9dbcd        4 minutes ago       3.44GB"
#~ msgstr ""

#~ msgid ""
#~ "# Check the Spark version docker "
#~ "run -it --rm jupyter/pyspark-"
#~ "notebook:spark-2.4.6 pyspark --version"
#~ msgstr ""

#~ msgid ""
#~ "# Welcome to #       ____              "
#~ "__ #      / __/__  ___ _____/ /__"
#~ " #     _\\ \\/ _ \\/ _ `/ "
#~ "__/  '_/ #    /___/ .__/\\_,_/_/ "
#~ "/_/\\_\\   version 2.4.6 #       /_/ #"
#~ " # Using Scala version 2.11.12, "
#~ "OpenJDK 64-Bit Server VM, 1.8.0_265 ```"
#~ msgstr ""

#~ msgid "**Tip**: to get the version of Py4J shipped with Spark:"
#~ msgstr ""

#~ msgid ""
#~ "Build a first image without changing "
#~ "`py4j_version` (it will not prevent the"
#~ " image to build it will just "
#~ "prevent Python to find the `pyspark` "
#~ "module),"
#~ msgstr ""

#~ msgid "get the version (`ls /usr/local/spark/python/lib/`),"
#~ msgstr ""

#~ msgid "set the version `--build-arg py4j_version=0.10.7`."
#~ msgstr ""

#~ msgid ""
#~ "```bash docker run -it --rm jupyter"
#~ "/pyspark-notebook:spark-2.4.6 ls "
#~ "/usr/local/spark/python/lib/ # py4j-0.10.7-src.zip  "
#~ "PY4J_LICENSE.txt  pyspark.zip # You can "
#~ "now set the build-arg # "
#~ "--build-arg py4j_version= ```"
#~ msgstr ""

#~ msgid ""
#~ "*Note: At the time of writing "
#~ "there is an issue preventing to "
#~ "use Spark `2.4.6` with Python `3.8`, "
#~ "see [this answer on "
#~ "SO](https://stackoverflow.com/a/62173969/4413446) for more"
#~ " information.*"
#~ msgstr ""

#~ msgid "# Install the Dask dashboard RUN pip install dask_labextension ; \\"
#~ msgstr ""

#~ msgid "jupyter labextension install -y --clean \\ dask-labextension"
#~ msgstr ""

#~ msgid ""
#~ "The `jovyan` user has full read/write"
#~ " access to the `/opt/conda` directory. "
#~ "You can use either `conda` or "
#~ "`pip` to install new packages without"
#~ " any additional permissions."
#~ msgstr ""

#~ msgid ""
#~ "```bash # install a package into "
#~ "the default (python 3.x) environment pip"
#~ " install some-package conda install "
#~ "some-package ```"
#~ msgstr ""

#~ msgid ""
#~ "[Miniforge](https://github.com/conda-forge/miniforge) "
#~ "Python 3.x in `/opt/conda`"
#~ msgstr ""

#~ msgid ""
#~ "Spark distribution is defined by the "
#~ "combination of the Spark and the "
#~ "Hadoop version and verified by the "
#~ "package checksum, see [Download Apache "
#~ "Spark](https://spark.apache.org/downloads.html) for more"
#~ " information. At this time the build"
#~ " will only work with the set of"
#~ " versions available on the Apache "
#~ "Spark download page, so it will "
#~ "not work with the archived versions. "
#~ "* `spark_version`: The Spark version to"
#~ " install (`3.0.0`). * `hadoop_version`: The"
#~ " Hadoop version (`3.2`). * "
#~ "`spark_checksum`: The package checksum "
#~ "(`BFE4540...`)."
#~ msgstr ""

#~ msgid ""
#~ "And build the image as: ```bash "
#~ "docker build -t jupyter/scipy-"
#~ "dasklabextension:latest . ```"
#~ msgstr ""

#~ msgid ""
#~ "Once built, run using the command: "
#~ "```bash docker run -it --rm -p "
#~ "8888:8888 -p 8787:8787 jupyter/scipy-"
#~ "dasklabextension:latest ```"
#~ msgstr ""

#~ msgid ""
#~ "For Ubuntu 18.04 (bionic) and earlier,"
#~ " you may also require to workaround"
#~ " for a mandb bug, which was "
#~ "fixed in mandb >= 2.8.6.1: ```dockerfile"
#~ " # https://git.savannah.gnu.org/cgit/man-"
#~ "db.git/commit/?id=8197d7824f814c5d4b992b4c8730b5b0f7ec589a # "
#~ "http://launchpadlibrarian.net/435841763/man-"
#~ "db_2.8.5-2_2.8.6-1.diff.gz"
#~ msgstr ""

#~ msgid "``` docker run -p 8888:8888 jupyter/scipy-notebook:2c80cf3537ca"
#~ msgstr ""

#~ msgid ""
#~ "``` # list containers docker ps -a"
#~ " CONTAINER ID        IMAGE                   "
#~ "COMMAND                  CREATED    STATUS"
#~ "                      PORTS               NAMES "
#~ "d67fe77f1a84        jupyter/base-notebook   \"tini"
#~ " -- start-noteb…\"   44 seconds ago"
#~ "    Exited (0) 39 seconds ago"
#~ "                       cocky_mirzakhani"
#~ msgstr ""

#~ msgid ""
#~ "# start the stopped container docker "
#~ "start -a d67fe77f1a84 Executing the "
#~ "command: jupyter notebook [W 16:45:02.020 "
#~ "NotebookApp] WARNING: The notebook server "
#~ "is listening on all IP addresses "
#~ "and not using encryption. This is "
#~ "not recommended. ..."
#~ msgstr ""

#~ msgid "# remove the stopped container docker rm d67fe77f1a84 d67fe77f1a84 ```"
#~ msgstr ""

#~ msgid ""
#~ "``` docker run --rm -p 10000:8888 "
#~ "-v \"$PWD\":/home/jovyan/work "
#~ "jupyter/r-notebook:e5c5a7d3e52d"
#~ msgstr ""

#~ msgid "``` docker run -d -P --name notebook jupyter/all-spark-notebook ```"
#~ msgstr ""

#~ msgid ""
#~ "``` # get the random host port "
#~ "assigned to the container port 8888 "
#~ "docker port notebook 8888 0.0.0.0:32769"
#~ msgstr ""

#~ msgid "# get the notebook token from the logs docker logs --tail 3 notebook"
#~ msgstr ""

# c4bc333e19324e2a93118e21b1f8f360
#~ msgid ""
#~ "Together, the URL to visit on the"
#~ " host machine to access the server"
#~ " in this case is "
#~ "http://localhost:32769?token=15914ca95f495075c0aa7d0e060f1a78b6d94f70ea373b00."
#~ msgstr ""

#~ msgid "``` # stop the container docker stop notebook notebook"
#~ msgstr ""

#~ msgid "##### In Python"
#~ msgstr ""

#~ msgid "##### In R"
#~ msgstr ""

#~ msgid "##### In Scala"
#~ msgstr ""

#~ msgid ""
#~ "Run the Docker container with "
#~ "`--net=host` in a location that is "
#~ "network addressable by all of your "
#~ "Spark workers. (This is a [Spark "
#~ "networking requirement](http://spark.apache.org/docs/latest"
#~ "/cluster-overview.html#components).) * NOTE: When"
#~ " using `--net=host`, you must also "
#~ "use the flags `--pid=host -e "
#~ "TINI_SUBREAPER=true`. See https://github.com/jupyter"
#~ "/docker-stacks/issues/64 for details."
#~ msgstr ""

#~ msgid ""
#~ "You can pass [Jupyter command line "
#~ "options](https://jupyter.readthedocs.io/en/latest/projects/jupyter-"
#~ "command.html) to the `start-notebook.sh` "
#~ "script when launching the container. For"
#~ " example, to secure the Notebook "
#~ "server with a custom password hashed "
#~ "using `IPython.lib.passwd()` instead of the"
#~ " default token, you can run the "
#~ "following:"
#~ msgstr ""

#~ msgid ""
#~ "[git](https://git-scm.com/), [vi](https://vim.org/) "
#~ "(actually `vim-tiny`), [nano](https://www.nano-"
#~ "editor.org/) (actually `nano-tiny`), tzdata,"
#~ " and unzip"
#~ msgstr ""

#~ msgid ""
#~ "[ggplot2](http://ggplot2.org/), "
#~ "[sparklyr](http://spark.rstudio.com/), and "
#~ "[rcurl](https://cran.r-project.org/web/packages/RCurl/index.html) "
#~ "packages"
#~ msgstr ""

#~ msgid ""
#~ "Pull requests to the `jupyter/docker-"
#~ "stacks` repository trigger builds of all"
#~ " images on GitHub Actions. These "
#~ "images are for testing purposes only "
#~ "and are not saved for use. When"
#~ " pull requests merge to master, all"
#~ " images rebuild on Docker Cloud and"
#~ " become available to `docker pull` "
#~ "from Docker Hub."
#~ msgstr ""

#~ msgid "# Common Features"
#~ msgstr ""

#~ msgid "## Notebook Options"
#~ msgstr ""

#~ msgid ""
#~ "```bash docker run -d -p 8888:8888 "
#~ "jupyter/base-notebook start-notebook.sh "
#~ "--NotebookApp.password='sha1:74ba40f8a388:c913541b7ee99d15d5ed31d4226bf7838f83a50e'"
#~ " ```"
#~ msgstr ""

#~ msgid ""
#~ "```bash docker run -d -p 8888:8888 "
#~ "jupyter/base-notebook start-notebook.sh "
#~ "--NotebookApp.base_url=/some/path ```"
#~ msgstr ""

#~ msgid "## Docker Options"
#~ msgstr ""

#~ msgid "## Startup Hooks"
#~ msgstr ""

#~ msgid "## SSL Certificates"
#~ msgstr ""

#~ msgid "```bash docker run -d -p 8888:8888 \\"
#~ msgstr ""

#~ msgid ""
#~ "-v /some/host/folder:/etc/ssl/notebook \\ jupyter"
#~ "/base-notebook start-notebook.sh \\ "
#~ "--NotebookApp.keyfile=/etc/ssl/notebook/notebook.key "
#~ "--NotebookApp.certfile=/etc/ssl/notebook/notebook.crt"
#~ msgstr ""

#~ msgid "```"
#~ msgstr ""

#~ msgid ""
#~ "-v /some/host/folder/notebook.pem:/etc/ssl/notebook.pem \\"
#~ " jupyter/base-notebook start-notebook.sh \\"
#~ " --NotebookApp.certfile=/etc/ssl/notebook.pem"
#~ msgstr ""

#~ msgid "## Alternative Commands"
#~ msgstr ""

#~ msgid "### start.sh"
#~ msgstr ""

#~ msgid "```bash docker run -it --rm jupyter/base-notebook start.sh ipython ```"
#~ msgstr ""

#~ msgid ""
#~ "```bash docker run -it --rm -p "
#~ "8888:8888 jupyter/base-notebook start.sh "
#~ "jupyter lab ```"
#~ msgstr ""

#~ msgid "### Others"
#~ msgstr ""

#~ msgid "## Conda Environments"
#~ msgstr ""

#~ msgid ""
#~ "```bash # install a package into "
#~ "the default (python 3.x) environment pip"
#~ " install some-package conda install "
#~ "some-package mamba install some-package "
#~ "```"
#~ msgstr ""

#~ msgid "### Using alternative channels"
#~ msgstr ""

#~ msgid ""
#~ "```bash # using defaults channels to "
#~ "install a package conda install "
#~ "--channel defaults humanize # configure "
#~ "conda to add default channels at "
#~ "the top of the list conda config"
#~ " --system --prepend channels defaults # "
#~ "install a package conda install humanize"
#~ " ```"
#~ msgstr ""

#~ msgid "# Contributed Recipes"
#~ msgstr ""

#~ msgid "## Using `sudo` within a container"
#~ msgstr ""

#~ msgid ""
#~ "```bash docker run -it -e GRANT_SUDO=yes"
#~ " --user root jupyter/minimal-notebook ```"
#~ msgstr ""

#~ msgid "## Using `pip install` or `conda install` in a Child Docker image"
#~ msgstr ""

#~ msgid ""
#~ "```dockerfile # Start from a core "
#~ "stack version FROM jupyter/datascience-"
#~ "notebook:9f9e5ca8fe5a # Install in the "
#~ "default python3 environment RUN pip "
#~ "install 'ggplot==0.6.8' ```"
#~ msgstr ""

#~ msgid "```bash docker build --rm -t jupyter/my-datascience-notebook . ```"
#~ msgstr ""

#~ msgid ""
#~ "```dockerfile # Start from a core "
#~ "stack version FROM jupyter/datascience-"
#~ "notebook:9f9e5ca8fe5a # Install from "
#~ "requirements.txt file COPY "
#~ "--chown=${NB_UID}:${NB_GID} requirements.txt /tmp/ "
#~ "RUN pip install --requirement "
#~ "/tmp/requirements.txt && \\"
#~ msgstr ""

#~ msgid "fix-permissions $CONDA_DIR && \\ fix-permissions /home/$NB_USER"
#~ msgstr ""

#~ msgid ""
#~ "```dockerfile # Start from a core "
#~ "stack version FROM jupyter/datascience-"
#~ "notebook:9f9e5ca8fe5a # Install from "
#~ "requirements.txt file COPY "
#~ "--chown=${NB_UID}:${NB_GID} requirements.txt /tmp/ "
#~ "RUN conda install --yes --file "
#~ "/tmp/requirements.txt && \\"
#~ msgstr ""

#~ msgid "## Add a Python 2.x environment"
#~ msgstr ""

#~ msgid ""
#~ "```dockerfile # Choose your desired base"
#~ " image FROM jupyter/scipy-notebook:latest"
#~ msgstr ""

#~ msgid ""
#~ "# Create a Python 2.x environment "
#~ "using conda including at least the "
#~ "ipython kernel # and the kernda "
#~ "utility. Add any additional packages you"
#~ " want available for use # in a"
#~ " Python 2 notebook to the first "
#~ "line here (e.g., pandas, matplotlib, "
#~ "etc.) RUN conda create --quiet --yes "
#~ "-p $CONDA_DIR/envs/python2 python=2.7 ipython "
#~ "ipykernel kernda && \\"
#~ msgstr ""

#~ msgid "conda clean --all -f -y"
#~ msgstr ""

#~ msgid "USER root"
#~ msgstr ""

#~ msgid ""
#~ "# Create a global kernelspec in "
#~ "the image and modify it so that"
#~ " it properly activates # the python2"
#~ " conda environment. RUN "
#~ "$CONDA_DIR/envs/python2/bin/python -m ipykernel "
#~ "install && \\ $CONDA_DIR/envs/python2/bin/kernda "
#~ "-o -y /usr/local/share/jupyter/kernels/python2/kernel.json"
#~ msgstr ""

#~ msgid "USER $NB_USER ```"
#~ msgstr ""

#~ msgid "## Add a Python 3.x environment"
#~ msgstr ""

#~ msgid ""
#~ "```dockerfile # Choose your desired base"
#~ " image FROM jupyter/minimal-notebook:latest"
#~ msgstr ""

#~ msgid ""
#~ "# name your environment and choose "
#~ "python 3.x version ARG conda_env=python36 "
#~ "ARG py_ver=3.6"
#~ msgstr ""

#~ msgid ""
#~ "# you can add additional libraries "
#~ "you want conda to install by "
#~ "listing them below the first line "
#~ "and ending with \"&& \\\" RUN "
#~ "conda create --quiet --yes -p "
#~ "$CONDA_DIR/envs/$conda_env python=$py_ver ipython "
#~ "ipykernel && \\"
#~ msgstr ""

#~ msgid ""
#~ "# alternatively, you can comment out "
#~ "the lines above and uncomment those "
#~ "below # if you'd prefer to use "
#~ "a YAML file present in the docker"
#~ " build context"
#~ msgstr ""

#~ msgid ""
#~ "# COPY --chown=${NB_UID}:${NB_GID} environment.yml"
#~ " /home/$NB_USER/tmp/ # RUN cd "
#~ "/home/$NB_USER/tmp/ && \\ #     conda "
#~ "env create -p $CONDA_DIR/envs/$conda_env -f"
#~ " environment.yml && \\ #     conda "
#~ "clean --all -f -y"
#~ msgstr ""

#~ msgid ""
#~ "# create Python 3.x environment and "
#~ "link it to jupyter RUN "
#~ "$CONDA_DIR/envs/${conda_env}/bin/python -m ipykernel "
#~ "install --user --name=${conda_env} && \\"
#~ msgstr ""

#~ msgid ""
#~ "# any additional pip installs can "
#~ "be added by uncommenting the following"
#~ " line # RUN $CONDA_DIR/envs/${conda_env}/bin/pip"
#~ " install"
#~ msgstr ""

#~ msgid ""
#~ "# prepend conda environment to path "
#~ "ENV PATH $CONDA_DIR/envs/${conda_env}/bin:$PATH"
#~ msgstr ""

#~ msgid ""
#~ "# if you want this environment to"
#~ " be the default one, uncomment the"
#~ " following line: # ENV CONDA_DEFAULT_ENV"
#~ " ${conda_env} ```"
#~ msgstr ""

#~ msgid "## Run JupyterLab"
#~ msgstr ""

#~ msgid "## Dask JupyterLab Extension"
#~ msgstr ""

#~ msgid ""
#~ "```dockerfile # Start from a core "
#~ "stack version FROM jupyter/scipy-"
#~ "notebook:latest"
#~ msgstr ""

#~ msgid "# Install the Dask dashboard RUN pip install dask-labextension"
#~ msgstr ""

#~ msgid "# Dask Scheduler & Bokeh ports EXPOSE 8787 EXPOSE 8786"
#~ msgstr ""

#~ msgid ""
#~ "ENTRYPOINT [\"jupyter\", \"lab\", \"--"
#~ "ip=0.0.0.0\", \"--allow-root\"] ```"
#~ msgstr ""

#~ msgid "```bash docker build -t jupyter/scipy-dasklabextension:latest . ```"
#~ msgstr ""

#~ msgid ""
#~ "```bash docker run -it --rm -p "
#~ "8888:8888 -p 8787:8787 jupyter/scipy-"
#~ "dasklabextension:latest ```"
#~ msgstr ""

#~ msgid "## Let's Encrypt a Notebook server"
#~ msgstr ""

#~ msgid "## Slideshows with Jupyter and RISE"
#~ msgstr ""

#~ msgid ""
#~ "```bash # Add Live slideshows with "
#~ "RISE RUN conda install -c damianavila82"
#~ " rise ```"
#~ msgstr ""

#~ msgid "## xgboost"
#~ msgstr ""

#~ msgid "```bash %%bash conda install -y gcc pip install xgboost"
#~ msgstr ""

#~ msgid "import xgboost ```"
#~ msgstr ""

#~ msgid "## Running behind a nginx proxy"
#~ msgstr ""

#~ msgid "## Host volume mounts and notebook errors"
#~ msgstr ""

#~ msgid "## Manpage installation"
#~ msgstr ""

#~ msgid ""
#~ "```dockerfile # Choose your desired base"
#~ " image ARG BASE_CONTAINER=jupyter/datascience-"
#~ "notebook:latest FROM $BASE_CONTAINER"
#~ msgstr ""

#~ msgid ""
#~ "# Remove the manpage blacklist, install"
#~ " man, install docs RUN rm "
#~ "/etc/dpkg/dpkg.cfg.d/excludes \\"
#~ msgstr ""

#~ msgid ""
#~ "&& apt-get update \\ && dpkg "
#~ "-l | grep ^ii | cut -d' '"
#~ " -f3 | xargs apt-get install "
#~ "-yq --no-install-recommends --reinstall "
#~ "man \\ && apt-get clean \\ "
#~ "&& rm -rf /var/lib/apt/lists/*"
#~ msgstr ""

#~ msgid "USER $NB_UID ```"
#~ msgstr ""

#~ msgid ""
#~ "```dockerfile # Ubuntu 20.04 (focal) "
#~ "from 2020-04-23 # https://github.com/docker-"
#~ "library/official-"
#~ "images/commit/4475094895093bcc29055409494cce1e11b52f94 ARG "
#~ "BASE_CONTAINER=ubuntu:focal-20200423@sha256:238e696992ba9913d24cfc3727034985abd136e08ee3067982401acdc30cbf3f"
#~ " ```"
#~ msgstr ""

#~ msgid ""
#~ "```dockerfile # https://git.savannah.gnu.org/cgit/man-"
#~ "db.git/commit/?id=8197d7824f814c5d4b992b4c8730b5b0f7ec589a # "
#~ "http://launchpadlibrarian.net/435841763/man-"
#~ "db_2.8.5-2_2.8.6-1.diff.gz"
#~ msgstr ""

#~ msgid ""
#~ "RUN echo \"MANPATH_MAP ${CONDA_DIR}/bin "
#~ "${CONDA_DIR}/man\" >> /etc/manpath.config \\"
#~ msgstr ""

#~ msgid ""
#~ "&& echo \"MANPATH_MAP ${CONDA_DIR}/bin "
#~ "${CONDA_DIR}/share/man\" >> /etc/manpath.config \\"
#~ " && mandb"
#~ msgstr ""

#~ msgid "## JupyterHub"
#~ msgstr ""

#~ msgid "### Use JupyterHub's dockerspawner"
#~ msgstr ""

#~ msgid "### Containers with a specific version of JupyterHub"
#~ msgstr ""

#~ msgid ""
#~ "```dockerfile FROM jupyter/base-"
#~ "notebook:5ded1de07260 RUN pip install "
#~ "jupyterhub==0.8.0b1 ```"
#~ msgstr ""

#~ msgid "## Spark"
#~ msgstr ""

#~ msgid "### Using PySpark with AWS S3"
#~ msgstr ""

#~ msgid ""
#~ "```py import os # !ls "
#~ "/usr/local/spark/jars/hadoop* # to figure out"
#~ " what version of hadoop "
#~ "os.environ['PYSPARK_SUBMIT_ARGS'] = '--packages "
#~ "\"org.apache.hadoop:hadoop-aws:2.7.3\" pyspark-"
#~ "shell'"
#~ msgstr ""

#~ msgid "import pyspark myAccessKey = input() mySecretKey = input()"
#~ msgstr ""

#~ msgid "spark = pyspark.sql.SparkSession.builder \\"
#~ msgstr ""

#~ msgid ""
#~ ".master(\"local[*]\") \\ "
#~ ".config(\"spark.hadoop.fs.s3a.access.key\", myAccessKey) "
#~ "\\ .config(\"spark.hadoop.fs.s3a.secret.key\", "
#~ "mySecretKey) \\ .getOrCreate()"
#~ msgstr ""

#~ msgid "df = spark.read.parquet(\"s3://myBucket/myKey\") ```"
#~ msgstr ""

#~ msgid ""
#~ "```py import os os.environ['PYSPARK_SUBMIT_ARGS']"
#~ " = '--packages com.amazonaws:aws-java-"
#~ "sdk:1.10.34,org.apache.hadoop:hadoop-aws:2.6.0 pyspark-"
#~ "shell'"
#~ msgstr ""

#~ msgid "import pyspark sc = pyspark.SparkContext(\"local[*]\")"
#~ msgstr ""

#~ msgid "from pyspark.sql import SQLContext sqlContext = SQLContext(sc)"
#~ msgstr ""

#~ msgid ""
#~ "hadoopConf = sc._jsc.hadoopConfiguration() "
#~ "myAccessKey = input() mySecretKey = "
#~ "input() hadoopConf.set(\"fs.s3.impl\", "
#~ "\"org.apache.hadoop.fs.s3native.NativeS3FileSystem\") "
#~ "hadoopConf.set(\"fs.s3.awsAccessKeyId\", myAccessKey) "
#~ "hadoopConf.set(\"fs.s3.awsSecretAccessKey\", mySecretKey)"
#~ msgstr ""

#~ msgid "df = sqlContext.read.parquet(\"s3://myBucket/myKey\") ```"
#~ msgstr ""

#~ msgid "### Using Local Spark JARs"
#~ msgstr ""

#~ msgid ""
#~ "```python import os "
#~ "os.environ['PYSPARK_SUBMIT_ARGS'] = '--jars "
#~ "/home/jovyan/spark-streaming-kafka-"
#~ "assembly_2.10-1.6.1.jar pyspark-shell' import "
#~ "pyspark from pyspark.streaming.kafka import "
#~ "KafkaUtils from pyspark.streaming import "
#~ "StreamingContext sc = pyspark.SparkContext() "
#~ "ssc = StreamingContext(sc,1) broker = "
#~ "\"<my_broker_ip>\" directKafkaStream = "
#~ "KafkaUtils.createDirectStream(ssc, [\"test1\"], "
#~ "{\"metadata.broker.list\": broker}) "
#~ "directKafkaStream.pprint() ssc.start() ```"
#~ msgstr ""

#~ msgid "### Using spark-packages.org"
#~ msgstr ""

#~ msgid "### Use jupyter/all-spark-notebooks with an existing Spark/YARN cluster"
#~ msgstr ""

#~ msgid "```dockerfile FROM jupyter/all-spark-notebook"
#~ msgstr ""

#~ msgid ""
#~ "# Set env vars for pydoop ENV "
#~ "HADOOP_HOME /usr/local/hadoop-2.7.3 ENV JAVA_HOME"
#~ " /usr/lib/jvm/java-8-openjdk-amd64 ENV "
#~ "HADOOP_CONF_HOME /usr/local/hadoop-2.7.3/etc/hadoop ENV"
#~ " HADOOP_CONF_DIR  /usr/local/hadoop-2.7.3/etc/hadoop"
#~ msgstr ""

#~ msgid ""
#~ "USER root # Add proper open-jdk-8"
#~ " not just the jre, needed for "
#~ "pydoop RUN echo 'deb http://cdn-"
#~ "fastly.deb.debian.org/debian jessie-backports main'"
#~ " > /etc/apt/sources.list.d/jessie-backports.list "
#~ "&& \\"
#~ msgstr ""

#~ msgid ""
#~ "apt-get -y update && \\ apt-"
#~ "get install --no-install-recommends -t"
#~ " jessie-backports -y openjdk-8-jdk && "
#~ "\\ rm /etc/apt/sources.list.d/jessie-backports.list"
#~ " && \\ apt-get clean && \\ "
#~ "rm -rf /var/lib/apt/lists/ && \\"
#~ msgstr ""

#~ msgid "# Add hadoop binaries"
#~ msgstr ""

#~ msgid ""
#~ "wget "
#~ "http://mirrors.ukfast.co.uk/sites/ftp.apache.org/hadoop/common/hadoop-2.7.3/hadoop-2.7.3.tar.gz"
#~ " && \\ tar -xvf hadoop-2.7.3.tar.gz "
#~ "-C /usr/local && \\ chown -R "
#~ "$NB_USER:users /usr/local/hadoop-2.7.3 && \\ "
#~ "rm -f hadoop-2.7.3.tar.gz && \\"
#~ msgstr ""

#~ msgid "# Install os dependencies required for pydoop, pyhive"
#~ msgstr ""

#~ msgid ""
#~ "apt-get update && \\ apt-get "
#~ "install --no-install-recommends -y "
#~ "build-essential python-dev libsasl2-dev &&"
#~ " \\ apt-get clean && \\ rm "
#~ "-rf /var/lib/apt/lists/* && \\"
#~ msgstr ""

#~ msgid ""
#~ "# Remove the example hadoop configs "
#~ "and replace # with those for our"
#~ " cluster. # Alternatively this could "
#~ "be mounted as a volume"
#~ msgstr ""

#~ msgid "rm -f /usr/local/hadoop-2.7.3/etc/hadoop/*"
#~ msgstr ""

#~ msgid ""
#~ "# Download this from ambari / "
#~ "cloudera manager and copy here COPY "
#~ "example-hadoop-conf/ "
#~ "/usr/local/hadoop-2.7.3/etc/hadoop/"
#~ msgstr ""

#~ msgid ""
#~ "# Spark-Submit doesn't work unless "
#~ "I set the following RUN echo "
#~ "\"spark.driver.extraJavaOptions -Dhdp.version=2.5.3.0-37\" "
#~ ">> /usr/local/spark/conf/spark-defaults.conf  && "
#~ "\\"
#~ msgstr ""

#~ msgid ""
#~ "echo \"spark.yarn.am.extraJavaOptions "
#~ "-Dhdp.version=2.5.3.0-37\" >> /usr/local/spark/conf"
#~ "/spark-defaults.conf && \\ echo "
#~ "\"spark.master=yarn\" >>  /usr/local/spark/conf/spark-"
#~ "defaults.conf && \\ echo \"spark.hadoop.yarn"
#~ ".timeline-service.enabled=false\" >> "
#~ "/usr/local/spark/conf/spark-defaults.conf && \\ "
#~ "chown -R $NB_USER:users /usr/local/spark/conf"
#~ "/spark-defaults.conf && \\ # Create "
#~ "an alternative HADOOP_CONF_HOME so we "
#~ "can mount as a volume and repoint"
#~ " # using ENV var if needed "
#~ "mkdir -p /etc/hadoop/conf/ && \\ chown"
#~ " $NB_USER:users /etc/hadoop/conf/"
#~ msgstr ""

#~ msgid "USER $NB_USER"
#~ msgstr ""

#~ msgid ""
#~ "# Install useful jupyter extensions and"
#~ " python libraries like : # - "
#~ "Dashboards # - PyDoop # - PyHive"
#~ " RUN pip install jupyter_dashboards faker"
#~ " && \\"
#~ msgstr ""

#~ msgid ""
#~ "jupyter dashboards quick-setup --sys-"
#~ "prefix && \\ pip2 install pyhive "
#~ "pydoop thrift sasl thrift_sasl faker"
#~ msgstr ""

#~ msgid ""
#~ "USER root # Ensure we overwrite "
#~ "the kernel config so that toree "
#~ "connects to cluster RUN jupyter toree"
#~ " install --sys-prefix --spark_opts=\"--"
#~ "master yarn --deploy-mode client "
#~ "--driver-memory 512m  --executor-memory "
#~ "512m  --executor-cores 1 --driver-"
#~ "java-options -Dhdp.version=2.5.3.0-37 --conf "
#~ "spark.hadoop.yarn.timeline-service.enabled=false\" USER"
#~ " $NB_USER ```"
#~ msgstr ""

#~ msgid ""
#~ "## Run Jupyter Notebook/Lab inside an"
#~ " already secured environment (i.e., with"
#~ " no token)"
#~ msgstr ""

#~ msgid ""
#~ "```bash docker run jupyter/base-"
#~ "notebook:6d2a05346196 start.sh jupyter lab "
#~ "--LabApp.token='' ```"
#~ msgstr ""

#~ msgid ""
#~ "```bash docker run jupyter/base-"
#~ "notebook:6d2a05346196 start.sh jupyter notebook "
#~ "--NotebookApp.token='' ```"
#~ msgstr ""

#~ msgid ""
#~ "## Enable nbextension spellchecker for "
#~ "markdown (or any other nbextension)"
#~ msgstr ""

#~ msgid ""
#~ "```dockerfile # Update with your base"
#~ " image of choice FROM jupyter/minimal-"
#~ "notebook:latest"
#~ msgstr ""

#~ msgid "RUN pip install jupyter_contrib_nbextensions && \\"
#~ msgstr ""

#~ msgid ""
#~ "jupyter contrib nbextension install --user "
#~ "&& \\ # can modify or enable "
#~ "additional extensions here jupyter nbextension"
#~ " enable spellchecker/main --user"
#~ msgstr ""

#~ msgid "## Enable auto-sklearn notebooks"
#~ msgstr ""

#~ msgid ""
#~ "```dockerfile ARG BASE_CONTAINER=jupyter/scipy-"
#~ "notebook FROM jupyter/scipy-notebook:latest"
#~ msgstr ""

#~ msgid ""
#~ "# autosklearn requires swig, which no"
#~ " other image has RUN apt-get "
#~ "update && \\"
#~ msgstr ""

#~ msgid ""
#~ "apt-get install -y --no-install-"
#~ "recommends swig && \\ apt-get "
#~ "clean && \\ rm -rf /var/lib/apt/lists/*"
#~ msgstr ""

#~ msgid "USER $NB_UID"
#~ msgstr ""

#~ msgid "RUN pip install --quiet --no-cache-dir auto-sklearn ```"
#~ msgstr ""

#~ msgid "## Enable Delta Lake in Spark notebooks"
#~ msgstr ""

#~ msgid "```dockerfile FROM jupyter/pyspark-notebook:latest"
#~ msgstr ""

#~ msgid "ARG DELTA_CORE_VERSION=\"0.8.0\""
#~ msgstr ""

#~ msgid ""
#~ "RUN echo \"spark.jars.packages io.delta:delta-"
#~ "core_2.12:${DELTA_CORE_VERSION}\" >> $SPARK_HOME/conf"
#~ "/spark-defaults.conf && \\"
#~ msgstr ""

#~ msgid ""
#~ "echo 'spark.sql.extensions "
#~ "io.delta.sql.DeltaSparkSessionExtension' >> "
#~ "$SPARK_HOME/conf/spark-defaults.conf && \\ "
#~ "echo 'spark.sql.catalog.spark_catalog "
#~ "org.apache.spark.sql.delta.catalog.DeltaCatalog' >> "
#~ "$SPARK_HOME/conf/spark-defaults.conf"
#~ msgstr ""

#~ msgid ""
#~ "# Run pyspark and exit to trigger"
#~ " the download of the delta lake "
#~ "jars RUN echo \"quit()\" > /tmp/init-"
#~ "delta.py && \\"
#~ msgstr ""

#~ msgid "spark-submit /tmp/init-delta.py && \\ rm /tmp/init-delta.py"
#~ msgstr ""

#~ msgid "# Running a Container"
#~ msgstr ""

#~ msgid "## Using the Docker CLI"
#~ msgstr ""

#~ msgid "```bash $ docker run -p 8888:8888 jupyter/scipy-notebook:2c80cf3537ca"
#~ msgstr ""

#~ msgid ""
#~ "Executing the command: jupyter notebook "
#~ "[I 15:33:00.567 NotebookApp] Writing notebook"
#~ " server cookie secret to "
#~ "/home/jovyan/.local/share/jupyter/runtime/notebook_cookie_secret "
#~ "[W 15:33:01.084 NotebookApp] WARNING: The "
#~ "notebook server is listening on all "
#~ "IP addresses and not using encryption."
#~ " This is not recommended. [I "
#~ "15:33:01.150 NotebookApp] JupyterLab alpha "
#~ "preview extension loaded from "
#~ "/opt/conda/lib/python3.6/site-packages/jupyterlab [I "
#~ "15:33:01.150 NotebookApp] JupyterLab application "
#~ "directory is /opt/conda/share/jupyter/lab [I "
#~ "15:33:01.155 NotebookApp] Serving notebooks "
#~ "from local directory: /home/jovyan [I "
#~ "15:33:01.156 NotebookApp] 0 active kernels "
#~ "[I 15:33:01.156 NotebookApp] The Jupyter "
#~ "Notebook is running at: [I 15:33:01.157"
#~ " NotebookApp] http://[all ip addresses on"
#~ " your "
#~ "system]:8888/?token=112bb073331f1460b73768c76dffb2f87ac1d4ca7870d46a"
#~ " [I 15:33:01.157 NotebookApp] Use Control-C"
#~ " to stop this server and shut "
#~ "down all kernels (twice to skip "
#~ "confirmation). [C 15:33:01.160 NotebookApp]"
#~ msgstr ""

#~ msgid ""
#~ "Copy/paste this URL into your browser"
#~ " when you connect for the first "
#~ "time, to login with a token:"
#~ msgstr ""

#~ msgid "http://localhost:8888/?token=112bb073331f1460b73768c76dffb2f87ac1d4ca7870d46a"
#~ msgstr ""

#~ msgid ""
#~ "```bash # list containers $ docker "
#~ "ps -a CONTAINER ID        IMAGE"
#~ "                   COMMAND                  CREATED    "
#~ "STATUS                      PORTS               NAMES "
#~ "d67fe77f1a84        jupyter/base-notebook   \"tini"
#~ " -- start-noteb…\"   44 seconds ago"
#~ "    Exited (0) 39 seconds ago"
#~ "                       cocky_mirzakhani"
#~ msgstr ""

#~ msgid ""
#~ "# start the stopped container $ "
#~ "docker start -a d67fe77f1a84 Executing "
#~ "the command: jupyter notebook [W "
#~ "16:45:02.020 NotebookApp] WARNING: The "
#~ "notebook server is listening on all "
#~ "IP addresses and not using encryption."
#~ " This is not recommended. ..."
#~ msgstr ""

#~ msgid ""
#~ "# remove the stopped container $ "
#~ "docker rm d67fe77f1a84 d67fe77f1a84 ```"
#~ msgstr ""

#~ msgid ""
#~ "```bash $ docker run --rm -p "
#~ "10000:8888 -v \"$PWD\":/home/jovyan/work "
#~ "jupyter/r-notebook:e5c5a7d3e52d"
#~ msgstr ""

#~ msgid ""
#~ "Executing the command: jupyter notebook "
#~ "[I 19:31:09.573 NotebookApp] Writing notebook"
#~ " server cookie secret to "
#~ "/home/jovyan/.local/share/jupyter/runtime/notebook_cookie_secret "
#~ "[W 19:31:11.930 NotebookApp] WARNING: The "
#~ "notebook server is listening on all "
#~ "IP addresses and not using encryption."
#~ " This is not recommended. [I "
#~ "19:31:12.085 NotebookApp] JupyterLab alpha "
#~ "preview extension loaded from "
#~ "/opt/conda/lib/python3.6/site-packages/jupyterlab [I "
#~ "19:31:12.086 NotebookApp] JupyterLab application "
#~ "directory is /opt/conda/share/jupyter/lab [I "
#~ "19:31:12.117 NotebookApp] Serving notebooks "
#~ "from local directory: /home/jovyan [I "
#~ "19:31:12.117 NotebookApp] 0 active kernels "
#~ "[I 19:31:12.118 NotebookApp] The Jupyter "
#~ "Notebook is running at: [I 19:31:12.119"
#~ " NotebookApp] http://[all ip addresses on"
#~ " your "
#~ "system]:8888/?token=3b8dce890cb65570fb0d9c4a41ae067f7604873bd604f5ac"
#~ " [I 19:31:12.120 NotebookApp] Use Control-C"
#~ " to stop this server and shut "
#~ "down all kernels (twice to skip "
#~ "confirmation). [C 19:31:12.122 NotebookApp]"
#~ msgstr ""

#~ msgid "http://localhost:8888/?token=3b8dce890cb65570fb0d9c4a41ae067f7604873bd604f5ac"
#~ msgstr ""

#~ msgid "```bash docker run -d -P --name notebook jupyter/all-spark-notebook ```"
#~ msgstr ""

#~ msgid ""
#~ "```bash # get the random host port"
#~ " assigned to the container port 8888"
#~ " $ docker port notebook 8888 "
#~ "0.0.0.0:32769"
#~ msgstr ""

#~ msgid "# get the notebook token from the logs $ docker logs --tail 3 notebook"
#~ msgstr ""

#~ msgid "http://localhost:8888/?token=15914ca95f495075c0aa7d0e060f1a78b6d94f70ea373b00"
#~ msgstr ""

#~ msgid "```bash # stop the container docker stop notebook notebook"
#~ msgstr ""

#~ msgid "# remove the container permanently docker rm notebook notebook ```"
#~ msgstr ""

#~ msgid "## Using Binder"
#~ msgstr ""

#~ msgid "## Using JupyterHub"
#~ msgstr ""

#~ msgid "## Using Other Tools and Services"
#~ msgstr ""

#~ msgid "# Selecting an Image"
#~ msgstr ""

#~ msgid "## Core Stacks"
#~ msgstr ""

#~ msgid "### jupyter/base-notebook"
#~ msgstr ""

#~ msgid ""
#~ "[Miniforge](https://github.com/conda-forge/miniforge) "
#~ "Python 3.x in `/opt/conda` with two "
#~ "package managers - "
#~ "[conda](https://github.com/conda/conda): \"cross-platform,"
#~ " language-agnostic binary package "
#~ "manager\". - [mamba](https://github.com/mamba-"
#~ "org/mamba): \"reimplementation of the conda"
#~ " package manager in C++\"."
#~ msgstr ""

#~ msgid "### jupyter/minimal-notebook"
#~ msgstr ""

#~ msgid "### jupyter/r-notebook"
#~ msgstr ""

#~ msgid "### jupyter/scipy-notebook"
#~ msgstr ""

#~ msgid "### jupyter/tensorflow-notebook"
#~ msgstr ""

#~ msgid "### jupyter/datascience-notebook"
#~ msgstr ""

#~ msgid "### jupyter/pyspark-notebook"
#~ msgstr ""

#~ msgid "### jupyter/all-spark-notebook"
#~ msgstr ""

#~ msgid "### Image Relationships"
#~ msgstr ""

#~ msgid "### Builds"
#~ msgstr ""

#~ msgid "### Versioning"
#~ msgstr ""

#~ msgid "## Community Stacks"
#~ msgstr ""

#~ msgid "# Image Specifics"
#~ msgstr ""

#~ msgid "## Apache Spark™"
#~ msgstr ""

#~ msgid "### Specific Docker Image Options"
#~ msgstr ""

#~ msgid "### Build an Image with a Different Version of Spark"
#~ msgstr ""

#~ msgid ""
#~ "Spark distribution is defined by the "
#~ "combination of the Spark and the "
#~ "Hadoop version and verified by the "
#~ "package checksum, see [Download Apache "
#~ "Spark](https://spark.apache.org/downloads.html) and the"
#~ " [archive repo](https://archive.apache.org/dist/spark/) "
#~ "for more information. * `spark_version`: "
#~ "The Spark version to install (`3.0.0`)."
#~ " * `hadoop_version`: The Hadoop version "
#~ "(`3.2`). * `spark_checksum`: The package "
#~ "checksum (`BFE4540...`)."
#~ msgstr ""

#~ msgid ""
#~ "Spark can run with different OpenJDK "
#~ "versions. * `openjdk_version`: The version "
#~ "of (JRE headless) the OpenJDK "
#~ "distribution (`11`), see [Ubuntu "
#~ "packages](https://packages.ubuntu.com/search?keywords=openjdk)."
#~ msgstr ""

#~ msgid ""
#~ "```bash # From the root of the "
#~ "project # Build the image with "
#~ "different arguments docker build --rm "
#~ "--force-rm \\"
#~ msgstr ""

#~ msgid ""
#~ "-t jupyter/pyspark-notebook:spark-2.4.7 "
#~ "./pyspark-notebook \\ --build-arg "
#~ "spark_version=2.4.7 \\ --build-arg "
#~ "hadoop_version=2.7 \\ --build-arg "
#~ "spark_checksum=0F5455672045F6110B030CE343C049855B7BA86C0ECB5E39A075FF9D093C7F648DA55DED12E72FFE65D84C32DCD5418A6D764F2D6295A3F894A4286CC80EF478"
#~ " \\ --build-arg openjdk_version=8"
#~ msgstr ""

#~ msgid ""
#~ "# Check the newly built image "
#~ "docker run -it --rm jupyter/pyspark-"
#~ "notebook:spark-2.4.7 pyspark --version"
#~ msgstr ""

#~ msgid ""
#~ "# Welcome to #       ____              "
#~ "__ #      / __/__  ___ _____/ /__"
#~ " #     _\\ \\/ _ \\/ _ `/ "
#~ "__/  '_/ #    /___/ .__/\\_,_/_/ "
#~ "/_/\\_\\   version 2.4.7 #       /_/ #"
#~ " # Using Scala version 2.11.12, "
#~ "OpenJDK 64-Bit Server VM, 1.8.0_275 ```"
#~ msgstr ""

#~ msgid "### Usage Examples"
#~ msgstr ""

#~ msgid "#### Using Spark Local Mode"
#~ msgstr ""

#~ msgid "##### Local Mode in Python"
#~ msgstr ""

#~ msgid "```python from pyspark.sql import SparkSession"
#~ msgstr ""

#~ msgid ""
#~ "# Spark session & context spark ="
#~ " SparkSession.builder.master('local').getOrCreate() sc "
#~ "= spark.sparkContext"
#~ msgstr ""

#~ msgid ""
#~ "# Sum of the first 100 whole "
#~ "numbers rdd = sc.parallelize(range(100 + "
#~ "1)) rdd.sum() # 5050 ```"
#~ msgstr ""

#~ msgid "##### Local Mode in R"
#~ msgstr ""

#~ msgid "```R library(SparkR)"
#~ msgstr ""

#~ msgid "# Spark session & context sc <- sparkR.session(\"local\")"
#~ msgstr ""

#~ msgid ""
#~ "# Sum of the first 100 whole "
#~ "numbers sdf <- createDataFrame(list(1:100)) "
#~ "dapplyCollect(sdf,"
#~ msgstr ""

#~ msgid "function(x) { x <- sum(x)}"
#~ msgstr ""

#~ msgid ")"
#~ msgstr ""

#~ msgid "# 5050 ```"
#~ msgstr ""

#~ msgid "```R library(sparklyr)"
#~ msgstr ""

#~ msgid ""
#~ "# Spark configuration conf <- "
#~ "spark_config() # Set the catalog "
#~ "implementation in-memory "
#~ "conf$spark.sql.catalogImplementation <- \"in-"
#~ "memory\""
#~ msgstr ""

#~ msgid ""
#~ "# Spark session & context sc <-"
#~ " spark_connect(master = \"local\", config ="
#~ " conf)"
#~ msgstr ""

#~ msgid ""
#~ "# Sum of the first 100 whole "
#~ "numbers sdf_len(sc, 100, repartition = "
#~ "1) %>%"
#~ msgstr ""

#~ msgid "spark_apply(function(e) sum(e))"
#~ msgstr ""

#~ msgid "##### Local Mode in Scala"
#~ msgstr ""

#~ msgid ""
#~ "```python %%init_spark # Configure Spark "
#~ "to use a local master launcher.master"
#~ " = \"local\" ```"
#~ msgstr ""

#~ msgid ""
#~ "```scala // Sum of the first 100"
#~ " whole numbers val rdd = "
#~ "sc.parallelize(0 to 100) rdd.sum() // "
#~ "5050 ```"
#~ msgstr ""

#~ msgid "#### Connecting to a Spark Cluster in Standalone Mode"
#~ msgstr ""

#~ msgid ""
#~ "Run the Docker container with "
#~ "`--net=host` in a location that is "
#~ "network addressable by all of your "
#~ "Spark workers. (This is a [Spark "
#~ "networking requirement](http://spark.apache.org/docs/latest"
#~ "/cluster-overview.html#components).) * NOTE: When"
#~ " using `--net=host`, you must also "
#~ "use the flags `--pid=host -e "
#~ "TINI_SUBREAPER=true`. See <https://github.com/jupyter"
#~ "/docker-stacks/issues/64> for details."
#~ msgstr ""

#~ msgid "##### Standalone Mode in Python"
#~ msgstr ""

#~ msgid ""
#~ "# Spark session & context spark ="
#~ " SparkSession.builder.master('spark://master:7077').getOrCreate()"
#~ " sc = spark.sparkContext"
#~ msgstr ""

#~ msgid "##### Standalone Mode in R"
#~ msgstr ""

#~ msgid "# Spark session & context sc <- sparkR.session(\"spark://master:7077\")"
#~ msgstr ""

#~ msgid ""
#~ "# Spark session & context # Spark"
#~ " configuration conf <- spark_config() # "
#~ "Set the catalog implementation in-memory"
#~ " conf$spark.sql.catalogImplementation <- \"in-"
#~ "memory\" sc <- spark_connect(master = "
#~ "\"spark://master:7077\", config = conf)"
#~ msgstr ""

#~ msgid "##### Standalone Mode in Scala"
#~ msgstr ""

#~ msgid ""
#~ "```python %%init_spark # Configure Spark "
#~ "to use a local master launcher.master"
#~ " = \"spark://master:7077\" ```"
#~ msgstr ""

#~ msgid "## Tensorflow"
#~ msgstr ""

#~ msgid "### Single Machine Mode"
#~ msgstr ""

#~ msgid "```python import tensorflow as tf"
#~ msgstr ""

#~ msgid "hello = tf.Variable('Hello World!')"
#~ msgstr ""

#~ msgid "sess = tf.Session() init = tf.global_variables_initializer()"
#~ msgstr ""

#~ msgid "sess.run(init) sess.run(hello) ```"
#~ msgstr ""

#~ msgid "### Distributed Mode"
#~ msgstr ""

#~ msgid "hello = tf.Variable('Hello Distributed World!')"
#~ msgstr ""

#~ msgid ""
#~ "server = tf.train.Server.create_local_server() sess"
#~ " = tf.Session(server.target) init = "
#~ "tf.global_variables_initializer()"
#~ msgstr ""

#~ msgid ""
#~ "[sparkr]: https://spark.apache.org/docs/latest/sparkr.html "
#~ "[sparklyr]: https://spark.rstudio.com/ [spark-conf]:"
#~ " https://spark.apache.org/docs/latest/configuration.html"
#~ msgstr ""

#~ msgid ""
#~ "[PRP GPU Jupyter "
#~ "repo](https://gitlab.nautilus.optiputer.net/prp/jupyter-"
#~ "stack/-/tree/prp) and "
#~ "[Registry](https://gitlab.nautilus.optiputer.net/prp/jupyter-"
#~ "stack/container_registry): PRP (Pacific Research "
#~ "Platform) maintained registry for jupyter "
#~ "stack based on NVIDIA CUDA-enabled "
#~ "image. Added the PRP image with "
#~ "Pytorch and some other python packages,"
#~ " and GUI Desktop notebook based on"
#~ " https://github.com/jupyterhub/jupyter-remote-"
#~ "desktop-proxy."
#~ msgstr ""

#~ msgid ""
#~ "`-e NB_GID=100` - Instructs the startup"
#~ " script to change the primary group"
#~ " of`$NB_USER` to `$NB_GID` (the new "
#~ "group is added with a name of "
#~ "`$NB_GROUP` if it is defined, otherwise"
#~ " the group is named `$NB_USER`).  "
#~ "This feature is useful when mounting "
#~ "host volumes with specific group "
#~ "permissions. For this option to take "
#~ "effect, you must run the container "
#~ "with `--user root`. (The startup script"
#~ " will `su $NB_USER` after adjusting "
#~ "the group ID.) You might consider "
#~ "using modern Docker options `--user` and"
#~ " `--group-add` instead. See the last"
#~ " bullet below for details.  The user"
#~ " is added to supplemental group "
#~ "`users` (gid 100) in order to "
#~ "allow write access to the home "
#~ "directory and `/opt/conda`.  If you "
#~ "override the user/group logic, ensure "
#~ "the user stays in group `users` if"
#~ " you want them to be able to"
#~ " modify files in the image."
#~ msgstr ""

#~ msgid ""
#~ "`-e NB_GROUP=<name>` - The name used "
#~ "for `$NB_GID`, which defaults to "
#~ "`$NB_USER`.  This is only used if "
#~ "`$NB_GID` is specified and completely "
#~ "optional: there is only cosmetic effect."
#~ msgstr ""

#~ msgid ""
#~ "`-e RESTARTABLE=yes` - Runs Jupyter in"
#~ " a loop so that quitting Jupyter "
#~ "does not cause the container to "
#~ "exit.  This may be useful when you"
#~ " need to install extensions that "
#~ "require restarting Jupyter."
#~ msgstr ""

#~ msgid ""
#~ "The default Python 3.x [Conda "
#~ "environment](http://conda.pydata.org/docs/using/envs.html) "
#~ "resides in `/opt/conda`. The `/opt/conda/bin`"
#~ " directory is part of the default "
#~ "`jovyan` user's `$PATH`. That directory "
#~ "is also whitelisted for use in "
#~ "`sudo` commands by the `start.sh` "
#~ "script."
#~ msgstr ""

#~ msgid ""
#~ "You can configure JupyterHub to launcher"
#~ " Docker containers from the Jupyter "
#~ "Docker Stacks images. If you've been "
#~ "following the [Zero to JupyterHub with"
#~ " Kubernetes](http://zero-to-"
#~ "jupyterhub.readthedocs.io/en/latest/) guide, see the"
#~ " [Use an existing Docker image](http"
#~ "://zero-to-jupyterhub.readthedocs.io/en/latest/user-"
#~ "environment.html#use-an-existing-docker-image)"
#~ " section for details. If you have "
#~ "a custom JupyterHub deployment, see the"
#~ " [Picking or building a Docker "
#~ "image](https://github.com/jupyterhub/dockerspawner#picking-"
#~ "or-building-a-docker-image) instructions for "
#~ "the [dockerspawner](https://github.com/jupyterhub/dockerspawner)"
#~ " instead."
#~ msgstr ""

#~ msgid ""
#~ "The Jupyter team maintains a set "
#~ "of Docker image definitions in the "
#~ "[https://github.com/jupyter/docker-"
#~ "stacks](https://github.com/jupyter/docker-stacks) GitHub"
#~ " repository. The following sections "
#~ "describe these images including their "
#~ "contents, relationships, and versioning "
#~ "strategy."
#~ msgstr ""

#~ msgid ""
#~ "[tidyverse](https://www.tidyverse.org/) packages from "
#~ "[conda-forge](https://conda-forge.github.io/feedstocks)"
#~ msgstr ""

#~ msgid ""
#~ "[devtools](https://cran.r-project.org/web/packages/devtools/index.html),"
#~ " [shiny](https://shiny.rstudio.com/), "
#~ "[rmarkdown](http://rmarkdown.rstudio.com/), "
#~ "[forecast](https://cran.r-project.org/web/packages/forecast/forecast.pdf),"
#~ " "
#~ "[rsqlite](https://cran.r-project.org/web/packages/RSQLite/index.html),"
#~ " "
#~ "[nycflights13](https://cran.r-project.org/web/packages/nycflights13/index.html),"
#~ " [caret](http://topepo.github.io/caret/index.html), "
#~ "[tidymodels](https://www.tidymodels.org/), "
#~ "[rcurl](https://cran.r-project.org/web/packages/RCurl/index.html), "
#~ "and "
#~ "[randomforest](https://cran.r-project.org/web/packages/randomForest/randomForest.pdf)"
#~ " packages from [conda-forge](https://conda-"
#~ "forge.github.io/feedstocks)"
#~ msgstr ""

#~ msgid ""
#~ "[dask](https://dask.org/), [pandas](https://pandas.pydata.org/),"
#~ " [numexpr](https://github.com/pydata/numexpr), "
#~ "[matplotlib](https://matplotlib.org/), "
#~ "[scipy](https://www.scipy.org/), "
#~ "[seaborn](https://seaborn.pydata.org/), [scikit-"
#~ "learn](http://scikit-learn.org/stable/), [scikit-"
#~ "image](http://scikit-image.org/), "
#~ "[sympy](http://www.sympy.org/en/index.html), "
#~ "[cython](http://cython.org/), "
#~ "[patsy](https://patsy.readthedocs.io/en/latest/), "
#~ "[statsmodel](http://www.statsmodels.org/stable/index.html), "
#~ "[cloudpickle](https://github.com/cloudpipe/cloudpickle), "
#~ "[dill](https://pypi.python.org/pypi/dill), "
#~ "[numba](https://numba.pydata.org/), "
#~ "[bokeh](https://bokeh.pydata.org/en/latest/), "
#~ "[sqlalchemy](https://www.sqlalchemy.org/), "
#~ "[hdf5](http://www.h5py.org/), "
#~ "[vincent](http://vincent.readthedocs.io/en/latest/), "
#~ "[beautifulsoup](https://www.crummy.com/software/BeautifulSoup/), "
#~ "[protobuf](https://developers.google.com/protocol-"
#~ "buffers/docs/pythontutorial), [xlrd](http://www.python-"
#~ "excel.org/), "
#~ "[bottleneck](https://bottleneck.readthedocs.io/en/latest/), and"
#~ " [pytables](https://www.pytables.org/) packages"
#~ msgstr ""

#~ msgid ""
#~ "[ipywidgets](https://ipywidgets.readthedocs.io/en/stable/) and"
#~ " [ipympl](https://github.com/matplotlib/jupyter-matplotlib)"
#~ " for interactive visualizations and plots"
#~ " in Python notebooks"
#~ msgstr ""

#~ msgid ""
#~ "[HDF5](https://github.com/JuliaIO/HDF5.jl), "
#~ "[Gadfly](http://gadflyjl.org/stable/), and "
#~ "[RDatasets](https://github.com/johnmyleswhite/RDatasets.jl) "
#~ "packages"
#~ msgstr ""

#~ msgid ""
#~ "[Apache Toree](https://toree.apache.org/) and "
#~ "[spylon-kernel](https://github.com/maxpoint/spylon-kernel)"
#~ " to support Scala code in Jupyter "
#~ "notebooks"
#~ msgstr ""

#~ msgid ""
#~ "[ggplot2](https://ggplot2.tidyverse.org), "
#~ "[sparklyr](http://spark.rstudio.com/), and "
#~ "[rcurl](https://cran.r-project.org/web/packages/RCurl/index.html) "
#~ "packages"
#~ msgstr ""

#~ msgid ""
#~ "[sage-notebook](https://github.com/sharpTrick/sage-"
#~ "notebook) is a community Jupyter Docker"
#~ " Stack image with the "
#~ "[sagemath](https://sagemath.org) kernel on top "
#~ "of the minimal-notebook image. Click "
#~ "here to launch it on "
#~ "[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/sharpTrick"
#~ "/sage-notebook/master)."
#~ msgstr ""

#~ msgid ""
#~ "`-p 4040:4040` - The `jupyter/pyspark-"
#~ "notebook` and `jupyter/all-spark-notebook` "
#~ "images open [SparkUI (Spark Monitoring "
#~ "and Instrumentation "
#~ "UI)](http://spark.apache.org/docs/latest/monitoring.html) at "
#~ "default port `4040`, this option map "
#~ "`4040` port inside docker container to"
#~ " `4040` port on host machine . "
#~ "Note every new spark context that "
#~ "is created is put onto an "
#~ "incrementing port (ie. 4040, 4041, 4042,"
#~ " etc.), and it might be necessary "
#~ "to open multiple ports. For example: "
#~ "`docker run -d -p 8888:8888 -p "
#~ "4040:4040 -p 4041:4041 jupyter/pyspark-"
#~ "notebook`."
#~ msgstr ""

#~ msgid ""
#~ "[Deploy Spark in Standalone "
#~ "Mode](http://spark.apache.org/docs/latest/spark-"
#~ "standalone.html)."
#~ msgstr ""

#~ msgid ""
#~ "**Example 1** This command pulls the "
#~ "`jupyter/scipy-notebook` image tagged "
#~ "`2c80cf3537ca` from Docker Hub if it "
#~ "is not already present on the "
#~ "local host. It then starts a "
#~ "container running a Jupyter Notebook "
#~ "server and exposes the server on "
#~ "host port 8888. The server logs "
#~ "appear in the terminal and include "
#~ "a URL to the notebook server."
#~ msgstr ""

#~ msgid ""
#~ "**Example 2** This command pulls the "
#~ "`jupyter/r-notebook` image tagged `e5c5a7d3e52d` "
#~ "from Docker Hub if it is not "
#~ "already present on the local host. "
#~ "It then starts a container running "
#~ "a Jupyter Notebook server and exposes"
#~ " the server on host port 10000. "
#~ "The server logs appear in the "
#~ "terminal and include a URL to the"
#~ " notebook server, but with the "
#~ "internal container port (8888) instead "
#~ "of the the correct host port "
#~ "(10000)."
#~ msgstr ""

#~ msgid ""
#~ "Every image on Docker Hub also "
#~ "receives a 12-character tag which "
#~ "corresponds with the git commit SHA "
#~ "that triggered the image build. You "
#~ "can inspect the state of the "
#~ "`jupyter/docker-stacks` repository for that"
#~ " commit to review the definition of"
#~ " the image (e.g., images with tag "
#~ "7c45ec67c8e7 were built from "
#~ "[https://github.com/jupyter/docker-"
#~ "stacks/tree/7c45ec67c8e7](https://github.com/jupyter/docker-"
#~ "stacks/tree/7c45ec67c8e7))."
#~ msgstr ""

#~ msgid ""
#~ "You must refer to git-SHA image"
#~ " tags when stability and reproducibility"
#~ " are important in your work. (e.g."
#~ " `FROM jupyter/scipy-notebook:7c45ec67c8e7`, "
#~ "`docker run -it --rm jupyter/scipy-"
#~ "notebook:7c45ec67c8e7`). You should only use"
#~ " `latest` when a one-off container"
#~ " instance is acceptable (e.g., you "
#~ "want to briefly try a new library"
#~ " in a notebook)."
#~ msgstr ""

#~ msgid ""
#~ "Ref: [https://github.com/jupyter/docker-"
#~ "stacks/issues/440](https://github.com/jupyter/docker-"
#~ "stacks/issues/440)"
#~ msgstr ""

#~ msgid ""
#~ "JupyterLab is preinstalled as a notebook"
#~ " extension starting in tag "
#~ "[c33a7dc0eece](https://github.com/jupyter/docker-stacks/wiki"
#~ "/Docker-build-history)."
#~ msgstr ""

#~ msgid ""
#~ "Run jupyterlab using a command such "
#~ "as `docker run -it --rm -p "
#~ "8888:8888 jupyter/datascience-notebook start.sh "
#~ "jupyter lab`"
#~ msgstr ""

#~ msgid ""
#~ "Ref: [https://github.com/jupyter/docker-"
#~ "stacks/issues/999](https://github.com/jupyter/docker-"
#~ "stacks/issues/999)"
#~ msgstr ""

#~ msgid ""
#~ "See the README for the simple "
#~ "automation here [https://github.com/jupyter/docker-"
#~ "stacks/tree/master/examples/make-"
#~ "deploy](https://github.com/jupyter/docker-"
#~ "stacks/tree/master/examples/make-deploy) which "
#~ "includes steps for requesting and "
#~ "renewing a Let's Encrypt certificate."
#~ msgstr ""

#~ msgid ""
#~ "Ref: [https://github.com/jupyter/docker-"
#~ "stacks/issues/78](https://github.com/jupyter/docker-"
#~ "stacks/issues/78)"
#~ msgstr ""

#~ msgid ""
#~ "Ref: [https://github.com/jupyter/docker-"
#~ "stacks/issues/199](https://github.com/jupyter/docker-"
#~ "stacks/issues/199)"
#~ msgstr ""

#~ msgid ""
#~ "Ref: [https://github.com/jupyter/docker-"
#~ "stacks/issues/177](https://github.com/jupyter/docker-"
#~ "stacks/issues/177)"
#~ msgstr ""

#~ msgid ""
#~ "Ref: [https://github.com/jupyter/docker-"
#~ "stacks/issues/127](https://github.com/jupyter/docker-"
#~ "stacks/issues/127)"
#~ msgstr ""

#~ msgid ""
#~ "Ref: [https://github.com/jupyter/docker-"
#~ "stacks/issues/154](https://github.com/jupyter/docker-"
#~ "stacks/issues/154)"
#~ msgstr ""

#~ msgid ""
#~ "Ref: [https://github.com/jupyter/docker-"
#~ "stacks/issues/43](https://github.com/jupyter/docker-"
#~ "stacks/issues/43)"
#~ msgstr ""

#~ msgid ""
#~ "Ref: [https://github.com/jupyter/docker-"
#~ "stacks/issues/675](https://github.com/jupyter/docker-"
#~ "stacks/issues/675)"
#~ msgstr ""

#~ msgid ""
#~ "For example here is how to build"
#~ " a `pyspark-notebook` image with "
#~ "Spark `2.4.6`, Hadoop `2.7` and OpenJDK"
#~ " `8`."
#~ msgstr ""

#~ msgid ""
#~ "The **same Python version** need to "
#~ "be used on the notebook (where the"
#~ " driver is located) and on the "
#~ "Spark workers. The python version used"
#~ " at driver and worker side can "
#~ "be adjusted by setting the environment"
#~ " variables `PYSPARK_PYTHON` and / or "
#~ "`PYSPARK_DRIVER_PYTHON`, see [Spark Configuration"
#~ "][spark-conf] for more information."
#~ msgstr ""

