# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018- Project Jupyter
# This file is distributed under the same license as the docker-stacks
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: docker-stacks latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-24 13:48+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../using/common.md:1 e54edecfce02457981910f79f0fcff7f
msgid "# Common Features"
msgstr ""

#: ../../using/common.md:3 a32dbbbcbb03405ca9b76d4409720d73
msgid ""
"A container launched from any Jupyter Docker Stacks image runs a Jupyter "
"Notebook server by default. The container does so by executing a `start-"
"notebook.sh` script. This script configures the internal container "
"environment and then runs `jupyter notebook`, passing it any command line"
" arguments received."
msgstr ""

# 298bc09d3aab4abcb413ad481d6242ff
#: ../../using/common.md:5 109a4e16e3b34a53a4f166d865b9a3b3
msgid ""
"This page describes the options supported by the startup script as well "
"as how to bypass it to run alternative commands."
msgstr ""

#: ../../using/common.md:7 5b86294be8604dd58e21109ecc693626
msgid "## Notebook Options"
msgstr ""

#: ../../using/common.md:9 af908cb0f4cb44a8831946907ec7cc9c
msgid ""
"You can pass [Jupyter command line "
"options](https://jupyter.readthedocs.io/en/latest/projects/jupyter-"
"command.html) to the `start-notebook.sh` script when launching the "
"container. For example, to secure the Notebook server with a custom "
"password hashed using `IPython.lib.passwd()` instead of the default "
"token, you can run the following:"
msgstr ""

#: ../../using/common.md:11 bd7d5a4d9de142e8a62a68b164ee425d
msgid ""
"``` docker run -d -p 8888:8888 jupyter/base-notebook start-notebook.sh "
"--NotebookApp.password='sha1:74ba40f8a388:c913541b7ee99d15d5ed31d4226bf7838f83a50e'"
" ```"
msgstr ""

# 4c08f057def247cbbfc8231e628cb792
#: ../../using/common.md:15 b268b4338d1e490794fafb242da5213d
msgid ""
"For example, to set the base URL of the notebook server, you can run the "
"following:"
msgstr ""

#: ../../using/common.md:17 182a90d6274248a6ad87c74c637e7a45
msgid ""
"``` docker run -d -p 8888:8888 jupyter/base-notebook start-notebook.sh "
"--NotebookApp.base_url=/some/path ```"
msgstr ""

#: ../../using/common.md:21 e3bc471a58e44c9d9b5d8dd876d89725
msgid "## Docker Options"
msgstr ""

#: ../../using/common.md:23 62a2124fc656426685c455259e9c21a7
msgid ""
"You may instruct the `start-notebook.sh` script to customize the "
"container environment before launching the notebook server. You do so by "
"passing arguments to the `docker run` command."
msgstr ""

#: ../../using/common.md:26 1d8eb4a370ab4eab902914f6b0853161
msgid ""
"`-e NB_USER=jovyan` - Instructs the startup script to change the default "
"container username from `jovyan` to the provided value. Causes the script"
" to rename the `jovyan` user home folder. For this option to take effect,"
" you must run the container with `--user root`, set the working directory"
" `-w /home/$NB_USER` and set the environment variable `-e CHOWN_HOME=yes`"
" (see below for detail). This feature is useful when mounting host "
"volumes with specific home folder."
msgstr ""

#: ../../using/common.md:27 e63e525539384c6092e48b1f067aeb56
msgid ""
"`-e NB_UID=1000` - Instructs the startup script to switch the numeric "
"user ID of `$NB_USER` to the given value. This feature is useful when "
"mounting host volumes with specific owner permissions. For this option to"
" take effect, you must run the container with `--user root`. (The startup"
" script will `su $NB_USER` after adjusting the user ID.) You might "
"consider using modern Docker options `--user` and `--group-add` instead. "
"See the last bullet below for details."
msgstr ""

#: ../../using/common.md:28 1a22eb3a5f0f4c55a705763ef022dc5e
msgid ""
"`-e NB_GID=100` - Instructs the startup script to change the primary "
"group of`$NB_USER` to `$NB_GID` (the new group is added with a name of "
"`$NB_GROUP` if it is defined, otherwise the group is named `$NB_USER`).  "
"This feature is useful when mounting host volumes with specific group "
"permissions. For this option to take effect, you must run the container "
"with `--user root`. (The startup script will `su $NB_USER` after "
"adjusting the group ID.) You might consider using modern Docker options "
"`--user` and `--group-add` instead. See the last bullet below for "
"details.  The user is added to supplemental group `users` (gid 100) in "
"order to allow write access to the home directory and `/opt/conda`.  If "
"you override the user/group logic, ensure the user stays in group `users`"
" if you want them to be able to modify files in the image."
msgstr ""

#: ../../using/common.md:29 dfdd211cafdf459d8b9360573a621a44
msgid ""
"`-e NB_GROUP=<name>` - The name used for `$NB_GID`, which defaults to "
"`$NB_USER`.  This is only used if `$NB_GID` is specified and completely "
"optional: there is only cosmetic effect."
msgstr ""

#: ../../using/common.md:30 e8c974b919744ff4ab92662a3d049c44
msgid ""
"`-e NB_UMASK=<umask>` - Configures Jupyter to use a different umask value"
" from default, i.e. `022`. For example, if setting umask to `002`, new "
"files will be readable and writable by group members instead of just "
"writable by the owner. Wikipedia has a good article about "
"[umask](https://en.wikipedia.org/wiki/Umask). Feel free to read it in "
"order to choose the value that better fits your needs. Default value "
"should fit most situations. Note that `NB_UMASK` when set only applies to"
" the Jupyter process itself - you cannot use it to set a umask for "
"additional files created during run-hooks e.g. via `pip` or `conda` - if "
"you need to set a umask for these you must set `umask` for each command."
msgstr ""

#: ../../using/common.md:31 6e9d4e1604e74f1abb72c48ccdcdfd58
msgid ""
"`-e CHOWN_HOME=yes` - Instructs the startup script to change the "
"`$NB_USER` home directory owner and group to the current value of "
"`$NB_UID` and `$NB_GID`. This change will take effect even if the user "
"home directory is mounted from the host using `-v` as described below. "
"The change is **not** applied recursively by default. You can change "
"modify the `chown` behavior by setting `CHOWN_HOME_OPTS` (e.g., `-e "
"CHOWN_HOME_OPTS='-R'`)."
msgstr ""

#: ../../using/common.md:32 5f97300fa6ee4d4b9579b7449d0327de
msgid ""
"`-e CHOWN_EXTRA=\"<some dir>,<some other dir>\"` - Instructs the startup "
"script to change the owner and group of each comma-separated container "
"directory to the current value of `$NB_UID` and `$NB_GID`. The change is "
"**not** applied recursively by default. You can change modify the `chown`"
" behavior by setting `CHOWN_EXTRA_OPTS` (e.g., `-e "
"CHOWN_EXTRA_OPTS='-R'`)."
msgstr ""

#: ../../using/common.md:33 3d2c37182e8345269a3921a0c870a7ff
msgid ""
"`-e GRANT_SUDO=yes` - Instructs the startup script to grant the `NB_USER`"
" user passwordless `sudo` capability. You do **not** need this option to "
"allow the user to `conda` or `pip` install additional packages. This "
"option is useful, however, when you wish to give `$NB_USER` the ability "
"to install OS packages with `apt` or modify other root-owned files in the"
" container. For this option to take effect, you must run the container "
"with `--user root`. (The `start-notebook.sh` script will `su $NB_USER` "
"after adding `$NB_USER` to sudoers.) **You should only enable `sudo` if "
"you trust the user or if the container is running on an isolated host.**"
msgstr ""

#: ../../using/common.md:34 d19cdf7e6a584e94ab95944e9205c565
msgid ""
"`-e GEN_CERT=yes` - Instructs the startup script to generates a self-"
"signed SSL certificate and configure Jupyter Notebook to use it to accept"
" encrypted HTTPS connections."
msgstr ""

#: ../../using/common.md:35 decc0a963dce45c788748f5cd2302fbb
msgid ""
"`-e JUPYTER_ENABLE_LAB=yes` - Instructs the startup script to run "
"`jupyter lab` instead of the default `jupyter notebook` command. Useful "
"in container orchestration environments where setting environment "
"variables is easier than change command line parameters."
msgstr ""

#: ../../using/common.md:36 001c01535f354b32bf35e857906c9afd
msgid ""
"`-e RESTARTABLE=yes` - Runs Jupyter in a loop so that quitting Jupyter "
"does not cause the container to exit.  This may be useful when you need "
"to install extensions that require restarting Jupyter."
msgstr ""

#: ../../using/common.md:37 89a351eac23c4f3a8257835845665497
msgid ""
"`-v /some/host/folder/for/work:/home/jovyan/work` - Mounts a host machine"
" directory as folder in the container. Useful when you want to preserve "
"notebooks and other work even after the container is destroyed. **You "
"must grant the within-container notebook user or group (`NB_UID` or "
"`NB_GID`) write access to the host directory (e.g., `sudo chown 1000 "
"/some/host/folder/for/work`).**"
msgstr ""

#: ../../using/common.md:38 97539d06d9e8422ea533cf46262e25c3
msgid ""
"`--user 5000 --group-add users` - Launches the container with a specific "
"user ID and adds that user to the `users` group so that it can modify "
"files in the default home directory and `/opt/conda`. You can use these "
"arguments as alternatives to setting `$NB_UID` and `$NB_GID`."
msgstr ""

#: ../../using/common.md:40 d295858b3e644170b98e840214d35c1f
msgid "## Startup Hooks"
msgstr ""

#: ../../using/common.md:42 2bf3d33d1f004e08b343e0c693da6ba5
msgid ""
"You can further customize the container environment by adding shell "
"scripts (`*.sh`) to be sourced or executables (`chmod +x`) to be run to "
"the paths below:"
msgstr ""

#: ../../using/common.md:45 290cf6bf4174419b9209065fc33932a4
msgid ""
"`/usr/local/bin/start-notebook.d/` - handled before any of the standard "
"options noted above are applied"
msgstr ""

#: ../../using/common.md:47 2561a01838164f4aa3e3d051364152a0
msgid ""
"`/usr/local/bin/before-notebook.d/` - handled after all of the standard "
"options noted above are applied and just before the notebook server "
"launches"
msgstr ""

#: ../../using/common.md:50 d824bdb5a60449a995191c77e5d5e61e
msgid ""
"See the `run-hooks` function in the [`jupyter/base-notebook "
"start.sh`](https://github.com/jupyter/docker-stacks/blob/master/base-"
"notebook/start.sh) script for execution details."
msgstr ""

#: ../../using/common.md:53 18e8b658b5ee4523abe3f8282db47358
msgid "## SSL Certificates"
msgstr ""

#: ../../using/common.md:55 f3cbd7a8af41465c87e2da4c3ccf8d57
msgid ""
"You may mount SSL key and certificate files into a container and "
"configure Jupyter Notebook to use them to accept HTTPS connections. For "
"example, to mount a host folder containing a `notebook.key` and "
"`notebook.crt` and use them, you might run the following:"
msgstr ""

#: ../../using/common.md:57 ../../using/common.md:67
#: e9e21c647be24f4885daba969164f4b4 f54f5dce35084dfcb2076efca9718aa8
msgid "``` docker run -d -p 8888:8888 \\"
msgstr ""

#: ../../using/common.md:59 c83b24193e8e41479ea73b02b64a8b3e
msgid ""
"-v /some/host/folder:/etc/ssl/notebook \\ jupyter/base-notebook start-"
"notebook.sh \\ --NotebookApp.keyfile=/etc/ssl/notebook/notebook.key "
"--NotebookApp.certfile=/etc/ssl/notebook/notebook.crt"
msgstr ""

#: ../../using/common.md:63 ../../using/common.md:72 ../../using/recipes.md:55
#: ../../using/recipes.md:67 ../../using/recipes.md:294
#: ../../using/recipes.md:515 ../../using/running.md:34
#: ../../using/running.md:75 ../../using/running.md:97
#: ../../using/specifics.md:147 06ce559807244e9a8aef49371081413a
#: 192ae6b416b645419b1bc7430440bd94 5b7d99dec5674d448e34ba3955afe096
#: 5e8cf729f124437cbae03311302f78b3 8304bd3467bb4ccb9d4b0717b52b8cd2
#: 89639330c7e3450db30f4b267e8e5006 9f2e0fec49ff497b9a726840b2333962
#: a7f4ce1fcfd2442e85a772b5dd2874fb c18565c591c44cf199dfd8ee1a478bfd
#: e14d69e6769b4ed5a2ada98fa6d2e2bc
msgid "```"
msgstr ""

# e496d62ce1b7489eabf40a55471247b4
#: ../../using/common.md:65 4574ff995bfc4b4fb14d48a9725ed5de
msgid ""
"Alternatively, you may mount a single PEM file containing both the key "
"and certificate. For example:"
msgstr ""

#: ../../using/common.md:69 7ab0c9817e454ce2a53d9cd3a70a54ba
msgid ""
"-v /some/host/folder/notebook.pem:/etc/ssl/notebook.pem \\ jupyter/base-"
"notebook start-notebook.sh \\ "
"--NotebookApp.certfile=/etc/ssl/notebook.pem"
msgstr ""

# 6ada67b7d1a34f59ad235d7e49e6a298
#: ../../using/common.md:74 39001a487a534306bb3cbc9a5f5cfc50
msgid ""
"In either case, Jupyter Notebook expects the key and certificate to be a "
"base64 encoded text file. The certificate file or PEM may contain one or "
"more certificates (e.g., server, intermediate, and root)."
msgstr ""

# c908965cf0084fc2b276b50b47b87d18
#: ../../using/common.md:76 62b70a50e50a4d33a368ccff34f25426
msgid "For additional information about using SSL, see the following:"
msgstr ""

#: ../../using/common.md:78 8f7b0016349043c89a676efc471117e1
msgid ""
"The [docker-stacks/examples](https://github.com/jupyter/docker-"
"stacks/tree/master/examples) for information about how to use [Let's "
"Encrypt](https://letsencrypt.org/) certificates when you run these stacks"
" on a publicly visible domain."
msgstr ""

#: ../../using/common.md:79 47ab83922ba942c584302efdee2bac0a
msgid ""
"The [jupyter_notebook_config.py](https://github.com/jupyter/docker-"
"stacks/blob/master/base-notebook/jupyter_notebook_config.py) file for how"
" this Docker image generates a self-signed certificate."
msgstr ""

#: ../../using/common.md:80 96d326896349417ca4b0afbd21789eac
msgid ""
"The [Jupyter Notebook documentation](https://jupyter-"
"notebook.readthedocs.io/en/latest/public_server.html#securing-a-notebook-"
"server) for best practices about securing a public notebook server in "
"general."
msgstr ""

#: ../../using/common.md:82 3b6bf241c8cd494196d765bb83c307e1
msgid "## Alternative Commands"
msgstr ""

#: ../../using/common.md:84 fd399610b13947c4b52802245264426d
msgid "### start.sh"
msgstr ""

#: ../../using/common.md:86 d7b58cb8133f4d90918945b71cdc763b
msgid ""
"The `start-notebook.sh` script actually inherits most of its option "
"handling capability from a more generic `start.sh` script. The `start.sh`"
" script supports all of the features described above, but allows you to "
"specify an arbitrary command to execute. For example, to run the text-"
"based `ipython` console in a container, do the following:"
msgstr ""

#: ../../using/common.md:88 5bfd28197d8a4fd6a6cbd2bd3e61bf83
msgid "``` docker run -it --rm jupyter/base-notebook start.sh ipython ```"
msgstr ""

# ad0be3e8095e4394afb367e9e56e1ca5
#: ../../using/common.md:92 34f0df441ee847f6a9fdcd0bc468d7af
msgid "Or, to run JupyterLab instead of the classic notebook, run the following:"
msgstr ""

#: ../../using/common.md:94 524f5be482dc427785cc3c32c9fc0217
msgid ""
"``` docker run -it --rm -p 8888:8888 jupyter/base-notebook start.sh "
"jupyter lab ```"
msgstr ""

#: ../../using/common.md:98 75692262d86749d090bb4c9f20b9302e
msgid ""
"This script is particularly useful when you derive a new Dockerfile from "
"this image and install additional Jupyter applications with subcommands "
"like `jupyter console`, `jupyter kernelgateway`, etc."
msgstr ""

#: ../../using/common.md:100 c8bcb795374e4cc1b0bfa64ac100fb19
msgid "### Others"
msgstr ""

#: ../../using/common.md:102 3535c2201aa5478d9b11227c46ce3e2a
msgid ""
"You can bypass the provided scripts and specify an arbitrary start "
"command. If you do, keep in mind that features supported by the "
"`start.sh` script and its kin will not function (e.g., `GRANT_SUDO`)."
msgstr ""

#: ../../using/common.md:104 769bce573832472bb4a431244f3d1ef6
msgid "## Conda Environments"
msgstr ""

#: ../../using/common.md:106 67116679abdc43d99c1f4e13e8e0e2fb
msgid ""
"The default Python 3.x [Conda "
"environment](http://conda.pydata.org/docs/using/envs.html) resides in "
"`/opt/conda`. The `/opt/conda/bin` directory is part of the default "
"`jovyan` user's `$PATH`. That directory is also whitelisted for use in "
"`sudo` commands by the `start.sh` script."
msgstr ""

#: ../../using/common.md:108 27476a8fba3049ddb93565cb73d2d448
msgid ""
"The `jovyan` user has full read/write access to the `/opt/conda` "
"directory. You can use either `conda` or `pip` to install new packages "
"without any additional permissions."
msgstr ""

#: ../../using/common.md:110 5b74791caa4d4a6aaec09df29f4d951f
msgid ""
"``` # install a package into the default (python 3.x) environment pip "
"install some-package conda install some-package ```"
msgstr ""

#: ../../using/recipes.md:1 8141f1d6d3a34be596e2c2d3827066b2
msgid "# Contributed Recipes"
msgstr ""

#: ../../using/recipes.md:3 67e50fbafc8e4d2b84a3dc5a261c7654
msgid ""
"Users sometimes share interesting ways of using the Jupyter Docker "
"Stacks. We encourage users to [contribute these "
"recipes](../contributing/recipes.md) to the documentation in case they "
"prove useful to other members of the community by submitting a pull "
"request to `docs/using/recipes.md`. The sections below capture this "
"knowledge."
msgstr ""

#: ../../using/recipes.md:8 fe88dc302c9249b4874ab8119023d0b2
msgid "## Using `sudo` within a container"
msgstr ""

#: ../../using/recipes.md:10 258575e8dc16433dad8cbfd117380baa
msgid ""
"Password authentication is disabled for the `NB_USER` (e.g., `jovyan`). "
"This choice was made to avoid distributing images with a weak default "
"password that users ~might~ will forget to change before running a "
"container on a publicly accessible host."
msgstr ""

#: ../../using/recipes.md:14 f6287c76d46e477eb62d0dcc405fa79d
msgid ""
"You can grant the within-container `NB_USER` passwordless `sudo` access "
"by adding `-e GRANT_SUDO=yes` and `--user root` to your Docker command "
"line or appropriate container orchestrator config."
msgstr ""

# f75300183d66418d958651b713e3c81e
#: ../../using/recipes.md:18 a2fa18548dc648d2a1bb5eda1c362626
msgid "For example:"
msgstr ""

#: ../../using/recipes.md:20 0578c4771e4f46da9ffb856a377dbb1d
msgid ""
"``` docker run -it -e GRANT_SUDO=yes --user root jupyter/minimal-notebook"
" ```"
msgstr ""

#: ../../using/recipes.md:24 51f12729b4334754bab3dd4a70836aba
msgid ""
"**You should only enable `sudo` if you trust the user and/or if the "
"container is running on an isolated host.** See [Docker security "
"documentation](https://docs.docker.com/engine/security/userns-remap/) for"
" more information about running containers as `root`."
msgstr ""

#: ../../using/recipes.md:27 954bcc9dfde9432c931a27698cd07cc8
msgid "## Using `pip install` or `conda install` in a Child Docker image"
msgstr ""

# cfb1a65ed1a4453e8b3355f1c0c23b1c
#: ../../using/recipes.md:29 d960fca132ce40a7b72db710082cdc25
msgid "Create a new Dockerfile like the one shown below."
msgstr ""

#: ../../using/recipes.md:31 db77ca6688bb4f21a04e803618949a4e
msgid ""
"```dockerfile # Start from a core stack version FROM jupyter/datascience-"
"notebook:9f9e5ca8fe5a # Install in the default python3 environment RUN "
"pip install 'ggplot==0.6.8' ```"
msgstr ""

# 3ab615dc6fb6425d954cae4ce14f08b9
#: ../../using/recipes.md:38 03760ca33bdc485f912b42b34cbfc817
msgid "Then build a new image."
msgstr ""

#: ../../using/recipes.md:40 e87940840650424e932074a822e4c25e
msgid "```bash docker build --rm -t jupyter/my-datascience-notebook . ```"
msgstr ""

#: ../../using/recipes.md:44 83a62cc5bb53407abe53f36cb2b00057
msgid ""
"To use a requirements.txt file, first create your `requirements.txt` file"
" with the listing of packages desired. Next, create a new Dockerfile like"
" the one shown below."
msgstr ""

#: ../../using/recipes.md:47 564a62bfda4440138b2c8b4912a738bc
msgid ""
"```dockerfile # Start from a core stack version FROM jupyter/datascience-"
"notebook:9f9e5ca8fe5a # Install from requirements.txt file COPY "
"requirements.txt /tmp/ RUN pip install --requirement "
"/tmp/requirements.txt && \\"
msgstr ""

#: ../../using/recipes.md:53 ../../using/recipes.md:65
#: ../../using/recipes.md:129 6c22ae7afdd043a1b4f6be231750d935
#: d1f7fd7313574142af89b434f29c712c e9a8b79065b44b2da07b95b8d86aa907
msgid "fix-permissions $CONDA_DIR && \\ fix-permissions /home/$NB_USER"
msgstr ""

# f2f035925d764425b9999b19d36c1d30
#: ../../using/recipes.md:57 a5c6dbd12d954c0cb07a3ac267f34b89
msgid "For conda, the Dockerfile is similar:"
msgstr ""

#: ../../using/recipes.md:59 d4d6c6fde9444829a5b8920c958aa596
msgid ""
"```dockerfile # Start from a core stack version FROM jupyter/datascience-"
"notebook:9f9e5ca8fe5a # Install from requirements.txt file COPY "
"requirements.txt /tmp/ RUN conda install --yes --file "
"/tmp/requirements.txt && \\"
msgstr ""

#: ../../using/recipes.md:69 bc4ca06b6e404781b06a0dd5aae3b7e0
msgid ""
"Ref: [docker-"
"stacks/commit/79169618d571506304934a7b29039085e77db78c](https://github.com/jupyter"
"/docker-"
"stacks/commit/79169618d571506304934a7b29039085e77db78c#commitcomment-15960081)"
msgstr ""

#: ../../using/recipes.md:72 bd5af38f363c4c6aa387e80aafbca779
msgid "## Add a Python 2.x environment"
msgstr ""

#: ../../using/recipes.md:74 8ad2937be88a4231a82ddf5b1fcd0c31
msgid ""
"Python 2.x was removed from all images on August 10th, 2017, starting in "
"tag `cc9feab481f7`. You can add a Python 2.x environment by defining your"
" own Dockerfile inheriting from one of the images like so:"
msgstr ""

#: ../../using/recipes.md:78 2c0dd7159e63470e8261495b87e3bec2
msgid "``` # Choose your desired base image FROM jupyter/scipy-notebook:latest"
msgstr ""

#: ../../using/recipes.md:82 604c1b75297d460fa9c3785c0b36c7c2
msgid ""
"# Create a Python 2.x environment using conda including at least the "
"ipython kernel # and the kernda utility. Add any additional packages you "
"want available for use # in a Python 2 notebook to the first line here "
"(e.g., pandas, matplotlib, etc.) RUN conda create --quiet --yes -p "
"$CONDA_DIR/envs/python2 python=2.7 ipython ipykernel kernda && \\"
msgstr ""

#: ../../using/recipes.md:86 ../../using/recipes.md:116
#: f68c0b39b61043c1afb90b82b3ca0321 fe7663d7e98d43f9a75867441ecf7009
msgid "conda clean --all -f -y"
msgstr ""

#: ../../using/recipes.md:88 ../../using/recipes.md:253
#: ../../using/recipes.md:528 382a5c9d9fc34089a7719ffe6b2418d6
#: 4492b4f5dd364750b4dd9820b8415953 483c088b44e74fb887143f6eecaaf6f0
msgid "USER root"
msgstr ""

#: ../../using/recipes.md:90 8afa7581d22b46b49aba4fae33cc182e
msgid ""
"# Create a global kernelspec in the image and modify it so that it "
"properly activates # the python2 conda environment. RUN "
"$CONDA_DIR/envs/python2/bin/python -m ipykernel install && \\ "
"$CONDA_DIR/envs/python2/bin/kernda -o -y "
"/usr/local/share/jupyter/kernels/python2/kernel.json"
msgstr ""

#: ../../using/recipes.md:95 8b7f6ed18c5a43bcb5a8e41908454548
msgid "USER $NB_USER ```"
msgstr ""

#: ../../using/recipes.md:98 24a90bdf483d43caaadc495ff2c06b59
msgid ""
"Ref: [https://github.com/jupyter/docker-"
"stacks/issues/440](https://github.com/jupyter/docker-stacks/issues/440)"
msgstr ""

#: ../../using/recipes.md:101 d9103d01c03d4dbba419e5821ce8c0a6
msgid "## Add a Python 3.x environment"
msgstr ""

#: ../../using/recipes.md:103 ad66680a6c6e4d998b3048934d597b2c
msgid ""
"The default version of Python that ships with conda/ubuntu may not be the"
" version you want. To add a conda environment with a different version "
"and make it accessible to Jupyter, the instructions are very similar to "
"Python 2.x but are slightly simpler (no need to switch to `root`):"
msgstr ""

#: ../../using/recipes.md:106 042660ed450f4e92946938d5b173e255
msgid "``` # Choose your desired base image FROM jupyter/minimal-notebook:latest"
msgstr ""

#: ../../using/recipes.md:110 fcc6966d273644d3bbc3059d845ba73b
msgid ""
"# name your environment and choose python 3.x version ARG "
"conda_env=python36 ARG py_ver=3.6"
msgstr ""

#: ../../using/recipes.md:114 bfcf3216b5d44f4faa4bbd7b54ca0708
msgid ""
"# you can add additional libraries you want conda to install by listing "
"them below the first line and ending with \"&& \\\" RUN conda create "
"--quiet --yes -p $CONDA_DIR/envs/$conda_env python=$py_ver ipython "
"ipykernel && \\"
msgstr ""

#: ../../using/recipes.md:118 3de10c742b024da5baa1e4250c2c7810
msgid ""
"# alternatively, you can comment out the lines above and uncomment those "
"below # if you'd prefer to use a YAML file present in the docker build "
"context"
msgstr ""

#: ../../using/recipes.md:121 03c4cab0921046ada9aa6e7008d8fd06
msgid ""
"# COPY environment.yml /home/$NB_USER/tmp/ # RUN cd /home/$NB_USER/tmp/ "
"&& \\ #     conda env create -p $CONDA_DIR/envs/$conda_env -f "
"environment.yml && \\ #     conda clean --all -f -y"
msgstr ""

#: ../../using/recipes.md:127 15ccae340b8a498c8f51bcd1fc5ba097
msgid ""
"# create Python 3.x environment and link it to jupyter RUN "
"$CONDA_DIR/envs/${conda_env}/bin/python -m ipykernel install --user "
"--name=${conda_env} && \\"
msgstr ""

#: ../../using/recipes.md:132 ac1726fe0b9e4089a0e3d8af96bf96bb
msgid ""
"# any additional pip installs can be added by uncommenting the following "
"line # RUN $CONDA_DIR/envs/${conda_env}/bin/pip install"
msgstr ""

#: ../../using/recipes.md:135 910d7b771fcd4073a049268d719818eb
msgid ""
"# prepend conda environment to path ENV PATH "
"$CONDA_DIR/envs/${conda_env}/bin:$PATH"
msgstr ""

#: ../../using/recipes.md:138 ab5e172ccfc94a8bbba940c5b78023b2
msgid ""
"# if you want this environment to be the default one, uncomment the "
"following line: # ENV CONDA_DEFAULT_ENV ${conda_env} ```"
msgstr ""

#: ../../using/recipes.md:142 85bb7693bc5e4c3c8912b2c661103b01
msgid "## Run JupyterLab"
msgstr ""

#: ../../using/recipes.md:144 15842765c1924de799d1bbfdcc28c839
msgid ""
"JupyterLab is preinstalled as a notebook extension starting in tag "
"[c33a7dc0eece](https://github.com/jupyter/docker-stacks/wiki/Docker-"
"build-history)."
msgstr ""

#: ../../using/recipes.md:147 23f1e36ce72442ed965465e3ebe45927
msgid ""
"Run jupyterlab using a command such as `docker run -it --rm -p 8888:8888 "
"jupyter/datascience-notebook start.sh jupyter lab`"
msgstr ""

#: ../../using/recipes.md:150 d2f14e2f18ec488b8b751ace7feaddbf
msgid "## Dask JupyterLab Extension"
msgstr ""

#: ../../using/recipes.md:152 f1e0413d93654c388a76ce6098019519
msgid ""
"[Dask JupyterLab Extension](https://github.com/dask/dask-labextension) "
"provides a JupyterLab extension to manage Dask clusters, as well as embed"
" Dask's dashboard plots directly into JupyterLab panes. Create the "
"Dockerfile as:"
msgstr ""

#: ../../using/recipes.md:154 b1d18ea58fba45e1990f45a76e6210be
msgid ""
"```dockerfile # Start from a core stack version FROM jupyter/scipy-"
"notebook:latest"
msgstr ""

#: ../../using/recipes.md:158 8edc7bb599d148ecbfaebcc53b34a463
msgid "# Install the Dask dashboard RUN pip install dask_labextension ; \\"
msgstr ""

#: ../../using/recipes.md:160 c62d4280976d458d87a20b38016345d8
msgid "jupyter labextension install -y --clean \\ dask-labextension"
msgstr ""

#: ../../using/recipes.md:163 d043763d51244b578edd8685fc935403
msgid "# Dask Scheduler & Bokeh ports EXPOSE 8787 EXPOSE 8786"
msgstr ""

#: ../../using/recipes.md:167 0330074bb6f94667bc3d0f6f37e0e24f
msgid "ENTRYPOINT [\"jupyter\", \"lab\", \"--ip=0.0.0.0\", \"--allow-root\"] ```"
msgstr ""

#: ../../using/recipes.md:170 ccf80ac7190a4c2994ebf8956b4fbe5b
msgid ""
"And build the image as: ``` docker build -t jupyter/scipy-"
"dasklabextension:latest . ```"
msgstr ""

#: ../../using/recipes.md:175 c26d72cf61a149eda454283d1e66095a
msgid ""
"Once built, run using the command: ``` docker run -it --rm -p 8888:8888 "
"-p 8787:8787 jupyter/scipy-dasklabextension:latest ```"
msgstr ""

#: ../../using/recipes.md:180 9b88964d89b941188f8d80fb65415f72
msgid ""
"Ref: [https://github.com/jupyter/docker-"
"stacks/issues/999](https://github.com/jupyter/docker-stacks/issues/999)"
msgstr ""

#: ../../using/recipes.md:183 7237ac54a21244748b7da0aa79920437
msgid "## Let's Encrypt a Notebook server"
msgstr ""

#: ../../using/recipes.md:185 3c0effc5537c464fa629f4b5a08280ea
msgid ""
"See the README for the simple automation here [https://github.com/jupyter"
"/docker-stacks/tree/master/examples/make-"
"deploy](https://github.com/jupyter/docker-stacks/tree/master/examples"
"/make-deploy) which includes steps for requesting and renewing a Let's "
"Encrypt certificate."
msgstr ""

#: ../../using/recipes.md:189 741d7a19e839425eb1052c68e6cfa132
msgid ""
"Ref: [https://github.com/jupyter/docker-"
"stacks/issues/78](https://github.com/jupyter/docker-stacks/issues/78)"
msgstr ""

#: ../../using/recipes.md:192 5047574ba5f4491f93a90213d9713bfa
msgid "## Slideshows with Jupyter and RISE"
msgstr ""

#: ../../using/recipes.md:194 f6fac824e91f423ebc84b56afd77ac56
msgid ""
"[RISE](https://github.com/damianavila/RISE) allows via extension to "
"create live slideshows of your notebooks, with no conversion, adding "
"javascript Reveal.js:"
msgstr ""

#: ../../using/recipes.md:197 22ed6dff07a24005a80687fd31bdd171
msgid ""
"``` # Add Live slideshows with RISE RUN conda install -c damianavila82 "
"rise ```"
msgstr ""

#: ../../using/recipes.md:202 1bbbe06ccc2b48448cb5a370f2a8a063
msgid ""
"Credit: [Paolo D.](https://github.com/pdonorio) based on [docker-"
"stacks/issues/43](https://github.com/jupyter/docker-stacks/issues/43)"
msgstr ""

#: ../../using/recipes.md:205 0f136c7919444f71b09c405044292b5a
msgid "## xgboost"
msgstr ""

# ce204678c3af4aa9a0fb55bb6de7554b
#: ../../using/recipes.md:207 f9b85829302545a6b5275e5ed60b0739
msgid ""
"You need to install conda's gcc for Python xgboost to work properly. "
"Otherwise, you'll get an exception about libgomp.so.1 missing GOMP_4.0."
msgstr ""

#: ../../using/recipes.md:210 d379521a04d14ba69901c4f48db0992d
#, python-format
msgid "``` %%bash conda install -y gcc pip install xgboost"
msgstr ""

#: ../../using/recipes.md:215 ef8361203f604141a1e31c6ca8f77639
msgid "import xgboost ```"
msgstr ""

#: ../../using/recipes.md:218 8820d1df4bf2406f86d168bf5cc92efd
msgid "## Running behind a nginx proxy"
msgstr ""

# ca7763a5a35a47bd9fb29ae9d00feab3
#: ../../using/recipes.md:220 2eebeaa2a6484ac5964c6c0a9e2a620c
msgid ""
"Sometimes it is useful to run the Jupyter instance behind a nginx proxy, "
"for instance:"
msgstr ""

#: ../../using/recipes.md:222 2ae8dd756da14d7c925c87bde78c209d
msgid ""
"you would prefer to access the notebook at a server URL with a path "
"(`https://example.com/jupyter`) rather than a port "
"(`https://example.com:8888`)"
msgstr ""

# a5129fb6e2b042f5b8161ed5318123f9
#: ../../using/recipes.md:224 897f417f3ff34dabb697213ebec86adb
msgid ""
"you may have many different services in addition to Jupyter running on "
"the same server, and want to nginx to help improve server performance in "
"manage the connections"
msgstr ""

#: ../../using/recipes.md:227 631cb760f39546ecb7183a8e05b63a3d
msgid ""
"Here is a [quick example NGINX "
"configuration](https://gist.github.com/cboettig/8643341bd3c93b62b5c2) to "
"get started. You'll need a server, a `.crt` and `.key` file for your "
"server, and `docker` & `docker-compose` installed. Then just download the"
" files at that gist and run `docker-compose up -d` to test it out. "
"Customize the `nginx.conf` file to set the desired paths and add other "
"services."
msgstr ""

#: ../../using/recipes.md:232 a9210c3743774f09a6a56774710a0f83
msgid "## Host volume mounts and notebook errors"
msgstr ""

#: ../../using/recipes.md:234 3059e1cb90c049d3aca257b25617207a
msgid ""
"If you are mounting a host directory as `/home/jovyan/work` in your "
"container and you receive permission errors or connection errors when you"
" create a notebook, be sure that the `jovyan` user (UID=1000 by default) "
"has read/write access to the directory on the host. Alternatively, "
"specify the UID of the `jovyan` user on container startup using the `-e "
"NB_UID` option described in the [Common Features, Docker Options "
"section](../using/common.html#Docker-Options)"
msgstr ""

#: ../../using/recipes.md:240 ec9565cc66e14c9280a8517b6d52ccae
msgid ""
"Ref: [https://github.com/jupyter/docker-"
"stacks/issues/199](https://github.com/jupyter/docker-stacks/issues/199)"
msgstr ""

#: ../../using/recipes.md:243 078d73cf3994428b90089687585a7703
msgid "## Manpage installation"
msgstr ""

# 7fc6566074ee4ba3a4e579437d7f151d
#: ../../using/recipes.md:245 a7e9f58a6c764bccb82c04448cb43fe9
msgid ""
"Most containers, including our Ubuntu base image, ship without manpages "
"installed to save space. You can use the following dockerfile to inherit "
"from one of our images to enable manpages:"
msgstr ""

#: ../../using/recipes.md:248 a26f27b071204a839ae5fde180dfffbd
msgid ""
"```dockerfile # Choose your desired base image ARG BASE_CONTAINER=jupyter"
"/datascience-notebook:latest FROM $BASE_CONTAINER"
msgstr ""

#: ../../using/recipes.md:255 db7d89c430da4cdb8f31443bfd65ae56
msgid ""
"# Remove the manpage blacklist, install man, install docs RUN rm "
"/etc/dpkg/dpkg.cfg.d/excludes \\"
msgstr ""

#: ../../using/recipes.md:257 ../../using/recipes.md:285
#: 12ac8572e8e64f27848a9cc3a8c71049 3456311ca9ac479b862c506a9a8c960c
msgid ""
"&& apt-get update \\ && dpkg -l | grep ^ii | cut -d' ' -f3 | xargs apt-"
"get install -yq --no-install-recommends --reinstall man \\ && apt-get "
"clean \\ && rm -rf /var/lib/apt/lists/*"
msgstr ""

#: ../../using/recipes.md:262 a582228f8ccb45ffb5252de4ff88c92c
msgid ""
"# Workaround for a mandb bug, should be fixed in mandb > 2.8.5 # "
"https://git.savannah.gnu.org/cgit/man-"
"db.git/commit/?id=8197d7824f814c5d4b992b4c8730b5b0f7ec589a RUN echo "
"\"MANPATH_MAP ${CONDA_DIR}/bin ${CONDA_DIR}/man\" >> /etc/manpath.config "
"\\"
msgstr ""

#: ../../using/recipes.md:265 b426fa1075494eaebb14966f88c4d485
msgid ""
"&& echo \"MANPATH_MAP ${CONDA_DIR}/bin ${CONDA_DIR}/share/man\" >> "
"/etc/manpath.config \\ && mandb"
msgstr ""

#: ../../using/recipes.md:268 e4941e7ad9964b518aad3a6924ce02c6
msgid "USER $NB_UID ```"
msgstr ""

#: ../../using/recipes.md:271 4084b5a2743f42baa4ff24ead7db872b
msgid ""
"Adding the documentation on top of an existing singleuser image wastes a "
"lot of space and requires reinstalling every system package, which can "
"take additional time and bandwidth; the `datascience-notebook` image has "
"been shown to grow by almost 3GB when adding manapages in this way. "
"Enabling manpages in the base Ubuntu layer prevents this container bloat:"
msgstr ""

#: ../../using/recipes.md:276 7a73a85acfd04c1195e6177771f532bd
msgid ""
"```Dockerfile # Ubuntu 18.04 (bionic) from 2018-05-26 # "
"https://github.com/docker-library/official-"
"images/commit/aac6a45b9eb2bffb8102353c350d341a410fb169 ARG "
"BASE_CONTAINER=ubuntu:bionic-20180526@sha256:c8c275751219dadad8fa56b3ac41ca6cb22219ff117ca98fe82b42f24e1ba64e"
" FROM $BASE_CONTAINER"
msgstr ""

#: ../../using/recipes.md:282 70650a6df87147a48d2fabd2c01c2047
msgid ""
"ENV DEBIAN_FRONTEND noninteractive # Remove the manpage blacklist, "
"install man, install docs RUN rm /etc/dpkg/dpkg.cfg.d/excludes \\"
msgstr ""

#: ../../using/recipes.md:290 46925639522742cb962e0b578887b452
msgid ""
"# Workaround for a mandb bug, should be fixed in mandb > 2.8.5 # "
"https://git.savannah.gnu.org/cgit/man-"
"db.git/commit/?id=8197d7824f814c5d4b992b4c8730b5b0f7ec589a RUN echo "
"\"MANPATH_MAP /opt/conda/bin /opt/conda/man\" >> /etc/manpath.config \\"
msgstr ""

#: ../../using/recipes.md:293 a2e53552236b4a00b833109cc30e588b
msgid ""
"&& echo \"MANPATH_MAP /opt/conda/bin /opt/conda/share/man\" >> "
"/etc/manpath.config"
msgstr ""

#: ../../using/recipes.md:296 7f71b9682b1f4618bcb6a807bfc3975c
msgid ""
"Be sure to check the current base image in `base-notebook` before "
"building."
msgstr ""

#: ../../using/recipes.md:298 382db40f278e4b5da5966492ec14f485
msgid "## JupyterHub"
msgstr ""

# af0ca920391b419b805ae3809388fcf2
#: ../../using/recipes.md:300 1d9ef2c16b7c4df1a880ddbe8dc51480
msgid "We also have contributed recipes for using JupyterHub."
msgstr ""

#: ../../using/recipes.md:302 881b6fcee078435dad646479b117e91a
msgid "### Use JupyterHub's dockerspawner"
msgstr ""

# 81e1dbb4c1c34f4c9e88630adff3d1e9
#: ../../using/recipes.md:304 13bace92cd4e481986ed87ed302cc97a
msgid ""
"In most cases for use with DockerSpawner, given any image that already "
"has a notebook stack set up, you would only need to add:"
msgstr ""

# 837b7a2dac01402e8cd2cc398bd5d785
#: ../../using/recipes.md:307 4b6590d4f5c94d39bcf28ef793cf6e40
msgid "install the jupyterhub-singleuser script (for the right Python)"
msgstr ""

# d9816cb5ae2041e2a5fde9cdfb91262f
#: ../../using/recipes.md:308 414121e9505a47e4b80051c3dd676090
msgid "change the command to launch the single-user server"
msgstr ""

#: ../../using/recipes.md:310 f14bbd617ebe4dc394a9344a3c691c3a
msgid ""
"Swapping out the `FROM` line in the `jupyterhub/singleuser` Dockerfile "
"should be enough for most cases."
msgstr ""

#: ../../using/recipes.md:313 1998fe1630b249ecb8376a8908f608c4
msgid ""
"Credit: [Justin Tyberg](https://github.com/jtyberg), "
"[quanghoc](https://github.com/quanghoc), and [Min "
"RK](https://github.com/minrk) based on [docker-"
"stacks/issues/124](https://github.com/jupyter/docker-stacks/issues/124) "
"and [docker-stacks/pull/185](https://github.com/jupyter/docker-"
"stacks/pull/185)"
msgstr ""

#: ../../using/recipes.md:318 783d1c44cbeb4913a5a008805f869990
msgid "### Containers with a specific version of JupyterHub"
msgstr ""

#: ../../using/recipes.md:320 acccfc7c79c544f19b0aee0127d69771
msgid ""
"To use a specific version of JupyterHub, the version of `jupyterhub` in "
"your image should match the version in the Hub itself."
msgstr ""

#: ../../using/recipes.md:323 235dbaf58cd34adab95a08dc852be4a1
msgid ""
"``` FROM  jupyter/base-notebook:5ded1de07260 RUN pip install "
"jupyterhub==0.8.0b1 ```"
msgstr ""

#: ../../using/recipes.md:328 5e9d13a33fe3496d8f214bbcc0f7dd96
msgid ""
"Credit: [MinRK](https://github.com/jupyter/docker-"
"stacks/issues/423#issuecomment-322767742)"
msgstr ""

#: ../../using/recipes.md:330 7728a83373a8403a9e6cf01dbd48842c
msgid ""
"Ref: [https://github.com/jupyter/docker-"
"stacks/issues/177](https://github.com/jupyter/docker-stacks/issues/177)"
msgstr ""

#: ../../using/recipes.md:333 08ea6d6965764e85a5ad153d97e09300
msgid "## Spark"
msgstr ""

# 975c96d6a0b843dfabd889c753671c93
#: ../../using/recipes.md:335 14ab9847ae0c43fd9548a80b1e4b6261
msgid "A few suggestions have been made regarding using Docker Stacks with spark."
msgstr ""

#: ../../using/recipes.md:337 2b3d8d423b4048b2bebdbd3dff776e13
msgid "### Using PySpark with AWS S3"
msgstr ""

# dc4059d42eaa495f8ebca84ebc91ac09
#: ../../using/recipes.md:339 60ecd1844ddd4eda93e342f57f7676d7
msgid "Using Spark session for hadoop 2.7.3"
msgstr ""

#: ../../using/recipes.md:341 a49985a32c814506a34f0473e95edd86
msgid ""
"```py import os # !ls /usr/local/spark/jars/hadoop* # to figure out what "
"version of hadoop os.environ['PYSPARK_SUBMIT_ARGS'] = '--packages "
"\"org.apache.hadoop:hadoop-aws:2.7.3\" pyspark-shell'"
msgstr ""

#: ../../using/recipes.md:346 be6a368c07524cca90ccadcf76030838
msgid "import pyspark myAccessKey = input() mySecretKey = input()"
msgstr ""

#: ../../using/recipes.md:354 876978b733a942e5bd226f4d209959df
msgid "spark = pyspark.sql.SparkSession.builder \\"
msgstr ""

#: ../../using/recipes.md:351 e818437e8cda4a219284685f40e9aa6c
msgid ""
".master(\"local[*]\") \\ .config(\"spark.hadoop.fs.s3a.access.key\", "
"myAccessKey) \\ .config(\"spark.hadoop.fs.s3a.secret.key\", mySecretKey) "
"\\ .getOrCreate()"
msgstr ""

#: ../../using/recipes.md:356 814c8f82e9cc486a9209a5c760377caa
msgid "df = spark.read.parquet(\"s3://myBucket/myKey\") ```"
msgstr ""

# d2c12e3525bf4d9ca518fef02c4a79d3
#: ../../using/recipes.md:359 c31d7aba508b4c8690c11a1a9f7e56a6
msgid "Using Spark context for hadoop 2.6.0"
msgstr ""

#: ../../using/recipes.md:361 ebc430c8e7b2493a8ded1aeaad6fff3b
msgid ""
"```py import os os.environ['PYSPARK_SUBMIT_ARGS'] = '--packages "
"com.amazonaws:aws-java-sdk:1.10.34,org.apache.hadoop:hadoop-aws:2.6.0 "
"pyspark-shell'"
msgstr ""

#: ../../using/recipes.md:365 681e18526f39490f86fc736c228e213a
msgid "import pyspark sc = pyspark.SparkContext(\"local[*]\")"
msgstr ""

#: ../../using/recipes.md:368 57f40ea69a1049749dd43d024c09d100
msgid "from pyspark.sql import SQLContext sqlContext = SQLContext(sc)"
msgstr ""

#: ../../using/recipes.md:371 7922350a062444fe9b8551568dce3b47
msgid ""
"hadoopConf = sc._jsc.hadoopConfiguration() myAccessKey = input() "
"mySecretKey = input() hadoopConf.set(\"fs.s3.impl\", "
"\"org.apache.hadoop.fs.s3native.NativeS3FileSystem\") "
"hadoopConf.set(\"fs.s3.awsAccessKeyId\", myAccessKey) "
"hadoopConf.set(\"fs.s3.awsSecretAccessKey\", mySecretKey)"
msgstr ""

#: ../../using/recipes.md:378 dd857564c5694934bc3a137b5d40c978
msgid "df = sqlContext.read.parquet(\"s3://myBucket/myKey\") ```"
msgstr ""

#: ../../using/recipes.md:381 575a22e405cf4b929098c34d18c0bffe
msgid ""
"Ref: [https://github.com/jupyter/docker-"
"stacks/issues/127](https://github.com/jupyter/docker-stacks/issues/127)"
msgstr ""

#: ../../using/recipes.md:384 9f32e03110ce4b3299d846e553305abe
msgid "### Using Local Spark JARs"
msgstr ""

#: ../../using/recipes.md:386 4db2fb1cc906430995089e5792caf6ed
msgid ""
"``` import os os.environ['PYSPARK_SUBMIT_ARGS'] = '--jars /home/jovyan"
"/spark-streaming-kafka-assembly_2.10-1.6.1.jar pyspark-shell' import "
"pyspark from pyspark.streaming.kafka import KafkaUtils from "
"pyspark.streaming import StreamingContext sc = pyspark.SparkContext() ssc"
" = StreamingContext(sc,1) broker = \"<my_broker_ip>\" directKafkaStream ="
" KafkaUtils.createDirectStream(ssc, [\"test1\"], "
"{\"metadata.broker.list\": broker}) directKafkaStream.pprint() "
"ssc.start() ```"
msgstr ""

#: ../../using/recipes.md:400 5152e7e729e54f7c8c558475a361885d
msgid ""
"Ref: [https://github.com/jupyter/docker-"
"stacks/issues/154](https://github.com/jupyter/docker-stacks/issues/154)"
msgstr ""

#: ../../using/recipes.md:403 be07740b720648b2baf54468f03b5b48
msgid "### Using spark-packages.org"
msgstr ""

#: ../../using/recipes.md:405 f6ff448038c5460a895e10eb89d28059
msgid ""
"If you'd like to use packages from [spark-packages.org](https://spark-"
"packages.org/), see "
"[https://gist.github.com/parente/c95fdaba5a9a066efaab](https://gist.github.com/parente/c95fdaba5a9a066efaab)"
" for an example of how to specify the package identifier in the "
"environment before creating a SparkContext."
msgstr ""

#: ../../using/recipes.md:410 850d6fc92e7f4821a15a2eda7275721d
msgid ""
"Ref: [https://github.com/jupyter/docker-"
"stacks/issues/43](https://github.com/jupyter/docker-stacks/issues/43)"
msgstr ""

#: ../../using/recipes.md:413 8cb3922eae324a2388ea53df0fc9a179
msgid "### Use jupyter/all-spark-notebooks with an existing Spark/YARN cluster"
msgstr ""

#: ../../using/recipes.md:415 67eaf769965748c6be9f7ab30714e4ff
msgid "``` FROM jupyter/all-spark-notebook"
msgstr ""

#: ../../using/recipes.md:418 9dd665058f6347c0b67934d460958c21
msgid ""
"# Set env vars for pydoop ENV HADOOP_HOME /usr/local/hadoop-2.7.3 ENV "
"JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64 ENV HADOOP_CONF_HOME "
"/usr/local/hadoop-2.7.3/etc/hadoop ENV HADOOP_CONF_DIR  "
"/usr/local/hadoop-2.7.3/etc/hadoop"
msgstr ""

#: ../../using/recipes.md:424 0abe76a13ab149b29a5c2c1f93cda559
msgid ""
"USER root # Add proper open-jdk-8 not just the jre, needed for pydoop RUN"
" echo 'deb http://cdn-fastly.deb.debian.org/debian jessie-backports main'"
" > /etc/apt/sources.list.d/jessie-backports.list && \\"
msgstr ""

#: ../../using/recipes.md:427 c4eb23f540804474a9e531b7c612de13
msgid ""
"apt-get -y update && \\ apt-get install --no-install-recommends -t "
"jessie-backports -y openjdk-8-jdk && \\ rm /etc/apt/sources.list.d"
"/jessie-backports.list && \\ apt-get clean && \\ rm -rf "
"/var/lib/apt/lists/ && \\"
msgstr ""

#: ../../using/recipes.md:435 59b1c5bf2e8d4f2c85ae816af695632f
msgid "# Add hadoop binaries"
msgstr ""

#: ../../using/recipes.md:433 98cd72669b9c4e6a87a58ae97fdc1874
msgid ""
"wget "
"http://mirrors.ukfast.co.uk/sites/ftp.apache.org/hadoop/common/hadoop-2.7.3/hadoop-2.7.3.tar.gz"
" && \\ tar -xvf hadoop-2.7.3.tar.gz -C /usr/local && \\ chown -R "
"$NB_USER:users /usr/local/hadoop-2.7.3 && \\ rm -f hadoop-2.7.3.tar.gz &&"
" \\"
msgstr ""

#: ../../using/recipes.md:440 811fc945959440afb72bed839ebeeb38
msgid "# Install os dependencies required for pydoop, pyhive"
msgstr ""

#: ../../using/recipes.md:438 cd3fee83e1184750b5122947a5f9a883
msgid ""
"apt-get update && \\ apt-get install --no-install-recommends -y build-"
"essential python-dev libsasl2-dev && \\ apt-get clean && \\ rm -rf "
"/var/lib/apt/lists/* && \\"
msgstr ""

#: ../../using/recipes.md:442 1bb879820da04fb6a0239273ae80f8fc
msgid ""
"# Remove the example hadoop configs and replace # with those for our "
"cluster. # Alternatively this could be mounted as a volume"
msgstr ""

#: ../../using/recipes.md:445 576229650f954842a83372bdc7eb376e
msgid "rm -f /usr/local/hadoop-2.7.3/etc/hadoop/*"
msgstr ""

#: ../../using/recipes.md:447 2baea433c4e64496a4fe40faa4e4434b
msgid ""
"# Download this from ambari / cloudera manager and copy here COPY "
"example-hadoop-conf/ /usr/local/hadoop-2.7.3/etc/hadoop/"
msgstr ""

#: ../../using/recipes.md:450 1b870a0bd07f46ea986d84eff205b4db
msgid ""
"# Spark-Submit doesn't work unless I set the following RUN echo "
"\"spark.driver.extraJavaOptions -Dhdp.version=2.5.3.0-37\" >> "
"/usr/local/spark/conf/spark-defaults.conf  && \\"
msgstr ""

#: ../../using/recipes.md:452 b37741d8c066482686e01ef9b664b80e
msgid ""
"echo \"spark.yarn.am.extraJavaOptions -Dhdp.version=2.5.3.0-37\" >> "
"/usr/local/spark/conf/spark-defaults.conf && \\ echo "
"\"spark.master=yarn\" >>  /usr/local/spark/conf/spark-defaults.conf && \\"
" echo \"spark.hadoop.yarn.timeline-service.enabled=false\" >> "
"/usr/local/spark/conf/spark-defaults.conf && \\ chown -R $NB_USER:users "
"/usr/local/spark/conf/spark-defaults.conf && \\ # Create an alternative "
"HADOOP_CONF_HOME so we can mount as a volume and repoint # using ENV var "
"if needed mkdir -p /etc/hadoop/conf/ && \\ chown $NB_USER:users "
"/etc/hadoop/conf/"
msgstr ""

#: ../../using/recipes.md:461 ../../using/recipes.md:509
#: 99c91056cbb740b08ec23a63f9ebaa60 f09c86b0fbbd42d7af5ad9e737ff4a7e
msgid "USER $NB_USER"
msgstr ""

#: ../../using/recipes.md:463 3c3a44b784634b9ea771802c4f897e6e
msgid ""
"# Install useful jupyter extensions and python libraries like : # - "
"Dashboards # - PyDoop # - PyHive RUN pip install jupyter_dashboards faker"
" && \\"
msgstr ""

#: ../../using/recipes.md:468 cd4fb4bc43e046078c8969452bc91d34
msgid ""
"jupyter dashboards quick-setup --sys-prefix && \\ pip2 install pyhive "
"pydoop thrift sasl thrift_sasl faker"
msgstr ""

#: ../../using/recipes.md:471 cedf6c2056ac4f66b8e1144708e732ba
msgid ""
"USER root # Ensure we overwrite the kernel config so that toree connects "
"to cluster RUN jupyter toree install --sys-prefix --spark_opts=\"--master"
" yarn --deploy-mode client --driver-memory 512m  --executor-memory 512m  "
"--executor-cores 1 --driver-java-options -Dhdp.version=2.5.3.0-37 --conf "
"spark.hadoop.yarn.timeline-service.enabled=false\" USER $NB_USER ```"
msgstr ""

#: ../../using/recipes.md:477 4f9a3749de344e429ad357d3997cc21b
msgid ""
"Credit: [britishbadger](https://github.com/britishbadger) from [docker-"
"stacks/issues/369](https://github.com/jupyter/docker-stacks/issues/369)"
msgstr ""

#: ../../using/recipes.md:480 408da0025ca941928bbbee31d49c3aeb
msgid ""
"## Run Jupyter Notebook/Lab inside an already secured environment (i.e., "
"with no token)"
msgstr ""

#: ../../using/recipes.md:482 a94c436665dc40c286d78896c72cd76b
msgid ""
"(Adapted from [issue 728](https://github.com/jupyter/docker-"
"stacks/issues/728))"
msgstr ""

#: ../../using/recipes.md:484 48426a4762f74f26ba3e541f373334dd
msgid ""
"The default security is very good. There are use cases, encouraged by "
"containers, where the jupyter container and the system it runs within, "
"lie inside the security boundary. In these use cases it is convenient to "
"launch the server without a password or token. In this case, you should "
"use the `start.sh` script to launch the server with no token:"
msgstr ""

# 7476a6d5eae74ecaae966e56390c096e
#: ../../using/recipes.md:489 2e4b47a1671048b7ae9a1639725d1146
msgid "For jupyterlab:"
msgstr ""

#: ../../using/recipes.md:491 ca354139ac334c01981409b4b3885acb
msgid ""
"``` docker run jupyter/base-notebook:6d2a05346196 start.sh jupyter lab "
"--LabApp.token='' ```"
msgstr ""

# f2efc5a0ba6b4c53b2047cc5f22bdbaa
#: ../../using/recipes.md:495 f5cd6945d4654f27abd71ed89c7a0dc5
msgid "For jupyter classic:"
msgstr ""

#: ../../using/recipes.md:497 49be3255af3c453fa2723931b130af72
msgid ""
"``` docker run jupyter/base-notebook:6d2a05346196 start.sh jupyter "
"notebook --NotebookApp.token='' ```"
msgstr ""

#: ../../using/recipes.md:501 d98d3a5ae7244a5c9d6228dbfd093758
msgid "## Enable nbextension spellchecker for markdown (or any other nbextension)"
msgstr ""

# 8ccfbcb4264f48d0b6709fe81aa0a86d
#: ../../using/recipes.md:503 debbe61b8e2b44d495ab7f690031ddbf
msgid "NB: this works for classic notebooks only"
msgstr ""

#: ../../using/recipes.md:505 2eb5c4213d0f455faa9a07a72040ccae
msgid ""
"``` # Update with your base image of choice FROM jupyter/minimal-"
"notebook:latest"
msgstr ""

#: ../../using/recipes.md:513 19b0e1a364fb419bb22aa505f96a90fc
msgid "RUN pip install jupyter_contrib_nbextensions && \\"
msgstr ""

#: ../../using/recipes.md:512 6faaa951ec6e44a1a76ad7d19c174f61
msgid ""
"jupyter contrib nbextension install --user && \\ # can modify or enable "
"additional extensions here jupyter nbextension enable spellchecker/main "
"--user"
msgstr ""

#: ../../using/recipes.md:517 48c31db8cb2545bba6d4e18dd238cece
msgid ""
"Ref: [https://github.com/jupyter/docker-"
"stacks/issues/675](https://github.com/jupyter/docker-stacks/issues/675)"
msgstr ""

#: ../../using/recipes.md:520 f7edd9b66e234988a7730fa9f13f7b2f
msgid "## Enable auto-sklearn notebooks"
msgstr ""

#: ../../using/recipes.md:522 ab7cf6d1d2d34b2793a2ca0416692978
msgid ""
"Using `auto-sklearn` requires `swig`, which the other notebook images "
"lack, so it cant be experimented with. Also, there is no Conda package "
"for `auto-sklearn`."
msgstr ""

#: ../../using/recipes.md:524 66b88604504a45be85b2be0ee741362a
msgid ""
"``` ARG BASE_CONTAINER=jupyter/scipy-notebook FROM jupyter/scipy-"
"notebook:latest"
msgstr ""

#: ../../using/recipes.md:530 d98c1a2d4731465ea1f397706c955004
msgid ""
"# autosklearn requires swig, which no other image has RUN apt-get update "
"&& \\"
msgstr ""

#: ../../using/recipes.md:532 bde41a4123e241c794922bda0240c6e4
msgid ""
"apt-get install -y --no-install-recommends swig && \\ apt-get clean && \\"
" rm -rf /var/lib/apt/lists/*"
msgstr ""

#: ../../using/recipes.md:537 c0bddc2cf61e4be48fe1135e797750ab
msgid "USER $NB_UID"
msgstr ""

#: ../../using/recipes.md:539 43074696045949d783f520584f7f2df7
msgid "RUN pip install --quiet --no-cache-dir auto-sklearn ```"
msgstr ""

#: ../../using/running.md:1 5bbff820ab0640b3abe2a93dd6b2c7d6
msgid "# Running a Container"
msgstr ""

# 1f345e7a53e94439b936b3f4bbc877da
# 324906e630c646b0ae10bbff6ed587fa
#: ../../using/running.md:3 ../../using/selecting.md:7
#: 6e890b9a0e4f4ac4a8f5da5905dc7f0a b8a98f50d8354db88b80d63d79e27001
msgid "Using one of the Jupyter Docker Stacks requires two choices:"
msgstr ""

# 781cbaffaea24fb08451cc83327cfa9b
# 1c6c83776a3b4a27a8ed4128a0dceeb7
#: ../../using/running.md:5 ../../using/selecting.md:9
#: 2d5e155a712a42c4ae86141b0491b48f 6f621e0208fa4898a8258a58be01bf4a
msgid "Which Docker image you wish to use"
msgstr ""

# 632f67c9207e4ed9ba01bf59c4d942f7
# ab191cfc95204429b7c0271ecdf69d33
#: ../../using/running.md:6 ../../using/selecting.md:10
#: 596e93a22dd04fc4b08891ba444fc85d e9d8751289dd4a5094db978246d5e2ea
msgid "How you wish to start Docker containers from that image"
msgstr ""

# ebf870aa1ede4e2ab8fdcb2cef0fd610
#: ../../using/running.md:8 4622bc5032aa447c8f79bad9ed6aa6fc
msgid "This section provides details about the second."
msgstr ""

#: ../../using/running.md:10 aacee9da5f1040a69020c8eeea203f26
msgid "## Using the Docker CLI"
msgstr ""

#: ../../using/running.md:12 55c609e319434814bba4c8e4785068bb
msgid ""
"You can launch a local Docker container from the Jupyter Docker Stacks "
"using the [Docker command line "
"interface](https://docs.docker.com/engine/reference/commandline/cli/). "
"There are numerous ways to configure containers using the CLI. The "
"following are some common patterns."
msgstr ""

#: ../../using/running.md:14 0ddcebd4a9db400f9e206d4e59e6099a
msgid ""
"**Example 1** This command pulls the `jupyter/scipy-notebook` image "
"tagged `2c80cf3537ca` from Docker Hub if it is not already present on the"
" local host. It then starts a container running a Jupyter Notebook server"
" and exposes the server on host port 8888. The server logs appear in the "
"terminal and include a URL to the notebook server."
msgstr ""

#: ../../using/running.md:16 fabdd4aa855b45d085d939f846c18ad4
msgid "``` docker run -p 8888:8888 jupyter/scipy-notebook:2c80cf3537ca"
msgstr ""

#: ../../using/running.md:19 452efc00ee9f4eabb4520ba865cece96
msgid ""
"Executing the command: jupyter notebook [I 15:33:00.567 NotebookApp] "
"Writing notebook server cookie secret to "
"/home/jovyan/.local/share/jupyter/runtime/notebook_cookie_secret [W "
"15:33:01.084 NotebookApp] WARNING: The notebook server is listening on "
"all IP addresses and not using encryption. This is not recommended. [I "
"15:33:01.150 NotebookApp] JupyterLab alpha preview extension loaded from "
"/opt/conda/lib/python3.6/site-packages/jupyterlab [I 15:33:01.150 "
"NotebookApp] JupyterLab application directory is "
"/opt/conda/share/jupyter/lab [I 15:33:01.155 NotebookApp] Serving "
"notebooks from local directory: /home/jovyan [I 15:33:01.156 NotebookApp]"
" 0 active kernels [I 15:33:01.156 NotebookApp] The Jupyter Notebook is "
"running at: [I 15:33:01.157 NotebookApp] http://[all ip addresses on your"
" system]:8888/?token=112bb073331f1460b73768c76dffb2f87ac1d4ca7870d46a [I "
"15:33:01.157 NotebookApp] Use Control-C to stop this server and shut down"
" all kernels (twice to skip confirmation). [C 15:33:01.160 NotebookApp]"
msgstr ""

#: ../../using/running.md:31 ../../using/running.md:72
#: ../../using/running.md:94 465865c880df402eade001d4f0f3e429
#: a604ff1476b04cb4a9378d4a46e52451 ddefa86005ab4b7288ba2354b1b54dc3
msgid ""
"Copy/paste this URL into your browser when you connect for the first "
"time, to login with a token:"
msgstr ""

#: ../../using/running.md:33 0b84861d31684e5f8080f569b0a46085
msgid "http://localhost:8888/?token=112bb073331f1460b73768c76dffb2f87ac1d4ca7870d46a"
msgstr ""

#: ../../using/running.md:36 a762c086c7c546338bd0fee5bb722c54
msgid ""
"Pressing `Ctrl-C` shuts down the notebook server but leaves the container"
" intact on disk for later restart or permanent deletion using commands "
"like the following:"
msgstr ""

#: ../../using/running.md:38 55a1273ea37543949abfa0afa1155442
msgid ""
"``` # list containers docker ps -a CONTAINER ID        IMAGE"
"                   COMMAND                  CREATED    STATUS"
"                      PORTS               NAMES d67fe77f1a84        "
"jupyter/base-notebook   \"tini -- start-noteb…\"   44 seconds ago    "
"Exited (0) 39 seconds ago                       cocky_mirzakhani"
msgstr ""

#: ../../using/running.md:44 339d8c25d4674bd68998bd2a0598ce67
msgid ""
"# start the stopped container docker start -a d67fe77f1a84 Executing the "
"command: jupyter notebook [W 16:45:02.020 NotebookApp] WARNING: The "
"notebook server is listening on all IP addresses and not using "
"encryption. This is not recommended. ..."
msgstr ""

#: ../../using/running.md:50 92052ed7b0f24fc3b1cd78615202afee
msgid "# remove the stopped container docker rm d67fe77f1a84 d67fe77f1a84 ```"
msgstr ""

#: ../../using/running.md:55 d5499267e6fb49478cdbcba9dd1ff603
msgid ""
"**Example 2** This command pulls the `jupyter/r-notebook` image tagged "
"`e5c5a7d3e52d` from Docker Hub if it is not already present on the local "
"host. It then starts a container running a Jupyter Notebook server and "
"exposes the server on host port 10000. The server logs appear in the "
"terminal and include a URL to the notebook server, but with the internal "
"container port (8888) instead of the the correct host port (10000)."
msgstr ""

#: ../../using/running.md:57 bd0476fff4744ff1b6646bc53b7123f7
msgid ""
"``` docker run --rm -p 10000:8888 -v \"$PWD\":/home/jovyan/work "
"jupyter/r-notebook:e5c5a7d3e52d"
msgstr ""

#: ../../using/running.md:60 a4c55e925b894513a2ed8886f13a7ef3
msgid ""
"Executing the command: jupyter notebook [I 19:31:09.573 NotebookApp] "
"Writing notebook server cookie secret to "
"/home/jovyan/.local/share/jupyter/runtime/notebook_cookie_secret [W "
"19:31:11.930 NotebookApp] WARNING: The notebook server is listening on "
"all IP addresses and not using encryption. This is not recommended. [I "
"19:31:12.085 NotebookApp] JupyterLab alpha preview extension loaded from "
"/opt/conda/lib/python3.6/site-packages/jupyterlab [I 19:31:12.086 "
"NotebookApp] JupyterLab application directory is "
"/opt/conda/share/jupyter/lab [I 19:31:12.117 NotebookApp] Serving "
"notebooks from local directory: /home/jovyan [I 19:31:12.117 NotebookApp]"
" 0 active kernels [I 19:31:12.118 NotebookApp] The Jupyter Notebook is "
"running at: [I 19:31:12.119 NotebookApp] http://[all ip addresses on your"
" system]:8888/?token=3b8dce890cb65570fb0d9c4a41ae067f7604873bd604f5ac [I "
"19:31:12.120 NotebookApp] Use Control-C to stop this server and shut down"
" all kernels (twice to skip confirmation). [C 19:31:12.122 NotebookApp]"
msgstr ""

#: ../../using/running.md:74 37d6f7ca5e814990966d343ec0b2909e
msgid "http://localhost:8888/?token=3b8dce890cb65570fb0d9c4a41ae067f7604873bd604f5ac"
msgstr ""

#: ../../using/running.md:77 d35e5244c6184270b41b8df58aa1416f
msgid ""
"Pressing `Ctrl-C` shuts down the notebook server and immediately destroys"
" the Docker container. Files written to `~/work` in the container remain "
"touched. Any other changes made in the container are lost."
msgstr ""

#: ../../using/running.md:79 c15ae5de521e44f184a156bbcf26abae
msgid ""
"**Example 3** This command pulls the `jupyter/all-spark-notebook` image "
"currently tagged `latest` from Docker Hub if an image tagged `latest` is "
"not already present on the local host. It then starts a container named "
"`notebook` running a JupyterLab server and exposes the server on a "
"randomly selected port."
msgstr ""

#: ../../using/running.md:81 17c9bec7864c4a0e93204922e60aeb2c
msgid "``` docker run -d -P --name notebook jupyter/all-spark-notebook ```"
msgstr ""

# 9a561b9bb5944059801c71862521d66a
#: ../../using/running.md:85 5be22b6350c34717b066ea01f024d886
msgid ""
"The assigned port and notebook server token are visible using other "
"Docker commands."
msgstr ""

#: ../../using/running.md:87 75df7fae11f0485e9ec283995979548e
msgid ""
"``` # get the random host port assigned to the container port 8888 docker"
" port notebook 8888 0.0.0.0:32769"
msgstr ""

#: ../../using/running.md:92 bf4f53ffb26e4de09f6b7f37e982d6e3
msgid "# get the notebook token from the logs docker logs --tail 3 notebook"
msgstr ""

#: ../../using/running.md:96 db61afe6f01e48fd8e28cfe4812a6158
msgid "http://localhost:8888/?token=15914ca95f495075c0aa7d0e060f1a78b6d94f70ea373b00"
msgstr ""

# c4bc333e19324e2a93118e21b1f8f360
#: ../../using/running.md:99 5667685d53f64933a953b5f090729bcd
msgid ""
"Together, the URL to visit on the host machine to access the server in "
"this case is "
"http://localhost:32769?token=15914ca95f495075c0aa7d0e060f1a78b6d94f70ea373b00."
msgstr ""

# bf82931e197b40ad940d9969993120a2
#: ../../using/running.md:101 d1f3993935514cf6a38f24df12a218ed
msgid ""
"The container runs in the background until stopped and/or removed by "
"additional Docker commands."
msgstr ""

#: ../../using/running.md:103 d89c0c6a17364e3fa8bfdbe18c7bf47b
msgid "``` # stop the container docker stop notebook notebook"
msgstr ""

#: ../../using/running.md:108 6596314cb5bf4ebabc165815b3bd82a2
msgid "# remove the container permanently docker rm notebook notebook ```"
msgstr ""

#: ../../using/running.md:113 a116eea1fa4e4f08820004acb049029e
msgid "## Using Binder"
msgstr ""

#: ../../using/running.md:115 ccb1c4f68e754c9caf50ceb5b5f1707b
msgid ""
"[Binder](https://mybinder.org/) is a service that allows you to create "
"and share custom computing environments for projects in version control. "
"You can use any of the Jupyter Docker Stacks images as a basis for a "
"Binder-compatible Dockerfile. See the [docker-stacks "
"example](https://mybinder.readthedocs.io/en/latest/sample_repos.html#using-a"
"-docker-image-from-the-jupyter-docker-stacks-repository) and [Using a "
"Dockerfile](https://mybinder.readthedocs.io/en/latest/tutorials/dockerfile.html)"
" sections in the [Binder "
"documentation](https://mybinder.readthedocs.io/en/latest/index.html) for "
"instructions."
msgstr ""

#: ../../using/running.md:117 c595abecf8e84ecdb950b08900e1c99c
msgid "## Using JupyterHub"
msgstr ""

#: ../../using/running.md:119 6daf703f61004ce78dd6d58b8839738f
msgid ""
"You can configure JupyterHub to launcher Docker containers from the "
"Jupyter Docker Stacks images. If you've been following the [Zero to "
"JupyterHub with Kubernetes](http://zero-to-"
"jupyterhub.readthedocs.io/en/latest/) guide, see the [Use an existing "
"Docker image](http://zero-to-jupyterhub.readthedocs.io/en/latest/user-"
"environment.html#use-an-existing-docker-image) section for details. If "
"you have a custom JupyterHub deployment, see the [Picking or building a "
"Docker image](https://github.com/jupyterhub/dockerspawner#picking-or-"
"building-a-docker-image) instructions for the "
"[dockerspawner](https://github.com/jupyterhub/dockerspawner) instead."
msgstr ""

#: ../../using/running.md:121 e76e54b598ae411c9073e3eb4c749b19
msgid "## Using Other Tools and Services"
msgstr ""

#: ../../using/running.md:123 06e846b3c2bb4bbaa20adb76aeab23da
msgid ""
"You can use the Jupyter Docker Stacks with any Docker-compatible "
"technology (e.g., [Docker Compose](https://docs.docker.com/compose/), "
"[docker-py](https://github.com/docker/docker-py), your favorite cloud "
"container service). See the documentation of the tool, library, or "
"service for details about how to reference, configure, and launch "
"containers from these images."
msgstr ""

#: ../../using/selecting.md:1 85ee5f6db9134888b0da1a9858ab57db
msgid "# Selecting an Image"
msgstr ""

#: ../../using/selecting.md:3 9e59af930fa74fc6b27bf5cb185f4dfb
msgid "[Core Stacks](#core-stacks)"
msgstr ""

#: ../../using/selecting.md:4 8839c505ad7e42cc908c1a0f5c2b7cb0
msgid "[Image Relationships](#image-relationships)"
msgstr ""

#: ../../using/selecting.md:5 dcaec0ff6a104c1a9c3d85709c450ce8
msgid "[Community Stacks](#community-stacks)"
msgstr ""

# af7e19bb10ec44348e8121be4129ce8a
#: ../../using/selecting.md:12 e8452f46a52542519723e9e5a81cb7c4
msgid "This section provides details about the first."
msgstr ""

#: ../../using/selecting.md:14 a684c689b28d459eb39d4acb38d54848
msgid "## Core Stacks"
msgstr ""

#: ../../using/selecting.md:16 8cfd68f096d54c25aea5a18485b28f8c
msgid ""
"The Jupyter team maintains a set of Docker image definitions in the "
"[https://github.com/jupyter/docker-stacks](https://github.com/jupyter"
"/docker-stacks) GitHub repository. The following sections describe these "
"images including their contents, relationships, and versioning strategy."
msgstr ""

#: ../../using/selecting.md:19 6bcccf40fe0744dca2b3d4a41445cb9c
msgid "### jupyter/base-notebook"
msgstr ""

#: ../../using/selecting.md:21 5230e01f740c40599fc3a232099ac00c
msgid ""
"[Source on GitHub](https://github.com/jupyter/docker-stacks/tree/master"
"/base-notebook) | [Dockerfile commit history](https://github.com/jupyter"
"/docker-stacks/commits/master/base-notebook/Dockerfile) | [Docker Hub "
"image tags](https://hub.docker.com/r/jupyter/base-notebook/tags/)"
msgstr ""

#: ../../using/selecting.md:25 a60c87483206460f93c386a8b172895a
msgid ""
"`jupyter/base-notebook` is a small image supporting the [options common "
"across all core stacks](common.md). It is the basis for all other stacks."
msgstr ""

#: ../../using/selecting.md:27 e7c1c63c5c4646d08b79ae21ea243e04
msgid ""
"Minimally-functional Jupyter Notebook server (e.g., no LaTeX support for "
"saving notebooks as PDFs)"
msgstr ""

#: ../../using/selecting.md:28 6b61dd0b1a0c4a16b02d35127aae8c0a
msgid "[Miniconda](https://conda.io/miniconda.html) Python 3.x in `/opt/conda`"
msgstr ""

# c5732a5536554f91b8dd7e8946beaab8
#: ../../using/selecting.md:29 36ec13796228478f93b5793ea96ed9bc
msgid "No preinstalled scientific computing packages"
msgstr ""

#: ../../using/selecting.md:30 441e3acdd95146428976f2cbec27f5ba
msgid ""
"Unprivileged user `jovyan` (`uid=1000`, configurable, see options) in "
"group `users` (`gid=100`) with ownership over the `/home/jovyan` and "
"`/opt/conda` paths"
msgstr ""

#: ../../using/selecting.md:31 c88b383ea378461297a3fe3f31b545bf
msgid ""
"`tini` as the container entrypoint and a `start-notebook.sh` script as "
"the default command"
msgstr ""

#: ../../using/selecting.md:32 89287e9ffbac488ab99f041869324cd9
msgid ""
"A `start-singleuser.sh` script useful for launching containers in "
"JupyterHub"
msgstr ""

#: ../../using/selecting.md:33 7393826d95494ef3b0b59b9f3f461c28
msgid ""
"A `start.sh` script useful for running alternative commands in the "
"container (e.g. `ipython`, `jupyter kernelgateway`, `jupyter lab`)"
msgstr ""

# 075e6ffe0f5b4d508d555992f5dd6fe1
#: ../../using/selecting.md:34 6124a7691df64053b7af2bf9683f664f
msgid "Options for a self-signed HTTPS certificate and passwordless sudo"
msgstr ""

#: ../../using/selecting.md:36 35b1707082b64d2abbf288465670f128
msgid "### jupyter/minimal-notebook"
msgstr ""

#: ../../using/selecting.md:38 9b159d0acef742bbb9943d4e9df9b9b8
msgid ""
"[Source on GitHub](https://github.com/jupyter/docker-stacks/tree/master"
"/minimal-notebook) | [Dockerfile commit "
"history](https://github.com/jupyter/docker-stacks/commits/master/minimal-"
"notebook/Dockerfile) | [Docker Hub image "
"tags](https://hub.docker.com/r/jupyter/minimal-notebook/tags/)"
msgstr ""

#: ../../using/selecting.md:42 a5a4dc4d3e1c4f46a0335931420061f0
msgid ""
"`jupyter/minimal-notebook` adds command line tools useful when working in"
" Jupyter applications."
msgstr ""

#: ../../using/selecting.md:44 9f3a452005fc4d00911d51a74ec07e78
msgid "Everything in `jupyter/base-notebook`"
msgstr ""

#: ../../using/selecting.md:45 d8edc18641444474b66b1596cc83ba4f
msgid "[TeX Live](https://www.tug.org/texlive/) for notebook document conversion"
msgstr ""

#: ../../using/selecting.md:46 82e4188a501d486e83d9fd8daf0805a4
msgid ""
"[git](https://git-scm.com/), [emacs](https://www.gnu.org/software/emacs/)"
" (actually `emacs-nox`), [vi](https://vim.org/) (actually `vim-tiny`), "
"[jed](https://www.jedsoft.org/jed/), [nano](https://www.nano-"
"editor.org/), tzdata, and unzip"
msgstr ""

#: ../../using/selecting.md:48 89e21a817b4d402da09d84977d86421b
msgid "### jupyter/r-notebook"
msgstr ""

#: ../../using/selecting.md:50 41f7d079fc084f80add9c087d422f426
msgid ""
"[Source on GitHub](https://github.com/jupyter/docker-"
"stacks/tree/master/r-notebook) | [Dockerfile commit "
"history](https://github.com/jupyter/docker-"
"stacks/commits/master/r-notebook/Dockerfile) | [Docker Hub image "
"tags](https://hub.docker.com/r/jupyter/r-notebook/tags/)"
msgstr ""

#: ../../using/selecting.md:54 e1679760e6ec44e6bf0668e91243cea1
msgid "`jupyter/r-notebook` includes popular packages from the R ecosystem."
msgstr ""

#: ../../using/selecting.md:56 ../../using/selecting.md:78
#: 4ffcd4368fad4b189460cfb43c11c2ef bd94a0e211514dabab6081bfb3e26e51
msgid "Everything in `jupyter/minimal-notebook` and its ancestor images"
msgstr ""

#: ../../using/selecting.md:57 3a7fe29e946341f7bac0cdac0751fd4b
msgid "The [R](https://www.r-project.org/) interpreter and base environment"
msgstr ""

#: ../../using/selecting.md:58 ../../using/selecting.md:134
#: ae8a3853ef3f47f78ee0c34b46f1443e b7753966ddca4688a9d6781e921de57a
msgid ""
"[IRKernel](https://irkernel.github.io/) to support R code in Jupyter "
"notebooks"
msgstr ""

#: ../../using/selecting.md:59 fdffa9754b0c49e89202ae28a1de7ca6
msgid ""
"[tidyverse](https://www.tidyverse.org/) packages, including "
"[ggplot2](http://ggplot2.org/), [dplyr](http://dplyr.tidyverse.org/),"
msgstr ""

#: ../../using/selecting.md:60 6e27e6d953b24ce895c5a346e08caec5
msgid ""
"[tidyr](http://tidyr.tidyverse.org/), "
"[readr](http://readr.tidyverse.org/), "
"[purrr](http://purrr.tidyverse.org/), "
"[tibble](http://tibble.tidyverse.org/), "
"[stringr](http://stringr.tidyverse.org/), "
"[lubridate](http://lubridate.tidyverse.org/), and "
"[broom](https://cran.r-project.org/web/packages/broom/vignettes/broom.html)"
" from [conda-forge](https://conda-forge.github.io/feedstocks) * "
"[plyr](https://cran.r-project.org/web/packages/plyr/index.html), "
"[devtools](https://cran.r-project.org/web/packages/devtools/index.html), "
"[shiny](https://shiny.rstudio.com/), "
"[rmarkdown](http://rmarkdown.rstudio.com/), "
"[forecast](https://cran.r-project.org/web/packages/forecast/forecast.pdf),"
" [rsqlite](https://cran.r-project.org/web/packages/RSQLite/index.html), "
"[reshape2](https://cran.r-project.org/web/packages/reshape2/reshape2.pdf),"
" "
"[nycflights13](https://cran.r-project.org/web/packages/nycflights13/index.html),"
" [caret](http://topepo.github.io/caret/index.html), "
"[rcurl](https://cran.r-project.org/web/packages/RCurl/index.html), and "
"[randomforest](https://cran.r-project.org/web/packages/randomForest/randomForest.pdf)"
" packages from [conda-forge](https://conda-forge.github.io/feedstocks)"
msgstr ""

#: ../../using/selecting.md:70 dc8bb5212a974675bc0476a423b7ccff
msgid "### jupyter/scipy-notebook"
msgstr ""

#: ../../using/selecting.md:72 56b4a132c65248a39bfbfb69d8079923
msgid ""
"[Source on GitHub](https://github.com/jupyter/docker-stacks/tree/master"
"/scipy-notebook) | [Dockerfile commit history](https://github.com/jupyter"
"/docker-stacks/commits/master/scipy-notebook/Dockerfile) | [Docker Hub "
"image tags](https://hub.docker.com/r/jupyter/scipy-notebook/tags/)"
msgstr ""

#: ../../using/selecting.md:76 169dbfe8c28648199af392d83726f5d2
msgid ""
"`jupyter/scipy-notebook` includes popular packages from the scientific "
"Python ecosystem."
msgstr ""

#: ../../using/selecting.md:79 7c584821f2814923960c67a371457b4d
msgid ""
"[dask](https://dask.org/), [pandas](https://pandas.pydata.org/), "
"[numexpr](https://github.com/pydata/numexpr), "
"[matplotlib](https://matplotlib.org/), [scipy](https://www.scipy.org/),"
msgstr ""

#: ../../using/selecting.md:80 3daac5af495a4d1e9415c5a532d4c5f1
msgid ""
"[seaborn](https://seaborn.pydata.org/), [scikit-learn](http://scikit-"
"learn.org/stable/), [scikit-image](http://scikit-image.org/), "
"[sympy](http://www.sympy.org/en/index.html), "
"[cython](http://cython.org/), "
"[patsy](https://patsy.readthedocs.io/en/latest/), "
"[statsmodel](http://www.statsmodels.org/stable/index.html), "
"[cloudpickle](https://github.com/cloudpipe/cloudpickle), "
"[dill](https://pypi.python.org/pypi/dill), "
"[numba](https://numba.pydata.org/), "
"[bokeh](https://bokeh.pydata.org/en/latest/), "
"[sqlalchemy](https://www.sqlalchemy.org/), [hdf5](http://www.h5py.org/), "
"[vincent](http://vincent.readthedocs.io/en/latest/), "
"[beautifulsoup](https://www.crummy.com/software/BeautifulSoup/), "
"[protobuf](https://developers.google.com/protocol-"
"buffers/docs/pythontutorial), [xlrd](http://www.python-excel.org/), "
"[bottleneck](https://bottleneck.readthedocs.io/en/latest/), and "
"[pytables](https://www.pytables.org/) packages * "
"[ipywidgets](https://ipywidgets.readthedocs.io/en/stable/) and "
"[ipympl](https://github.com/matplotlib/jupyter-matplotlib) for "
"interactive visualizations and plots in Python notebooks * "
"[Facets](https://github.com/PAIR-code/facets) for visualizing machine "
"learning datasets"
msgstr ""

#: ../../using/selecting.md:89 b84a316897a0419e830501ba8fa3f2ad
msgid "### jupyter/tensorflow-notebook"
msgstr ""

#: ../../using/selecting.md:91 9539aa23d6da4d46a2e4f30e9424ef6b
msgid ""
"[Source on GitHub](https://github.com/jupyter/docker-stacks/tree/master"
"/tensorflow-notebook) | [Dockerfile commit "
"history](https://github.com/jupyter/docker-stacks/commits/master"
"/tensorflow-notebook/Dockerfile) | [Docker Hub image "
"tags](https://hub.docker.com/r/jupyter/tensorflow-notebook/tags/)"
msgstr ""

#: ../../using/selecting.md:95 4705541a6c234d14867ec98dc947488e
msgid ""
"`jupyter/tensorflow-notebook` includes popular Python deep learning "
"libraries."
msgstr ""

#: ../../using/selecting.md:97 ../../using/selecting.md:121
#: 043ec717d0cd44cfb1673c8e1d6ec96f 746996d60d1940d18ed124f377bb0313
msgid "Everything in `jupyter/scipy-notebook` and its ancestor images"
msgstr ""

#: ../../using/selecting.md:98 c1e3b1ecf7c04271b0389c8709348b4d
msgid ""
"[tensorflow](https://www.tensorflow.org/) and [keras](https://keras.io/) "
"machine learning libraries"
msgstr ""

#: ../../using/selecting.md:100 aca4efacfaad4b6ca0c4152fe3618e96
msgid "### jupyter/datascience-notebook"
msgstr ""

#: ../../using/selecting.md:102 df3b735d481740f3a9b1ae177885e50a
msgid ""
"[Source on GitHub](https://github.com/jupyter/docker-stacks/tree/master"
"/datascience-notebook) | [Dockerfile commit "
"history](https://github.com/jupyter/docker-stacks/commits/master"
"/datascience-notebook/Dockerfile) | [Docker Hub image "
"tags](https://hub.docker.com/r/jupyter/datascience-notebook/tags/)"
msgstr ""

#: ../../using/selecting.md:106 d76808ad1bad49768189f51ee2bfe664
msgid ""
"`jupyter/datascience-notebook` includes libraries for data analysis from "
"the Julia, Python, and R communities."
msgstr ""

#: ../../using/selecting.md:108 195b4b46ef5a469f838ccf3f13af6963
msgid ""
"Everything in the `jupyter/scipy-notebook` and `jupyter/r-notebook` "
"images, and their ancestor images"
msgstr ""

#: ../../using/selecting.md:109 795ebe7129fa4476802f17b2223194a6
msgid "The [Julia](https://julialang.org/) compiler and base environment"
msgstr ""

#: ../../using/selecting.md:110 6cb385df04e54efabd8b9d57625673cc
msgid ""
"[IJulia](https://github.com/JuliaLang/IJulia.jl) to support Julia code in"
" Jupyter notebooks"
msgstr ""

#: ../../using/selecting.md:111 a8b21fad29e149e0a71dff761c462a54
msgid ""
"[HDF5](https://github.com/JuliaIO/HDF5.jl), "
"[Gadfly](http://gadflyjl.org/stable/), and "
"[RDatasets](https://github.com/johnmyleswhite/RDatasets.jl) packages"
msgstr ""

#: ../../using/selecting.md:113 7b27c13022554205b2cb5070dfa32034
msgid "### jupyter/pyspark-notebook"
msgstr ""

#: ../../using/selecting.md:115 d39f2f9f23784302a4b67958bb8ecd07
msgid ""
"[Source on GitHub](https://github.com/jupyter/docker-stacks/tree/master"
"/pyspark-notebook) | [Dockerfile commit "
"history](https://github.com/jupyter/docker-stacks/commits/master/pyspark-"
"notebook/Dockerfile) | [Docker Hub image "
"tags](https://hub.docker.com/r/jupyter/pyspark-notebook/tags/)"
msgstr ""

#: ../../using/selecting.md:119 da4975ef28fe40b2ae4a9916c650fba6
msgid ""
"`jupyter/pyspark-notebook` includes Python support for Apache Spark, "
"optionally on Mesos."
msgstr ""

#: ../../using/selecting.md:122 b0a9d45215ed4708adf0ecbe16df7d77
msgid "[Apache Spark](https://spark.apache.org/) with Hadoop binaries"
msgstr ""

#: ../../using/selecting.md:123 fc726545512249799080b717c9f48ed5
msgid "[Mesos](http://mesos.apache.org/) client libraries"
msgstr ""

#: ../../using/selecting.md:125 47ce15f8045e46d7b5b0f865d91b9936
msgid "### jupyter/all-spark-notebook"
msgstr ""

#: ../../using/selecting.md:127 446a129e000842c69446c264ae21441b
msgid ""
"[Source on GitHub](https://github.com/jupyter/docker-stacks/tree/master"
"/all-spark-notebook) | [Dockerfile commit "
"history](https://github.com/jupyter/docker-stacks/commits/master/all-"
"spark-notebook/Dockerfile) | [Docker Hub image "
"tags](https://hub.docker.com/r/jupyter/all-spark-notebook/tags/)"
msgstr ""

#: ../../using/selecting.md:131 18fc0d41a1d244c7baafdcbaf9962440
msgid ""
"`jupyter/all-spark-notebook` includes Python, R, and Scala support for "
"Apache Spark, optionally on Mesos."
msgstr ""

#: ../../using/selecting.md:133 808fc1e6db5248308b195c8b76318367
msgid "Everything in `jupyter/pyspark-notebook` and its ancestor images"
msgstr ""

#: ../../using/selecting.md:135 fda6de1760aa40f495274e6d318ec56a
msgid ""
"[Apache Toree](https://toree.apache.org/) and [spylon-"
"kernel](https://github.com/maxpoint/spylon-kernel) to support Scala code "
"in Jupyter notebooks"
msgstr ""

#: ../../using/selecting.md:136 972d6cd7fdc3421a970ebfc2c1e4ab53
msgid ""
"[ggplot2](http://ggplot2.org/), [sparklyr](http://spark.rstudio.com/), "
"and [rcurl](https://cran.r-project.org/web/packages/RCurl/index.html) "
"packages"
msgstr ""

#: ../../using/selecting.md:138 2ba5a2333da34e43948a925e77ee0767
msgid "### Image Relationships"
msgstr ""

#: ../../using/selecting.md:140 3796b711957140198dfb55e335097f41
msgid ""
"The following diagram depicts the build dependency tree of the core "
"images. (i.e., the `FROM` statements in their Dockerfiles). Any given "
"image inherits the complete content of all ancestor images pointing to "
"it."
msgstr ""

#: ../../using/selecting.md:143 4b8ee93c45ee4abab690326f46f55196
msgid ""
"[![Image inheritance "
"diagram](../images/inherit.svg)](http://interactive.blockdiag.com/?compression=deflate&src"
"=eJyFzTEPgjAQhuHdX9Gws5sQjGzujsaYKxzmQrlr2msMGv-"
"71K0srO_3XGud9NNA8DSfgzESCFlBSdi0xkvQAKTNugw4QnL6GIU10hvX-"
"Zh7Z24OLLq2SjaxpvP10lX35vCf6pOxELFmUbQiUz4oQhYzMc3gCrRt2cWe_FKosmSjyFHC6OS1AwdQWCtyj7sfh523_BI9hKlQ25YdOFdv5fcH0kiEMA)"
msgstr ""

#: ../../using/selecting.md:146 66ab5bac494f4b638f9e32b2bba93aa1
msgid "### Builds"
msgstr ""

#: ../../using/selecting.md:148 938ebd87fc664dc0985c215326e00801
msgid ""
"Pull requests to the `jupyter/docker-stacks` repository trigger builds of"
" all images on Travis CI. These images are for testing purposes only and "
"are not saved for use. When pull requests merge to master, all images "
"rebuild on Docker Cloud and become available to `docker pull` from Docker"
" Hub."
msgstr ""

#: ../../using/selecting.md:151 f37147ced8184b01ae57876dbb33edf0
msgid "### Versioning"
msgstr ""

#: ../../using/selecting.md:153 274df9f49e694b3b9bc91dc94e4eaaff
msgid ""
"The `latest` tag in each Docker Hub repository tracks the master branch "
"`HEAD` reference on GitHub. `latest` is a moving target, by definition, "
"and will have backward-incompatible changes regularly."
msgstr ""

#: ../../using/selecting.md:156 eeeb4d86172b48b28ad3c69a39395e77
msgid ""
"Every image on Docker Hub also receives a 12-character tag which "
"corresponds with the git commit SHA that triggered the image build. You "
"can inspect the state of the `jupyter/docker-stacks` repository for that "
"commit to review the definition of the image (e.g., images with tag "
"7c45ec67c8e7 were built from [https://github.com/jupyter/docker-"
"stacks/tree/7c45ec67c8e7](https://github.com/jupyter/docker-"
"stacks/tree/7c45ec67c8e7))."
msgstr ""

#: ../../using/selecting.md:160 5dc4653eeae7421381024b8b81679b46
msgid ""
"You must refer to git-SHA image tags when stability and reproducibility "
"are important in your work. (e.g. `FROM jupyter/scipy-"
"notebook:7c45ec67c8e7`, `docker run -it --rm jupyter/scipy-"
"notebook:7c45ec67c8e7`). You should only use `latest` when a one-off "
"container instance is acceptable (e.g., you want to briefly try a new "
"library in a notebook)."
msgstr ""

#: ../../using/selecting.md:164 5022559b828f473996c748b9dab606fc
msgid "## Community Stacks"
msgstr ""

# a448d28293544f72b0e5de024b0a1ef5
#: ../../using/selecting.md:166 8298213633d647d2bb29072c43bdecba
msgid ""
"The core stacks are just a tiny sample of what's possible when combining "
"Jupyter with other technologies. We encourage members of the Jupyter "
"community to create their own stacks based on the core images and link "
"them below."
msgstr ""

#: ../../using/selecting.md:169 a76b304abb8d40469a5d618f9a668b8f
msgid ""
"[csharp-notebook is a community Jupyter Docker Stack image. Try C# in "
"Jupyter Notebooks](https://github.com/tlinnet/csharp-notebook). The image"
" includes more"
msgstr ""

#: ../../using/selecting.md:170 8fe22c23debf4241ac19309645517788
msgid ""
"than 200 Jupyter Notebooks with example C# code and can readily be tried "
"online via mybinder.org. Click here to launch "
"[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/tlinnet"
"/csharp-notebook/master)."
msgstr ""

#: ../../using/selecting.md:173 b9b80b8c146445d7821e0104acd671b7
msgid ""
"[education-notebook is a community Jupyter Docker Stack "
"image](https://github.com/umsi-mads/education-notebook). The image "
"includes nbgrader and RISE on top of"
msgstr ""

#: ../../using/selecting.md:174 0b45076260434ed59c874baedd2a76fc
msgid ""
"the datascience-notebook image. Click here to launch it on "
"[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh"
"/umsi-mads/education-notebook/master)."
msgstr ""

#: ../../using/selecting.md:177 f6eeea8f754a4d49b104525a16a8ba40
msgid "__crosscompass/ihaskell-notebook__"
msgstr ""

#: ../../using/selecting.md:179 0b0f859d1a4c490bbaf7c8be966494b4
msgid ""
"[Source on GitHub](https://github.com/jamesdbrock/ihaskell-notebook) | "
"[Dockerfile commit history](https://github.com/jamesdbrock/ihaskell-"
"notebook/commits/master/Dockerfile) | [Docker Hub image "
"tags](https://hub.docker.com/r/crosscompass/ihaskell-notebook/tags)"
msgstr ""

#: ../../using/selecting.md:183 8e63fab7b7054c458304ab0a241817a5
msgid ""
"`crosscompass/ihaskell-notebook` is based on "
"[IHaskell](https://github.com/gibiansky/IHaskell). Includes popular "
"packages and example notebooks."
msgstr ""

#: ../../using/selecting.md:185 5984f09f16ff45ba81032517c6d8f989
msgid ""
"Try it on "
"[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/jamesdbrock"
"/learn-you-a-haskell-"
"notebook/master?urlpath=lab/tree/ihaskell_examples/ihaskell/IHaskell.ipynb)"
msgstr ""

#: ../../using/selecting.md:187 be462b817fb1472f81309f435b47ba23
msgid ""
"[java-notebook is a community Jupyter Docker Stack "
"image](https://github.com/jbindinga/java-notebook). The image includes"
msgstr ""

#: ../../using/selecting.md:188 535a4def3d2a430fa8dcd455614cfb24
msgid ""
"[IJava](https://github.com/SpencerPark/IJava) kernel on top of the "
"minimal-notebook image. Click here to launch it on "
"[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/jbindinga"
"/java-notebook/master)."
msgstr ""

#: ../../using/selecting.md:191 2a22472d78cf45d693c76dff4c0f404c
msgid ""
"[sage-notebook](https://github.com/sharpTrick/sage-notebook) is a "
"community Jupyter Docker Stack image with the "
"[sagemath](https://sagemath.org) kernel on top of"
msgstr ""

#: ../../using/selecting.md:192 04ed8a59f9e148c1bd5acdb47a7f2d09
msgid ""
"the minimal-notebook image. Click here to launch it on "
"[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/sharpTrick"
"/sage-notebook/master)."
msgstr ""

#: ../../using/selecting.md:195 03cb9b17798d43d7a49584b149cf34a6
msgid ""
"[GPU-Jupyter](https://github.com/iot-salzburg/gpu-jupyter/): Leverage "
"Jupyter Notebooks with the power of your NVIDIA GPU and perform GPU "
"calculations using"
msgstr ""

#: ../../using/selecting.md:196 7a5570479cd7475ca8a130c8a7317fec
msgid ""
"Tensorflow and Pytorch in collaborative notebooks. This is done by "
"generating a Dockerfile, that consists of the **nvidia/cuda** base image,"
" the well-maintained **docker-stacks** that is integrated as submodule "
"and GPU-able libraries like **Tensorflow**, **Keras** and **PyTorch** on "
"top of it."
msgstr ""

#: ../../using/selecting.md:201 5022eaa57e3c4c0e8c6c9fa8feba6d56
msgid ""
"[cgspatial-notebook](https://github.com/SCiO-systems/cgspatial-notebook) "
"is a community Jupyter Docker Stack image. The image includes major "
"geospatial Python &"
msgstr ""

#: ../../using/selecting.md:202 44fe41b25fad48edbe7b8be5cdba3ad3
msgid ""
"R libraries on top of the datascience-notebook image. Try it on "
"binder:[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh"
"/SCiO-systems/cgspatial-notebook/master)"
msgstr ""

#: ../../using/selecting.md:206 48fa0a63a63548a5b1a831d5db4942f6
msgid ""
"See the [contributing guide](../contributing/stacks.md) for information "
"about how to create your own Jupyter Docker Stack."
msgstr ""

#: ../../using/specifics.md:1 9695ad76b6ad45458d55d2804fd42410
msgid "# Image Specifics"
msgstr ""

# 06b0d21a881140a29e17e5b9fa5598ab
#: ../../using/specifics.md:3 8c53e964d20a4d728109be4f23f5bad5
msgid "This page provides details about features specific to one or more images."
msgstr ""

#: ../../using/specifics.md:5 6b6226ea6acf48ac9863c8382ccfef41
msgid "## Apache Spark"
msgstr ""

#: ../../using/specifics.md:7 e3e32acdc1bb40d689897b00efc3a614
msgid ""
"**Specific Docker Image Options** * `-p 4040:4040` - The `jupyter"
"/pyspark-notebook` and `jupyter/all-spark-notebook` images open [SparkUI "
"(Spark Monitoring and Instrumentation "
"UI)](http://spark.apache.org/docs/latest/monitoring.html) at default port"
" `4040`, this option map `4040` port inside docker container to `4040` "
"port on host machine . Note every new spark context that is created is "
"put onto an incrementing port (ie. 4040, 4041, 4042, etc.), and it might "
"be necessary to open multiple ports. For example: `docker run -d -p "
"8888:8888 -p 4040:4040 -p 4041:4041 jupyter/pyspark-notebook`"
msgstr ""

#: ../../using/specifics.md:10 01272582dc4e4378bce373a6e37caff7
msgid "**Usage Examples**"
msgstr ""

#: ../../using/specifics.md:12 c88f1c2da3e348ef8066c7983eaef2ea
msgid ""
"The `jupyter/pyspark-notebook` and `jupyter/all-spark-notebook` images "
"support the use of [Apache Spark](https://spark.apache.org/) in Python, "
"R, and Scala notebooks. The following sections provide some examples of "
"how to get started using them."
msgstr ""

#: ../../using/specifics.md:14 90b9d090efe84aa89c3fb1cf71a10b8f
msgid "### Using Spark Local Mode"
msgstr ""

# 15a0171869f3437481b9dfb2aec3db00
#: ../../using/specifics.md:16 de2326ad191b4312a12f3cf3e9fb04ac
msgid ""
"Spark local mode is useful for experimentation on small data when you do "
"not have a Spark cluster available."
msgstr ""

#: ../../using/specifics.md:18 ../../using/specifics.md:74
#: 0b43c09c323e4270a123eabd6b12e577 4f83f4a1b94d467d8226bd9d673bd5e6
msgid "#### In a Python Notebook"
msgstr ""

#: ../../using/specifics.md:20 4d3cc525eecd43c0b2814da0b623a68e
msgid ""
"```python from pyspark.sql import SparkSession spark = "
"SparkSession.builder.appName(\"SimpleApp\").getOrCreate() # do something "
"to prove it works spark.sql('SELECT \"Test\" as c1').show() ```"
msgstr ""

#: ../../using/specifics.md:27 ../../using/specifics.md:101
#: 26fc1705711448f9ad705e63e3684f5e 6e1a5336a9d34e57ad087578a8581383
msgid "#### In a R Notebook"
msgstr ""

#: ../../using/specifics.md:29 ../../using/specifics.md:103
#: 2940c76200e6440ea7cba2b0c87c9c1d e18af18a0bbf4c898a486b8b25b86b7c
msgid "```r library(SparkR)"
msgstr ""

#: ../../using/specifics.md:32 9927a0cc27044310a934acf1d60b669d
msgid "as <- sparkR.session(\"local[*]\")"
msgstr ""

#: ../../using/specifics.md:34 4151cd9c2e9f45ca80093626f921ce1b
msgid ""
"# do something to prove it works df <- as.DataFrame(iris) head(filter(df,"
" df$Petal_Width > 0.2)) ```"
msgstr ""

#: ../../using/specifics.md:39 ../../using/specifics.md:122
#: 451c6e153df947728e7cf7108ccbc056 7a2fd217bc864dcb91f34fe63d01bfea
msgid "#### In a Spylon Kernel Scala Notebook"
msgstr ""

#: ../../using/specifics.md:41 d57754644cde4bcd8c6a7c8867e971b7
#, python-format
msgid ""
"Spylon kernel instantiates a `SparkContext` for you in variable `sc` "
"after you configure Spark options in a `%%init_spark` magic cell."
msgstr ""

#: ../../using/specifics.md:43 056764c533e04c07b1b011c5a5e914da
#, python-format
msgid ""
"```python %%init_spark # Configure Spark to use a local master "
"launcher.master = \"local[*]\" ```"
msgstr ""

#: ../../using/specifics.md:49 ../../using/specifics.md:131
#: 2385beb27547462db78a3025c8b565fa faa0eb871e31490db387f5d8bfdf1ed0
msgid ""
"```scala // Now run Scala code that uses the initialized SparkContext in "
"sc val rdd = sc.parallelize(0 to 999) rdd.takeSample(false, 5) ```"
msgstr ""

#: ../../using/specifics.md:55 ../../using/specifics.md:137
#: 82343b1a13e9411194c8c522ae28e292 9fdbfe034ee742c0ba6ffe1535efb7e3
msgid "#### In an Apache Toree Scala Notebook"
msgstr ""

#: ../../using/specifics.md:57 14b14edf095d46708ef5937cef95d093
msgid ""
"Apache Toree instantiates a local `SparkContext` for you in variable `sc`"
" when the kernel starts."
msgstr ""

#: ../../using/specifics.md:59 33151816690f4b2e9411f9d75c05b624
msgid "```scala val rdd = sc.parallelize(0 to 999) rdd.takeSample(false, 5) ```"
msgstr ""

#: ../../using/specifics.md:64 cdad5058b1054bce9c95f876e1b72bbb
msgid "### Connecting to a Spark Cluster on Mesos"
msgstr ""

# 4926e921fbd24baba9888b3f08cf4f51
#: ../../using/specifics.md:66 31c118e69b5144268a6c0521146b3603
msgid "This configuration allows your compute cluster to scale with your data."
msgstr ""

#: ../../using/specifics.md:68 289bcd62333a4289a2755377a107bfff
msgid ""
"[Deploy Spark on Mesos](http://spark.apache.org/docs/latest/running-on-"
"mesos.html)."
msgstr ""

#: ../../using/specifics.md:69 b84b165fa1e34d0bb5641e3f1d06d5f1
msgid ""
"Configure each slave with [the `--no-switch_user` "
"flag](https://open.mesosphere.com/reference/mesos-slave/) or create the "
"`$NB_USER` account on every slave node."
msgstr ""

#: ../../using/specifics.md:70 ../../using/specifics.md:166
#: a8934d360dee4396bbf7063d95ec6488 c4db7e6cc51e4596a876aa7bc4d00507
msgid ""
"Run the Docker container with `--net=host` in a location that is network "
"addressable by all of your Spark workers. (This is a [Spark networking "
"requirement](http://spark.apache.org/docs/latest/cluster-"
"overview.html#components).)"
msgstr ""

#: ../../using/specifics.md:71 ../../using/specifics.md:167
#: 179884c39fa146e3bef7a4051cad695b c2c083aea8db4d33a42d5432088e5851
msgid ""
"NOTE: When using `--net=host`, you must also use the flags `--pid=host -e"
" TINI_SUBREAPER=true`. See https://github.com/jupyter/docker-"
"stacks/issues/64 for details."
msgstr ""

# 16c4327879294075a64b4329f972321c
#: ../../using/specifics.md:72 07f0deeb54914065b984525b9426d800
msgid "Follow the language specific instructions below."
msgstr ""

#: ../../using/specifics.md:76 effe9933c6b04404b7a7714281603d31
msgid ""
"```python import os # make sure pyspark tells workers to use python3 not "
"2 if both are installed os.environ['PYSPARK_PYTHON'] = '/usr/bin/python3'"
msgstr ""

#: ../../using/specifics.md:81 87a8b71aa25c4f4c907e9481419339f0
msgid "import pyspark conf = pyspark.SparkConf()"
msgstr ""

#: ../../using/specifics.md:84 c2b7c65fc4564f9088170edf434425ac
msgid ""
"# point to mesos master or zookeeper entry (e.g., "
"zk://10.10.10.10:2181/mesos) conf.setMaster(\"mesos://10.10.10.10:5050\")"
" # point to spark binary package in HDFS or on local filesystem on all "
"slave # nodes (e.g., file:///opt/spark/spark-2.2.0-bin-hadoop2.7.tgz) "
"conf.set(\"spark.executor.uri\", \"hdfs://10.10.10.10/spark/spark-2.2.0"
"-bin-hadoop2.7.tgz\") # set other options as desired "
"conf.set(\"spark.executor.memory\", \"8g\") "
"conf.set(\"spark.core.connection.ack.wait.timeout\", \"1200\")"
msgstr ""

#: ../../using/specifics.md:93 cf654ec273fc4fb7a5e731119fef255f
msgid "# create the context sc = pyspark.SparkContext(conf=conf)"
msgstr ""

#: ../../using/specifics.md:96 e20b429dd37d4098bbe9828663f62ea7
msgid ""
"# do something to prove it works rdd = sc.parallelize(range(100000000)) "
"rdd.sumApprox(3) ```"
msgstr ""

#: ../../using/specifics.md:106 9f8af4bffb534aecafadd48481cfc682
msgid ""
"# Point to mesos master or zookeeper entry (e.g., "
"zk://10.10.10.10:2181/mesos) # Point to spark binary package in HDFS or "
"on local filesystem on all slave # nodes (e.g., "
"file:///opt/spark/spark-2.2.0-bin-hadoop2.7.tgz) in sparkEnvir # Set "
"other options in sparkEnvir sc <- "
"sparkR.session(\"mesos://10.10.10.10:5050\", sparkEnvir=list("
msgstr ""

#: ../../using/specifics.md:111 52727e0b4474448698ecb3a2763b0916
msgid ""
"spark.executor.uri=\"hdfs://10.10.10.10/spark/spark-2.2.0-bin-"
"hadoop2.7.tgz\", spark.executor.memory=\"8g\" )"
msgstr ""

#: ../../using/specifics.md:114 55cb15581c4d490f93528808f2bb68c9
msgid ")"
msgstr ""

#: ../../using/specifics.md:116 59801fd407df478f9675244b0c242916
msgid ""
"# do something to prove it works data(iris) df <- as.DataFrame(iris) "
"head(filter(df, df$Petal_Width > 0.2)) ```"
msgstr ""

#: ../../using/specifics.md:124 0a8b9f782e6a4eee84a893ea7a619079
#, python-format
msgid ""
"```python %%init_spark # Configure the location of the mesos master and "
"spark distribution on HDFS launcher.master = \"mesos://10.10.10.10:5050\""
" launcher.conf.spark.executor.uri=hdfs://10.10.10.10/spark/spark-2.2.0"
"-bin-hadoop2.7.tgz ```"
msgstr ""

#: ../../using/specifics.md:139 f93f0db8d5a742be8fd95ca32398b004
msgid ""
"The Apache Toree kernel automatically creates a `SparkContext` when it "
"starts based on configuration information from its command line arguments"
" and environment variables. You can pass information about your Mesos "
"cluster via the `SPARK_OPTS` environment variable when you spawn a "
"container."
msgstr ""

# 3e3d5ec9fa554e75989856139938f4f8
#: ../../using/specifics.md:141 bb926e06a4a5428290edd04fd5f31484
msgid ""
"For instance, to pass information about a Mesos master, Spark binary "
"location in HDFS, and an executor options, you could start the container "
"like so:"
msgstr ""

#: ../../using/specifics.md:143 ac35d3fa18d04b88ac8e8fdf1c65e646
msgid ""
"``` docker run -d -p 8888:8888 -e SPARK_OPTS='--"
"master=mesos://10.10.10.10:5050 \\"
msgstr ""

#: ../../using/specifics.md:145 da9477cf35924be88bbf82e5da01439b
msgid ""
"--spark.executor.uri=hdfs://10.10.10.10/spark/spark-2.2.0-bin-"
"hadoop2.7.tgz \\ --spark.executor.memory=8g' jupyter/all-spark-notebook"
msgstr ""

# fa8494a4dde544109b9f6f49ac28178f
#: ../../using/specifics.md:149 d3846fcb14d0467ca6a99ecb7b2c2bfc
msgid ""
"Note that this is the same information expressed in a notebook in the "
"Python case above. Once the kernel spec has your cluster information, you"
" can test your cluster in an Apache Toree notebook like so:"
msgstr ""

#: ../../using/specifics.md:151 a09e11b96f624353bcfc813c1d2f37e6
msgid ""
"```scala // should print the value of --master in the kernel spec "
"println(sc.master)"
msgstr ""

#: ../../using/specifics.md:155 7abd0d9dfa45499ab1b75b7702a05ebe
msgid ""
"// do something to prove it works val rdd = sc.parallelize(0 to 99999999)"
" rdd.sum() ```"
msgstr ""

#: ../../using/specifics.md:160 abff174cbe9f4bd597df155d8013c593
msgid "### Connecting to a Spark Cluster in Standalone Mode"
msgstr ""

# 79db0ba4244a4701aa8dfe0053d5579c
#: ../../using/specifics.md:162 d106edf46e52463ba67a7cd35d685a6a
msgid ""
"Connection to Spark Cluster on Standalone Mode requires the following set"
" of steps:"
msgstr ""

# 2c728588b6df4753a0c08f969364a79a
#: ../../using/specifics.md:164 4df9d9f192794b308ff99ea8f1280b4b
msgid ""
"Verify that the docker image (check the Dockerfile) and the Spark Cluster"
" which is being deployed, run the same version of Spark."
msgstr ""

#: ../../using/specifics.md:165 f4166e5876a3467cbc6ad7b27574e41d
msgid ""
"[Deploy Spark in Standalone Mode](http://spark.apache.org/docs/latest"
"/spark-standalone.html)."
msgstr ""

# 3c781f06114240e28dcdb0c40a5d5cf5
#: ../../using/specifics.md:168 862b5cead0fc4032a8433bef9870ef02
msgid ""
"The language specific instructions are almost same as mentioned above for"
" Mesos, only the master url would now be something like "
"spark://10.10.10.10:7077"
msgstr ""

#: ../../using/specifics.md:170 d50c78fd595b4f36aedb5cef9149fa65
msgid "## Tensorflow"
msgstr ""

#: ../../using/specifics.md:172 737d3eef27fe4431b79e6be25402240c
msgid ""
"The `jupyter/tensorflow-notebook` image supports the use of "
"[Tensorflow](https://www.tensorflow.org/) in single machine or "
"distributed mode."
msgstr ""

#: ../../using/specifics.md:174 0563a3adedad46d9828d9c577848ad40
msgid "### Single Machine Mode"
msgstr ""

#: ../../using/specifics.md:176 ../../using/specifics.md:190
#: 516057df6ff748d2b29bb238532034ba cdb1843d17734de39ad22ab168bf5cbb
msgid "```python import tensorflow as tf"
msgstr ""

#: ../../using/specifics.md:179 0fb6b380a9184234816fbc11196f9b36
msgid "hello = tf.Variable('Hello World!')"
msgstr ""

#: ../../using/specifics.md:181 cef06bed0af34e9cadd5a993218aa490
msgid "sess = tf.Session() init = tf.global_variables_initializer()"
msgstr ""

#: ../../using/specifics.md:184 ../../using/specifics.md:199
#: 69c1f9ff5fa047439f81c932653f76d4 e4dfd540bb9649a6919a7d180c88a86c
msgid "sess.run(init) sess.run(hello) ```"
msgstr ""

#: ../../using/specifics.md:188 138eac23ee8949a5b3b84eb45f417160
msgid "### Distributed Mode"
msgstr ""

#: ../../using/specifics.md:193 eeb0e5dcd01d4608b0c2b3e72d275577
msgid "hello = tf.Variable('Hello Distributed World!')"
msgstr ""

#: ../../using/specifics.md:195 ae57df462bf2480f806981d6750c16b0
msgid ""
"server = tf.train.Server.create_local_server() sess = "
"tf.Session(server.target) init = tf.global_variables_initializer()"
msgstr ""

# 5e06096348924f51881d05f984e91381
#~ msgid "This list only has 2 examples. You can be the next!"
#~ msgstr ""

# 7ed4a7919dfd446c817c64a7e420e95e
#~ msgid ""
#~ "To use a requirements.txt file, first"
#~ " create your requirements.txt file with "
#~ "the listing of packages desired.  Next,"
#~ " create a new Dockerfile like the "
#~ "one shown below."
#~ msgstr ""

# 56f2354437c74650a70bd154647eed26
#~ msgid ""
#~ "Here is a quick example NGINX "
#~ "configuration to get started.  You'll "
#~ "need a server, a .crt and .key "
#~ "file for your server, and docker &"
#~ " docker-compose installed.  Then just "
#~ "download the files at that gist "
#~ "and run docker-compose up -d to"
#~ " test it out.  Customize the "
#~ "nginx.conf file to set the desired "
#~ "paths and add other services."
#~ msgstr ""

#~ msgid ""
#~ "You must refer to git-SHA image"
#~ " tags when stability and reproducibility"
#~ " are important in your work. (e.g."
#~ " FROM jupyter/scipy-notebook:7c45ec67c8e7, docker"
#~ " run -it --rm jupyter/scipy-"
#~ "notebook:7c45ec67c8e7). You should only use"
#~ " latest when a one-off container "
#~ "instance is acceptable (e.g., you want"
#~ " to briefly try a new library "
#~ "in a notebook)."
#~ msgstr ""

# 577f93f6511a4b17afcef782def7f802
#~ msgid "ipywidgets for interactive visualizations in Python notebooks"
#~ msgstr ""

#~ msgid ""
#~ "You must refer to git-SHA image"
#~ " tags when stability and reproducibility"
#~ " are important in your work. (e.g."
#~ " FROM jupyter/scipy-notebook:7c45ec67c8e7, docker"
#~ " run  -it --rm jupyter/scipy-"
#~ "notebook:7c45ec67c8e7). You should only use"
#~ " latest when a one-off container "
#~ "instance is acceptable (e.g., you want"
#~ " to briefly try a new library "
#~ "in a notebook)."
#~ msgstr ""

# 909f17eb57bc4e4e8df8216423d9c008
#~ msgid ""
#~ "You should only enable sudo if you"
#~ " trust the user and/or if the "
#~ "container is running on an isolated "
#~ "host."
#~ msgstr ""

# 7c56c3891bd94336b21fc82d5aeab6ae
#~ msgid "Common Features"
#~ msgstr ""

# bf4e4ace24d144538edc1d9a2605cfef
#~ msgid ""
#~ "A container launched from any Jupyter"
#~ " Docker Stacks image runs a Jupyter"
#~ " Notebook server by default. The "
#~ "container does so by executing a "
#~ "start-notebook.sh script. This script "
#~ "configures the internal container environment"
#~ " and then runs jupyter notebook, "
#~ "passing it any command line arguments"
#~ " received."
#~ msgstr ""

# 056d2f8a9a4343668131dfb9de71838a
#~ msgid "Notebook Options"
#~ msgstr ""

# d1c32336e1f545d496f7a411fb18cb4e
#~ msgid ""
#~ "You can pass Jupyter command line "
#~ "options to the start-notebook.sh script"
#~ " when launching the container. For "
#~ "example, to secure the Notebook server"
#~ " with a custom password hashed using"
#~ " IPython.lib.passwd() instead of the "
#~ "default token, you can run the "
#~ "following:"
#~ msgstr ""

# 58ad38b4300449da805bc67e73be5fd0
#~ msgid "Docker Options"
#~ msgstr ""

# 0118197966504e3ab1c03a0c49e68c97
#~ msgid ""
#~ "You may instruct the start-notebook.sh"
#~ " script to customize the container "
#~ "environment before launching the notebook "
#~ "server. You do so by passing "
#~ "arguments to the docker run command."
#~ msgstr ""

# 391efc925af248fa9bfa2220bdf0730b
#~ msgid ""
#~ "-e NB_USER=jovyan - Instructs the "
#~ "startup script to change the default "
#~ "container username from jovyan to the"
#~ " provided value. Causes the script to"
#~ " rename the jovyan user home folder."
#~ " For this option to take effect, "
#~ "you must run the container with "
#~ "--user root and set the working "
#~ "directory -w /home/$NB_USER. This feature "
#~ "is useful when mounting host volumes "
#~ "with specific home folder."
#~ msgstr ""

# 97929e34ea254dd289e235276b72068f
#~ msgid ""
#~ "-e NB_UID=1000 - Instructs the startup"
#~ " script to switch the numeric user"
#~ " ID of $NB_USER to the given "
#~ "value. This feature is useful when "
#~ "mounting host volumes with specific "
#~ "owner permissions. For this option to"
#~ " take effect, you must run the "
#~ "container with --user root. (The startup"
#~ " script will su $NB_USER after "
#~ "adjusting the user ID.) You might "
#~ "consider using modern Docker options "
#~ "--user and --group-add instead. See "
#~ "the last bullet below for details."
#~ msgstr ""

# 71cac0c045d342008ca80ce23ef32431
#~ msgid ""
#~ "-e NB_GID=100 - Instructs the startup"
#~ " script to change the primary group"
#~ " of$NB_USER to $NB_GID (the new group"
#~ " is added with a name of "
#~ "$NB_GROUP if it is defined, otherwise"
#~ " the group is named $NB_USER).  This"
#~ " feature is useful when mounting host"
#~ " volumes with specific group permissions."
#~ " For this option to take effect, "
#~ "you must run the container with "
#~ "--user root. (The startup script will"
#~ " su $NB_USER after adjusting the "
#~ "group ID.) You might consider using "
#~ "modern Docker options --user and "
#~ "--group-add instead. See the last "
#~ "bullet below for details.  The user "
#~ "is added to supplemental group users "
#~ "(gid 100) in order to allow write"
#~ " access to the home directory and "
#~ "/opt/conda.  If you override the "
#~ "user/group logic, ensure the user stays"
#~ " in group users if you want "
#~ "them to be able to modify files"
#~ " in the image."
#~ msgstr ""

# 5ca13bdafc214f8b997ca2752592f1be
#~ msgid ""
#~ "-e NB_GROUP=<name> - The name used "
#~ "for $NB_GID, which defaults to $NB_USER."
#~ "  This is only used if $NB_GID "
#~ "is specified and completely optional: "
#~ "there is only cosmetic effect."
#~ msgstr ""

# 4d57d0bd85ae417687747831670ec35f
#~ msgid ""
#~ "-e NB_UMASK=<umask> - Configures Jupyter "
#~ "to use a different umask value "
#~ "from default, i.e. 022. For example, "
#~ "if setting umask to 002, new files"
#~ " will be readable and writable by "
#~ "group members instead of just writable"
#~ " by the owner. Wikipedia has a "
#~ "good article about umask. Feel free "
#~ "to read it in order to choose "
#~ "the value that better fits your "
#~ "needs. Default value should fit most "
#~ "situations. Note that NB_UMASK when set"
#~ " only applies to the Jupyter process"
#~ " itself - you cannot use it to"
#~ " set a umask for additional files "
#~ "created during run-hooks e.g. via "
#~ "pip or conda - if you need "
#~ "to set a umask for these you "
#~ "must set umask for each command."
#~ msgstr ""

# 580637e7f00d4a36b69ce3f6ec43370e
#~ msgid ""
#~ "-e CHOWN_HOME=yes - Instructs the "
#~ "startup script to change the $NB_USER"
#~ " home directory owner and group to"
#~ " the current value of $NB_UID and "
#~ "$NB_GID. This change will take effect"
#~ " even if the user home directory "
#~ "is mounted from the host using -v"
#~ " as described below. The change is"
#~ " not applied recursively by default. "
#~ "You can change modify the chown "
#~ "behavior by setting CHOWN_HOME_OPTS (e.g., "
#~ "-e CHOWN_HOME_OPTS='-R')."
#~ msgstr ""

# 42bbfaf32b43482ba99263a74b383ac3
#~ msgid ""
#~ "-e CHOWN_EXTRA=\"<some dir>,<some other dir>\""
#~ " - Instructs the startup script to"
#~ " change the owner and group of "
#~ "each comma-separated container directory "
#~ "to the current value of $NB_UID "
#~ "and $NB_GID. The change is not "
#~ "applied recursively by default. You can"
#~ " change modify the chown behavior by"
#~ " setting CHOWN_EXTRA_OPTS (e.g., -e "
#~ "CHOWN_EXTRA_OPTS='-R')."
#~ msgstr ""

# 399a6318e3724410a4dcc93cc9d8736d
#~ msgid ""
#~ "-e GRANT_SUDO=yes - Instructs the "
#~ "startup script to grant the NB_USER "
#~ "user passwordless sudo capability. You "
#~ "do not need this option to allow"
#~ " the user to conda or pip "
#~ "install additional packages. This option "
#~ "is useful, however, when you wish "
#~ "to give $NB_USER the ability to "
#~ "install OS packages with apt or "
#~ "modify other root-owned files in "
#~ "the container. For this option to "
#~ "take effect, you must run the "
#~ "container with --user root. (The "
#~ "start-notebook.sh script will su $NB_USER"
#~ " after adding $NB_USER to sudoers.) "
#~ "You should only enable sudo if you"
#~ " trust the user or if the "
#~ "container is running on an isolated "
#~ "host."
#~ msgstr ""

# 3c6485fef5d44f72b4693c1a3d1ec35c
#~ msgid ""
#~ "-e GEN_CERT=yes - Instructs the startup"
#~ " script to generates a self-signed"
#~ " SSL certificate and configure Jupyter "
#~ "Notebook to use it to accept "
#~ "encrypted HTTPS connections."
#~ msgstr ""

# efe931ecaeac4348a6f0112a65371306
#~ msgid ""
#~ "-e JUPYTER_ENABLE_LAB=yes - Instructs the "
#~ "startup script to run jupyter lab "
#~ "instead of the default jupyter notebook"
#~ " command. Useful in container orchestration"
#~ " environments where setting environment "
#~ "variables is easier than change command"
#~ " line parameters."
#~ msgstr ""

# fe40b3a059e54a53a7a5fde86441ae72
#~ msgid ""
#~ "-e RESTARTABLE=yes - Runs Jupyter in "
#~ "a loop so that quitting Jupyter "
#~ "does not cause the container to "
#~ "exit.  This may be useful when you"
#~ " need to install extensions that "
#~ "require restarting Jupyter."
#~ msgstr ""

# bb82e70358e7452d86eb1b8e971fbf27
#~ msgid ""
#~ "-v /some/host/folder/for/work:/home/jovyan/work - "
#~ "Mounts a host machine directory as "
#~ "folder in the container. Useful when "
#~ "you want to preserve notebooks and "
#~ "other work even after the container "
#~ "is destroyed. You must grant the "
#~ "within-container notebook user or group "
#~ "(NB_UID or NB_GID) write access to "
#~ "the host directory (e.g., sudo chown "
#~ "1000 /some/host/folder/for/work)."
#~ msgstr ""

# 403f8e6101534bc0951bf5bb0b03c5a0
#~ msgid ""
#~ "--user 5000 --group-add users - "
#~ "Launches the container with a specific"
#~ " user ID and adds that user to"
#~ " the users group so that it can"
#~ " modify files in the default home "
#~ "directory and /opt/conda. You can use"
#~ " these arguments as alternatives to "
#~ "setting $NB_UID and $NB_GID."
#~ msgstr ""

# 565fbbe944ed4e68a5e202eaf07d1402
#~ msgid "Startup Hooks"
#~ msgstr ""

# 70f6f3501e1b43d3a95e200c39eef8d2
#~ msgid ""
#~ "You can further customize the container"
#~ " environment by adding shell scripts "
#~ "(*.sh) to be sourced or executables "
#~ "(chmod +x) to be run to the "
#~ "paths below:"
#~ msgstr ""

# bdc8d9262aea4329b09bac1deb92d6da
#~ msgid ""
#~ "/usr/local/bin/start-notebook.d/ - handled "
#~ "before any of the standard options "
#~ "noted above are applied"
#~ msgstr ""

# 786fba9678e24e3ba5ded6536dc0492a
#~ msgid ""
#~ "/usr/local/bin/before-notebook.d/ - handled "
#~ "after all of the standard options "
#~ "noted above are applied and just "
#~ "before the notebook server launches"
#~ msgstr ""

# 5903b6a921cb42a9a8b6db0e9592769c
#~ msgid ""
#~ "See the run-hooks function in the"
#~ " jupyter/base-notebook start.sh script for"
#~ " execution details."
#~ msgstr ""

# ffb01f3597d1453bb0299e9a4a888757
#~ msgid "SSL Certificates"
#~ msgstr ""

# 7b1a34debd094e02930aa7197377b691
#~ msgid ""
#~ "You may mount SSL key and "
#~ "certificate files into a container and"
#~ " configure Jupyter Notebook to use "
#~ "them to accept HTTPS connections. For"
#~ " example, to mount a host folder "
#~ "containing a notebook.key and notebook.crt "
#~ "and use them, you might run the"
#~ " following:"
#~ msgstr ""

# 11ef89b3d17b4bcf827e73a7ebb13756
#~ msgid ""
#~ "The docker-stacks/examples for information "
#~ "about how to use Let's Encrypt "
#~ "certificates when you run these stacks"
#~ " on a publicly visible domain."
#~ msgstr ""

# 4a42ccc5b624431bbacdc8c1d5624fb4
#~ msgid ""
#~ "The jupyter_notebook_config.py file for how"
#~ " this Docker image generates a "
#~ "self-signed certificate."
#~ msgstr ""

# 95d9c3081fa34def82e309c53ef2147b
#~ msgid ""
#~ "The Jupyter Notebook documentation for "
#~ "best practices about securing a public"
#~ " notebook server in general."
#~ msgstr ""

# 9950b2e426414111ad46c6ba1e9d29bb
#~ msgid "Alternative Commands"
#~ msgstr ""

# 2e90717352804ebd8086eef378fa411d
#~ msgid "start.sh"
#~ msgstr ""

# 11637ea03062425e94964f2c70ed8676
#~ msgid ""
#~ "The start-notebook.sh script actually "
#~ "inherits most of its option handling "
#~ "capability from a more generic start.sh"
#~ " script. The start.sh script supports "
#~ "all of the features described above, "
#~ "but allows you to specify an "
#~ "arbitrary command to execute. For "
#~ "example, to run the text-based "
#~ "ipython console in a container, do "
#~ "the following:"
#~ msgstr ""

# 3d92501fb3b940b385ee986095610391
#~ msgid ""
#~ "This script is particularly useful when"
#~ " you derive a new Dockerfile from "
#~ "this image and install additional "
#~ "Jupyter applications with subcommands like "
#~ "jupyter console, jupyter kernelgateway, etc."
#~ msgstr ""

# ff1b1af310d54eedb852dc5eff7a4f7e
#~ msgid "Others"
#~ msgstr ""

# 127ffe0a552b4dafaa77d173883350d7
#~ msgid ""
#~ "You can bypass the provided scripts "
#~ "and specify an arbitrary start command."
#~ " If you do, keep in mind that"
#~ " features supported by the start.sh "
#~ "script and its kin will not "
#~ "function (e.g., GRANT_SUDO)."
#~ msgstr ""

# 1d8bc4b15c3044b3932e0df72dd694a7
#~ msgid "Conda Environments"
#~ msgstr ""

# 97935ba423ed4a8787f9895f00015e4b
#~ msgid ""
#~ "The default Python 3.x Conda environment"
#~ " resides in /opt/conda. The /opt/conda/bin"
#~ " directory is part of the default "
#~ "jovyan user's $PATH. That directory is"
#~ " also whitelisted for use in sudo "
#~ "commands by the start.sh script."
#~ msgstr ""

# a8fe459cc9ff43b3b2f31efd4587f145
#~ msgid ""
#~ "The jovyan user has full read/write "
#~ "access to the /opt/conda directory. You"
#~ " can use either conda or pip to"
#~ " install new packages without any "
#~ "additional permissions."
#~ msgstr ""

# 36939901b3744e3fb67d2bae58ae8e25
#~ msgid "Contributed Recipes"
#~ msgstr ""

# 8bc65b7f51f4442c95ea0dec5b4b2704
#~ msgid ""
#~ "Users sometimes share interesting ways "
#~ "of using the Jupyter Docker Stacks. "
#~ "We encourage users to contribute these"
#~ " recipes to the documentation in case"
#~ " they prove useful to other members"
#~ " of the community by submitting a "
#~ "pull request to docs/using/recipes.md. The "
#~ "sections below capture this knowledge."
#~ msgstr ""

# 7447af86f4f3438ba413a7e9cc9764e5
#~ msgid "Using sudo within a container"
#~ msgstr ""

# ed8292c31667424184fe7515a30f79cd
#~ msgid ""
#~ "Password authentication is disabled for "
#~ "the NB_USER (e.g., jovyan). This choice"
#~ " was made to avoid distributing "
#~ "images with a weak default password "
#~ "that users ~might~ will forget to "
#~ "change before running a container on "
#~ "a publicly accessible host."
#~ msgstr ""

# d22ae301bebb4857b866359ddbfb7e53
#~ msgid ""
#~ "You can grant the within-container "
#~ "NB_USER passwordless sudo access by "
#~ "adding -e GRANT_SUDO=yes and --user root"
#~ " to your Docker command line or "
#~ "appropriate container orchestrator config."
#~ msgstr ""

#~ msgid ""
#~ "You should only enable sudo if you"
#~ " trust the user and/or if the "
#~ "container is running on an isolated "
#~ "host. See Docker security documentation "
#~ "for more information about running "
#~ "containers as root."
#~ msgstr ""

# 5b38bd48b58242788cc8b581b575241a
#~ msgid "Using pip install or conda install in a Child Docker image"
#~ msgstr ""

# c35347a79a2e4a7faffe139767808965
#~ msgid ""
#~ "To use a requirements.txt file, first"
#~ " create your requirements.txt file with "
#~ "the listing of packages desired. Next,"
#~ " create a new Dockerfile like the "
#~ "one shown below."
#~ msgstr ""

# fd2320ac3001480992ab2dd80285467b
#~ msgid "Ref: docker-stacks/commit/79169618d571506304934a7b29039085e77db78c"
#~ msgstr ""

# 179407610520450ea0e4b566eac8ec96
#~ msgid "Add a Python 2.x environment"
#~ msgstr ""

# 19bf98219e344b80b68fbf7f3aa68ec6
#~ msgid ""
#~ "Python 2.x was removed from all "
#~ "images on August 10th, 2017, starting"
#~ " in tag cc9feab481f7. You can add "
#~ "a Python 2.x environment by defining "
#~ "your own Dockerfile inheriting from one"
#~ " of the images like so:"
#~ msgstr ""

# be4f7d9b615d490c87cc6393ed0fabf2
#~ msgid "Ref: https://github.com/jupyter/docker-stacks/issues/440"
#~ msgstr ""

#~ msgid "Add a Python 3.x environment"
#~ msgstr ""

#~ msgid ""
#~ "The default version of Python that "
#~ "ships with conda/ubuntu may not be "
#~ "the version you want. To add a "
#~ "conda environment with a different "
#~ "version and make it accessible to "
#~ "Jupyter, the instructions are very "
#~ "similar to Python 2.x but are "
#~ "slightly simpler (no need to switch "
#~ "to root):"
#~ msgstr ""

# 747e87a9067b4870bad5aa335ab39f7d
#~ msgid "Run JupyterLab"
#~ msgstr ""

# e062399bbaee4f1eb3ab48dcc60289b8
#~ msgid ""
#~ "JupyterLab is preinstalled as a notebook"
#~ " extension starting in tag c33a7dc0eece."
#~ msgstr ""

# 7c0f192d197143698dd371fff8fa3ceb
#~ msgid ""
#~ "Run jupyterlab using a command such "
#~ "as docker run -it --rm -p "
#~ "8888:8888 jupyter/datascience-notebook start.sh "
#~ "jupyter lab"
#~ msgstr ""

#~ msgid "Dask JupyterLab Extension"
#~ msgstr ""

#~ msgid ""
#~ "Dask JupyterLab Extension provides a "
#~ "JupyterLab extension to manage Dask "
#~ "clusters, as well as embed Dask's "
#~ "dashboard plots directly into JupyterLab "
#~ "panes. Create the Dockerfile as:"
#~ msgstr ""

#~ msgid "And build the image as:"
#~ msgstr ""

#~ msgid "Once built, run using the command:"
#~ msgstr ""

#~ msgid "Ref: https://github.com/jupyter/docker-stacks/issues/999"
#~ msgstr ""

# e7842069e6ce432b9f1a12271e0ddc24
#~ msgid "Let's Encrypt a Notebook server"
#~ msgstr ""

# 4c00785b93734066b349b42b23c312af
#~ msgid ""
#~ "See the README for the simple "
#~ "automation here https://github.com/jupyter/docker-"
#~ "stacks/tree/master/examples/make-deploy which "
#~ "includes steps for requesting and "
#~ "renewing a Let's Encrypt certificate."
#~ msgstr ""

# c386f5913a78475487e9f12c76af9032
#~ msgid "Ref: https://github.com/jupyter/docker-stacks/issues/78"
#~ msgstr ""

# dd297c8f73a44707bf02064434a50a47
#~ msgid "Slideshows with Jupyter and RISE"
#~ msgstr ""

# a1834343ae3045ea962e0efc80f69443
#~ msgid ""
#~ "RISE allows via extension to create "
#~ "live slideshows of your notebooks, with"
#~ " no conversion, adding javascript "
#~ "Reveal.js:"
#~ msgstr ""

# 6e0c67b18d3546a9ab024c5663aa8f90
#~ msgid "Credit: Paolo D. based on docker-stacks/issues/43"
#~ msgstr ""

# 6bf66d68f2e5439b8403c0dd8ded40c5
#~ msgid "xgboost"
#~ msgstr ""

# a9bc4b88bd3d4bc1a7832f31677c298a
#~ msgid "Running behind a nginx proxy"
#~ msgstr ""

# dd58dbc3b08744a0b9415448d3bdbba6
#~ msgid ""
#~ "you would prefer to access the "
#~ "notebook at a server URL with a"
#~ " path (https://example.com/jupyter) rather than"
#~ " a port (https://example.com:8888)"
#~ msgstr ""

# cffd649e66ae4efb8122522e465ce3e3
#~ msgid ""
#~ "Here is a quick example NGINX "
#~ "configuration to get started. You'll "
#~ "need a server, a .crt and .key "
#~ "file for your server, and docker &"
#~ " docker-compose installed. Then just "
#~ "download the files at that gist "
#~ "and run docker-compose up -d to"
#~ " test it out. Customize the "
#~ "nginx.conf file to set the desired "
#~ "paths and add other services."
#~ msgstr ""

# 7ba37cfc11224013a862d6519168acd0
#~ msgid "Host volume mounts and notebook errors"
#~ msgstr ""

# 0fc6706374ee4a5d98517ec02ee24a03
#~ msgid ""
#~ "If you are mounting a host "
#~ "directory as /home/jovyan/work in your "
#~ "container and you receive permission "
#~ "errors or connection errors when you "
#~ "create a notebook, be sure that "
#~ "the jovyan user (UID=1000 by default)"
#~ " has read/write access to the "
#~ "directory on the host. Alternatively, "
#~ "specify the UID of the jovyan user"
#~ " on container startup using the -e"
#~ " NB_UID option described in the "
#~ "Common Features, Docker Options section"
#~ msgstr ""

# a6c910ab798b43ee91c0af160a3aadb6
#~ msgid "Ref: https://github.com/jupyter/docker-stacks/issues/199"
#~ msgstr ""

# 908924a0b4fa44d79fbca1413a0fb296
#~ msgid "Manpage installation"
#~ msgstr ""

# fb4a0f5bc3534bd9bb8909ce6512f4dd
#~ msgid ""
#~ "Adding the documentation on top of "
#~ "an existing singleuser image wastes a"
#~ " lot of space and requires "
#~ "reinstalling every system package, which "
#~ "can take additional time and bandwidth;"
#~ " the datascience-notebook image has "
#~ "been shown to grow by almost 3GB"
#~ " when adding manapages in this way."
#~ " Enabling manpages in the base Ubuntu"
#~ " layer prevents this container bloat:"
#~ msgstr ""

# 84b7fb0b5fd748ecba457f867a0e30bf
#~ msgid ""
#~ "Be sure to check the current base"
#~ " image in base-notebook before "
#~ "building."
#~ msgstr ""

# 5764b06de0d941a585e5107f313235f4
#~ msgid "JupyterHub"
#~ msgstr ""

# fbff97a16a2a4a53a69dd2d1c7dfbe91
#~ msgid "Use JupyterHub's dockerspawner"
#~ msgstr ""

# 8b1bc94531e7490fbaa012f5c4a257bd
#~ msgid ""
#~ "Swapping out the FROM line in the"
#~ " jupyterhub/singleuser Dockerfile should be "
#~ "enough for most cases."
#~ msgstr ""

# ce864521fffa4c89b7584d24296515d5
#~ msgid ""
#~ "Credit: Justin Tyberg, quanghoc, and Min"
#~ " RK based on docker-stacks/issues/124 "
#~ "and docker-stacks/pull/185"
#~ msgstr ""

# 6a5d92e7b071449686d148be90544e64
#~ msgid "Containers with a specific version of JupyterHub"
#~ msgstr ""

# 091b62f4a91c4d87b92554795a00744c
#~ msgid ""
#~ "To use a specific version of "
#~ "JupyterHub, the version of jupyterhub in"
#~ " your image should match the version"
#~ " in the Hub itself."
#~ msgstr ""

# 67db6ce9d62f499a9d9aaf675a86cddc
#~ msgid "Credit: MinRK"
#~ msgstr ""

# d4613cff20a140cbbbacc84ada8fcd87
#~ msgid "Ref: https://github.com/jupyter/docker-stacks/issues/177"
#~ msgstr ""

# 19439bd85c2946bb89f385651f8283dc
#~ msgid "Spark"
#~ msgstr ""

# 9c295c93db724e5fb11a8f870f805f41
#~ msgid "Using PySpark with AWS S3"
#~ msgstr ""

# 59f08373c7354fa4bb5b7c10441b5d69
#~ msgid "Ref: https://github.com/jupyter/docker-stacks/issues/127"
#~ msgstr ""

# c32dccc031664268983f72ed7927beff
#~ msgid "Using Local Spark JARs"
#~ msgstr ""

# 19614ffa973f49bab235cb5ac9cdf259
#~ msgid "Ref: https://github.com/jupyter/docker-stacks/issues/154"
#~ msgstr ""

# fc70801958a34e5aa578388147a8a1fb
#~ msgid "Using spark-packages.org"
#~ msgstr ""

# 031b9633ca0849e9a9035f4fa5ec2d29
#~ msgid ""
#~ "If you'd like to use packages from"
#~ " spark-packages.org, see "
#~ "https://gist.github.com/parente/c95fdaba5a9a066efaab for "
#~ "an example of how to specify the"
#~ " package identifier in the environment "
#~ "before creating a SparkContext."
#~ msgstr ""

# 08c4d39ccfa84551af78867ab37d3f18
#~ msgid "Ref: https://github.com/jupyter/docker-stacks/issues/43"
#~ msgstr ""

# 285d9bf0eefb480386dfdcd55fd76ef5
#~ msgid "Use jupyter/all-spark-notebooks with an existing Spark/YARN cluster"
#~ msgstr ""

# 1b1c743d85d542989f6a8f2c97a588d3
#~ msgid "Credit: britishbadger from docker-stacks/issues/369"
#~ msgstr ""

# 06d2e360eccb489abeeebada6c0b41eb
#~ msgid ""
#~ "Run Jupyter Notebook/Lab inside an "
#~ "already secured environment (i.e., with "
#~ "no token)"
#~ msgstr ""

# 42dd63565c4a4f67825f675972554d34
#~ msgid "(Adapted from issue 728)"
#~ msgstr ""

# 8af2ceb1414f46e1802681695b5917f8
#~ msgid ""
#~ "The default security is very good. "
#~ "There are use cases, encouraged by "
#~ "containers, where the jupyter container "
#~ "and the system it runs within, lie"
#~ " inside the security boundary. In "
#~ "these use cases it is convenient "
#~ "to launch the server without a "
#~ "password or token. In this case, "
#~ "you should use the start.sh script "
#~ "to launch the server with no "
#~ "token:"
#~ msgstr ""

# 158396013982441e9e62402c499dfb11
#~ msgid "Enable nbextension spellchecker for markdown (or any other nbextension)"
#~ msgstr ""

# 78ba1c20de2445fb9b76ec6202e4d794
#~ msgid "Ref: https://github.com/jupyter/docker-stacks/issues/675"
#~ msgstr ""

# f66d723263124285a641f0dee8a41565
#~ msgid "Running a Container"
#~ msgstr ""

# 3a614d7e864741199c1223a26fc37c03
#~ msgid "Using the Docker CLI"
#~ msgstr ""

# 3039d667df25426b84be7ab9d920cfee
#~ msgid ""
#~ "You can launch a local Docker "
#~ "container from the Jupyter Docker Stacks"
#~ " using the Docker command line "
#~ "interface. There are numerous ways to"
#~ " configure containers using the CLI. "
#~ "The following are some common patterns."
#~ msgstr ""

# 0ea4263c502142b2b3fa7f55a917af19
#~ msgid ""
#~ "Example 1 This command pulls the "
#~ "jupyter/scipy-notebook image tagged "
#~ "2c80cf3537ca from Docker Hub if it "
#~ "is not already present on the "
#~ "local host. It then starts a "
#~ "container running a Jupyter Notebook "
#~ "server and exposes the server on "
#~ "host port 8888. The server logs "
#~ "appear in the terminal and include "
#~ "a URL to the notebook server."
#~ msgstr ""

# 402a9d9ecccb479994d2903710aabaa6
#~ msgid ""
#~ "Pressing Ctrl-C shuts down the notebook"
#~ " server but leaves the container "
#~ "intact on disk for later restart "
#~ "or permanent deletion using commands "
#~ "like the following:"
#~ msgstr ""

# fe38eef5fbe24b90ab070cefeef42230
#~ msgid ""
#~ "Example 2 This command pulls the "
#~ "jupyter/r-notebook image tagged e5c5a7d3e52d "
#~ "from Docker Hub if it is not "
#~ "already present on the local host. "
#~ "It then starts a container running "
#~ "a Jupyter Notebook server and exposes"
#~ " the server on host port 10000. "
#~ "The server logs appear in the "
#~ "terminal and include a URL to the"
#~ " notebook server, but with the "
#~ "internal container port (8888) instead "
#~ "of the the correct host port "
#~ "(10000)."
#~ msgstr ""

# d911c29555904311b29d8eb79fcb9843
#~ msgid ""
#~ "Pressing Ctrl-C shuts down the notebook"
#~ " server and immediately destroys the "
#~ "Docker container. Files written to "
#~ "~/work in the container remain touched."
#~ " Any other changes made in the "
#~ "container are lost."
#~ msgstr ""

# 718d037e82a64d69aea592f76b3f047b
#~ msgid ""
#~ "Example 3 This command pulls the "
#~ "jupyter/all-spark-notebook image currently "
#~ "tagged latest from Docker Hub if "
#~ "an image tagged latest is not "
#~ "already present on the local host. "
#~ "It then starts a container named "
#~ "notebook running a JupyterLab server and"
#~ " exposes the server on a randomly "
#~ "selected port."
#~ msgstr ""

# f9627b2638ec498ebfd06d0475e1dc4c
#~ msgid "Using Binder"
#~ msgstr ""

# 6e355acc72ca41a2aca2972df65259c7
#~ msgid ""
#~ "Binder is a service that allows "
#~ "you to create and share custom "
#~ "computing environments for projects in "
#~ "version control. You can use any "
#~ "of the Jupyter Docker Stacks images "
#~ "as a basis for a Binder-compatible"
#~ " Dockerfile. See the docker-stacks "
#~ "example and Using a Dockerfile sections"
#~ " in the Binder documentation for "
#~ "instructions."
#~ msgstr ""

# d6f8d0ee10b542488dce87b84eb48036
#~ msgid "Using JupyterHub"
#~ msgstr ""

# ef9a37b25db542dea89c9c1fb31c18cd
#~ msgid ""
#~ "You can configure JupyterHub to launcher"
#~ " Docker containers from the Jupyter "
#~ "Docker Stacks images. If you've been "
#~ "following the Zero to JupyterHub with"
#~ " Kubernetes guide, see the Use an "
#~ "existing Docker image section for "
#~ "details. If you have a custom "
#~ "JupyterHub deployment, see the Picking "
#~ "or building a Docker image instructions"
#~ " for the dockerspawner instead."
#~ msgstr ""

# bf63b713aece4a7eacc2ad77f6f47c2c
#~ msgid "Using Other Tools and Services"
#~ msgstr ""

# fcce8862fc7a41a394c1e19d35363653
#~ msgid ""
#~ "You can use the Jupyter Docker "
#~ "Stacks with any Docker-compatible "
#~ "technology (e.g., Docker Compose, docker-"
#~ "py, your favorite cloud container "
#~ "service). See the documentation of the"
#~ " tool, library, or service for "
#~ "details about how to reference, "
#~ "configure, and launch containers from "
#~ "these images."
#~ msgstr ""

# 75674f1f85cb43bcbc020de3b84f18f7
#~ msgid "Selecting an Image"
#~ msgstr ""

# 686b01e6feaf4363930c16cecff5f462
# cdbd4076608348a182dc09701223093a
#~ msgid "Core Stacks"
#~ msgstr ""

# daaad3b4f13e4c6395b0e9186c73030d
# d0275f3e7b07428a85c62db44d774d71
#~ msgid "Image Relationships"
#~ msgstr ""

# 892152661ffc4ea096ba152334ff086f
# a6f02cacf6334057bdb5eb1339411a32
#~ msgid "Community Stacks"
#~ msgstr ""

# fc2fca9d04f442e9a313123cec1174ff
#~ msgid ""
#~ "The Jupyter team maintains a set "
#~ "of Docker image definitions in the "
#~ "https://github.com/jupyter/docker-stacks GitHub "
#~ "repository. The following sections describe"
#~ " these images including their contents, "
#~ "relationships, and versioning strategy."
#~ msgstr ""

# 4e9d03b93e964d16b23b30610d17b3e2
#~ msgid "jupyter/base-notebook"
#~ msgstr ""

# f43dd3334aac4971a67e5bb833dafcb8
# 93db5d969cea480a827c0d6d028fc717
# 4ff6dbde14924b73b3a54bdb94096ba2
# da116e35b2494285abe8447ab372324b
# 6fb499ae6636492b979bad5a17733c4b
# c10b1e6040c84241a77edb90ea3306a4
# 227408f175a24d1cb70e69ca32f11434
# b8ff65660ef14b0692edbe3a2fdff42b
# b50d8b1a5d3849279bcbda725f9f8e62
#~ msgid "Source on GitHub | Dockerfile commit history | Docker Hub image tags"
#~ msgstr ""

# eea41b7365bd4751ae599beb4edfa168
#~ msgid ""
#~ "jupyter/base-notebook is a small image"
#~ " supporting the options common across "
#~ "all core stacks. It is the basis"
#~ " for all other stacks."
#~ msgstr ""

# facfb37f7fa64b85930d8f12fdeef2dd
#~ msgid ""
#~ "Minimally-functional Jupyter Notebook server"
#~ " (e.g., no pandoc for saving "
#~ "notebooks as PDFs)"
#~ msgstr ""

# e90347274dd1459383e31a40bc6685f2
#~ msgid "Miniconda Python 3.x in /opt/conda"
#~ msgstr ""

# 0396d289dcdd49788f06c18efeca5013
#~ msgid ""
#~ "Unprivileged user jovyan (uid=1000, "
#~ "configurable, see options) in group "
#~ "users (gid=100) with ownership over the"
#~ " /home/jovyan and /opt/conda paths"
#~ msgstr ""

# 0e9211b01ef94b66bad9288682e1a833
#~ msgid ""
#~ "tini as the container entrypoint and "
#~ "a start-notebook.sh script as the "
#~ "default command"
#~ msgstr ""

# e38b63a14dae4b718a94c6e0523daf1e
#~ msgid ""
#~ "A start-singleuser.sh script useful for"
#~ " launching containers in JupyterHub"
#~ msgstr ""

# 0a603f43d1b34be28d2c1002f6686fda
#~ msgid ""
#~ "A start.sh script useful for running "
#~ "alternative commands in the container "
#~ "(e.g. ipython, jupyter kernelgateway, jupyter"
#~ " lab)"
#~ msgstr ""

# 9cff5da6908e42d5a7da093ba0bfcfe7
#~ msgid "jupyter/minimal-notebook"
#~ msgstr ""

# 8596676795f142d2912833d1320aa6a0
#~ msgid ""
#~ "jupyter/minimal-notebook adds command line "
#~ "tools useful when working in Jupyter "
#~ "applications."
#~ msgstr ""

# b1167e8a2430451fbb41ea876714d541
#~ msgid "Everything in jupyter/base-notebook"
#~ msgstr ""

# c46294c22bd44a86ac08b977f060a21d
#~ msgid "Pandoc and TeX Live for notebook document conversion"
#~ msgstr ""

# ad6fec23e1bf4a42b0cafd2f15e74574
#~ msgid "git, emacs, jed, nano, tzdata, and unzip"
#~ msgstr ""

# 1c7363e9e14148f7a302b0075598590a
#~ msgid "jupyter/r-notebook"
#~ msgstr ""

# a6bc72d21b0c4102b16a38df077a48dd
#~ msgid "jupyter/r-notebook includes popular packages from the R ecosystem."
#~ msgstr ""

# bfe937844bef465081bdd0cc74064b77
# eb5808624ae249d5aa6b1b06350035dc
#~ msgid "Everything in jupyter/minimal-notebook and its ancestor images"
#~ msgstr ""

# db6a08c9a21f4e1eae1f4a7c7656a60d
#~ msgid "The R interpreter and base environment"
#~ msgstr ""

# c1cf2ef729d04aacbbf220cbe78edb07
# 486896c4482443dcb0f7408c888f29e9
#~ msgid "IRKernel to support R code in Jupyter notebooks"
#~ msgstr ""

# ce8993612e2e44aea34dedc24740025d
#~ msgid ""
#~ "tidyverse packages, including ggplot2, dplyr,"
#~ " tidyr, readr, purrr, tibble, stringr, "
#~ "lubridate, and broom from conda-forge"
#~ msgstr ""

# dcf536112dad48369dbd06c240f5b337
#~ msgid ""
#~ "plyr, devtools, shiny, rmarkdown, forecast,"
#~ " rsqlite, reshape2, nycflights13, caret, "
#~ "rcurl, and randomforest packages from "
#~ "conda-forge"
#~ msgstr ""

# 3e8e6435e2b64a9fb9be8fe252ed2f3a
#~ msgid "jupyter/scipy-notebook"
#~ msgstr ""

# 7d06f0f385c844389eabb820a73b9cf1
#~ msgid ""
#~ "jupyter/scipy-notebook includes popular "
#~ "packages from the scientific Python "
#~ "ecosystem."
#~ msgstr ""

# 9b123df88f864a9f8bd0472877a47a23
#~ msgid ""
#~ "pandas, numexpr, matplotlib, scipy, seaborn,"
#~ " scikit-learn, scikit-image, sympy, "
#~ "cython, patsy, statsmodel, cloudpickle, dill,"
#~ " numba, bokeh, sqlalchemy, hdf5, vincent,"
#~ " beautifulsoup, protobuf, and xlrd packages"
#~ msgstr ""

#~ msgid ""
#~ "ipywidgets and ipympl for interactive "
#~ "visualizations and plots in Python "
#~ "notebooks"
#~ msgstr ""

# 538f0c0d60e84ac7b96c747c780dfd9e
#~ msgid "Facets for visualizing machine learning datasets"
#~ msgstr ""

# 91f89dafe55d46219648e753b94f3054
#~ msgid "jupyter/tensorflow-notebook"
#~ msgstr ""

# 183ce48c172144bc91143bc63797512d
#~ msgid ""
#~ "jupyter/tensorflow-notebook includes popular "
#~ "Python deep learning libraries."
#~ msgstr ""

# 5406ba3cf8a644a79a678c7968ef36cc
# 7dad34e3954840d69b1c418bfdc475c5
#~ msgid "Everything in jupyter/scipy-notebook and its ancestor images"
#~ msgstr ""

# 7698f92c854b4324a3371453e3ee1878
#~ msgid "tensorflow and keras machine learning libraries"
#~ msgstr ""

# e1403de76d344f4d93bd47a91dd00428
#~ msgid "jupyter/datascience-notebook"
#~ msgstr ""

# 2bd4e59533d04b86846cea01ccf36ed4
#~ msgid ""
#~ "jupyter/datascience-notebook includes libraries "
#~ "for data analysis from the Julia, "
#~ "Python, and R communities."
#~ msgstr ""

# ba7ecdc5c2444acd86073ac84157e7cf
#~ msgid ""
#~ "Everything in the jupyter/scipy-notebook "
#~ "and jupyter/r-notebook images, and their "
#~ "ancestor images"
#~ msgstr ""

# bfa2ae2246be45fdb389767d6f74baa6
#~ msgid "The Julia compiler and base environment"
#~ msgstr ""

# 31750842f94747f4a0ebd0ca4ac8f2af
#~ msgid "IJulia to support Julia code in Jupyter notebooks"
#~ msgstr ""

# d8985019373a4360a66ce8c6e32056fa
#~ msgid "HDF5, Gadfly, and RDatasets packages"
#~ msgstr ""

# 051a6e882e974e599bc0221add5e0c50
#~ msgid "jupyter/pyspark-notebook"
#~ msgstr ""

# a1a474f29c9047d6bb99e9a41e789351
#~ msgid ""
#~ "jupyter/pyspark-notebook includes Python "
#~ "support for Apache Spark, optionally on"
#~ " Mesos."
#~ msgstr ""

# 6d585f39fb334a5c95c7f9864baea8a9
#~ msgid "Apache Spark with Hadoop binaries"
#~ msgstr ""

# 33bbd9311c5640008e775210d3f75097
#~ msgid "Mesos client libraries"
#~ msgstr ""

# dcdbe62ca177455881f879d5809648d9
#~ msgid "jupyter/all-spark-notebook"
#~ msgstr ""

# 954fbce53b9d4e3c90c88a65e7d138bd
#~ msgid ""
#~ "jupyter/all-spark-notebook includes Python,"
#~ " R, and Scala support for Apache "
#~ "Spark, optionally on Mesos."
#~ msgstr ""

# 671183aa9bcb4f4ba34933a4cc0e28c0
#~ msgid "Everything in jupyter/pyspark-notebook and its ancestor images"
#~ msgstr ""

# 0114a45f63054b1e9a56aff6c04bd670
#~ msgid ""
#~ "Apache Toree and spylon-kernel to "
#~ "support Scala code in Jupyter notebooks"
#~ msgstr ""

# aa21cb83205c4045960bcfd3f3fc1542
#~ msgid "ggplot2, sparklyr, and rcurl packages"
#~ msgstr ""

# 07d86ef0562f455abb691bffeaca467f
#~ msgid ""
#~ "The following diagram depicts the build"
#~ " dependency tree of the core images."
#~ " (i.e., the FROM statements in their"
#~ " Dockerfiles). Any given image inherits "
#~ "the complete content of all ancestor "
#~ "images pointing to it."
#~ msgstr ""

# fbf5d0a65b8748a5ba1b29a0e43ce9f4
#~ msgid "Builds"
#~ msgstr ""

# 75fc61a8cc874e9196ee00f7af15bb0b
#~ msgid ""
#~ "Pull requests to the jupyter/docker-"
#~ "stacks repository trigger builds of all"
#~ " images on Travis CI. These images"
#~ " are for testing purposes only and"
#~ " are not saved for use. When "
#~ "pull requests merge to master, all "
#~ "images rebuild on Docker Cloud and "
#~ "become available to docker pull from "
#~ "Docker Hub."
#~ msgstr ""

# d226a5a7f673440cbe70097864dda848
#~ msgid "Versioning"
#~ msgstr ""

# 34b4f765c48944bd939679eeb9810497
#~ msgid ""
#~ "The latest tag in each Docker Hub"
#~ " repository tracks the master branch "
#~ "HEAD reference on GitHub. latest is "
#~ "a moving target, by definition, and "
#~ "will have backward-incompatible changes "
#~ "regularly."
#~ msgstr ""

# 7ea772c3bc1d4463b29db3b57e48be8d
#~ msgid ""
#~ "Every image on Docker Hub also "
#~ "receives a 12-character tag which "
#~ "corresponds with the git commit SHA "
#~ "that triggered the image build. You "
#~ "can inspect the state of the "
#~ "jupyter/docker-stacks repository for that "
#~ "commit to review the definition of "
#~ "the image (e.g., images with tag "
#~ "7c45ec67c8e7 were built from "
#~ "https://github.com/jupyter/docker-stacks/tree/7c45ec67c8e7)."
#~ msgstr ""

# cf34bef9989940dda5de9dc026732a4c
#~ msgid ""
#~ "csharp-notebook is a community Jupyter"
#~ " Docker Stack image. Try C# in "
#~ "Jupyter Notebooks. The image includes "
#~ "more than 200 Jupyter Notebooks with "
#~ "example C# code and can readily be"
#~ " tried online via mybinder.org. Click "
#~ "here to launch ."
#~ msgstr ""

# e5c4a7b08c2f4b34b361a923f9fb3dbd
#~ msgid ""
#~ "education-notebook is a community "
#~ "Jupyter Docker Stack image. The image"
#~ " includes nbgrader and RISE on top"
#~ " of the datascience-notebook image. "
#~ "Click here to launch it on ."
#~ msgstr ""

# 8a550c70c3454d72b976cabc1cbdf465
#~ msgid "crosscompass/ihaskell-notebook"
#~ msgstr ""

# 997dafa5bad846f49a7eee78001ed3fc
#~ msgid ""
#~ "crosscompass/ihaskell-notebook is based on "
#~ "IHaskell. Includes popular packages and "
#~ "example notebooks."
#~ msgstr ""

# 9af612ef9b1847e9a537228c2d3bc77d
#~ msgid "Try it on binder:"
#~ msgstr ""

# d514a88096544a2ca92ceaf14b1323eb
#~ msgid ""
#~ "java-notebook is a community Jupyter "
#~ "Docker Stack image. The image includes"
#~ " IJava kernel on top of the "
#~ "minimal-notebook image. Click here to "
#~ "launch it on ."
#~ msgstr ""

# e5b3d27fa68b47d4a2c02c7a039d7daf
#~ msgid ""
#~ "sage-notebook is a community Jupyter "
#~ "Docker Stack image with the sagemath "
#~ "kernel on top of the minimal-"
#~ "notebook image. Click here to launch "
#~ "it on ."
#~ msgstr ""

#~ msgid ""
#~ "GPU-Jupyter: Leverage Jupyter Notebooks "
#~ "with the power of your NVIDIA GPU"
#~ " and perform GPU calculations using "
#~ "Tensorflow and Pytorch in collaborative "
#~ "notebooks. This is done by generating"
#~ " a Dockerfile, that consists of the"
#~ " nvidia/cuda base image, the well-"
#~ "maintained docker-stacks that is "
#~ "integrated as submodule and GPU-able "
#~ "libraries like Tensorflow, Keras and "
#~ "PyTorch on top of it."
#~ msgstr ""

#~ msgid ""
#~ "cgspatial-notebook is a community "
#~ "Jupyter Docker Stack image. The image"
#~ " includes major geospatial Python & R"
#~ " libraries on top of the "
#~ "datascience-notebook image. Try it on "
#~ "binder:"
#~ msgstr ""

# f9f4ef31795249d9bf2a752dfbb27a8f
#~ msgid ""
#~ "See the contributing guide for "
#~ "information about how to create your "
#~ "own Jupyter Docker Stack."
#~ msgstr ""

# 7b67588ff359486cb64810359db6704c
#~ msgid "Image Specifics"
#~ msgstr ""

# 4e5d822c2e1a410099f1ab5831e29927
#~ msgid "Apache Spark"
#~ msgstr ""

# 433d8d99798649029dafd444253567b4
#~ msgid "Specific Docker Image Options"
#~ msgstr ""

# 70083fc71521409895897387117748bc
#~ msgid ""
#~ "-p 4040:4040 - The jupyter/pyspark-"
#~ "notebook and jupyter/all-spark-notebook "
#~ "images open SparkUI (Spark Monitoring "
#~ "and Instrumentation UI) at default port"
#~ " 4040, this option map 4040 port "
#~ "inside docker container to 4040 port "
#~ "on host machine . Note every new"
#~ " spark context that is created is "
#~ "put onto an incrementing port (ie. "
#~ "4040, 4041, 4042, etc.), and it "
#~ "might be necessary to open multiple "
#~ "ports. For example: docker run -d "
#~ "-p 8888:8888 -p 4040:4040 -p 4041:4041"
#~ " jupyter/pyspark-notebook"
#~ msgstr ""

# 2449b18de82e4d129cbd49e52ce9e522
#~ msgid "Usage Examples"
#~ msgstr ""

# ec077f84f7394baba4071d0d8a9c9dbf
#~ msgid ""
#~ "The jupyter/pyspark-notebook and jupyter"
#~ "/all-spark-notebook images support the "
#~ "use of Apache Spark in Python, R,"
#~ " and Scala notebooks. The following "
#~ "sections provide some examples of how"
#~ " to get started using them."
#~ msgstr ""

# ca35b3b020914e2eb2e877199a90d4a4
#~ msgid "Using Spark Local Mode"
#~ msgstr ""

# 2c5367b84e444a1aa504910b22ba1454
# 09d8b02687704d368a670cb243e299fb
#~ msgid "In a Python Notebook"
#~ msgstr ""

# 2b5c49ea60184570a8b50622140c22e1
# 192add33e94844f080ae03254899e2ee
#~ msgid "In a R Notebook"
#~ msgstr ""

# 80cedeb3b4514de792dba8e03b1c8774
# 5f3159414ddc427699709ddef740d6fd
#~ msgid "In a Spylon Kernel Scala Notebook"
#~ msgstr ""

# 07c9256c669b488aaa2df48676d5a188
#~ msgid ""
#~ "Spylon kernel instantiates a SparkContext "
#~ "for you in variable sc after you"
#~ " configure Spark options in a "
#~ "%%init_spark magic cell."
#~ msgstr ""

# aeec453983524d3ab59f7241cf8bac7b
# 472a48e72aaf46ca86a89e1598595045
#~ msgid "In an Apache Toree Scala Notebook"
#~ msgstr ""

# 762d164260cd4938b5f9556b29b0e171
#~ msgid ""
#~ "Apache Toree instantiates a local "
#~ "SparkContext for you in variable sc "
#~ "when the kernel starts."
#~ msgstr ""

# 8da1ef6876324b61885c5dec2c6a9cbf
#~ msgid "Connecting to a Spark Cluster on Mesos"
#~ msgstr ""

# e8c29961728146a28c6581966a2d2341
#~ msgid "Deploy Spark on Mesos."
#~ msgstr ""

# 1838d7f4481246538ca4ffe89e02ff4d
#~ msgid ""
#~ "Configure each slave with the --no-"
#~ "switch_user flag or create the $NB_USER"
#~ " account on every slave node."
#~ msgstr ""

# d4ee49cc6cb547389ed3228e74a4a67c
# 4b8c4c1e7ea441f1af4b4e0fbed73888
#~ msgid ""
#~ "Run the Docker container with --net=host"
#~ " in a location that is network "
#~ "addressable by all of your Spark "
#~ "workers. (This is a Spark networking "
#~ "requirement.)"
#~ msgstr ""

# 9a026387155e46fa8e4e1ea3f00d3a63
# 68e479d8f50e4685a0fb5de56a978347
#~ msgid ""
#~ "NOTE: When using --net=host, you must"
#~ " also use the flags --pid=host -e "
#~ "TINI_SUBREAPER=true. See https://github.com/jupyter"
#~ "/docker-stacks/issues/64 for details."
#~ msgstr ""

# 929575857ae647aebbcb721af39bdd7e
#~ msgid ""
#~ "The Apache Toree kernel automatically "
#~ "creates a SparkContext when it starts"
#~ " based on configuration information from"
#~ " its command line arguments and "
#~ "environment variables. You can pass "
#~ "information about your Mesos cluster via"
#~ " the SPARK_OPTS environment variable when"
#~ " you spawn a container."
#~ msgstr ""

# da5d5d861e914df98df9dba50fb3d66a
#~ msgid "Connecting to a Spark Cluster in Standalone Mode"
#~ msgstr ""

# d5a341bb44524a8cb33f086803daaf63
#~ msgid "Deploy Spark in Standalone Mode."
#~ msgstr ""

# 85baa5bd4ed5426b96dad49dacfab9cb
#~ msgid "Tensorflow"
#~ msgstr ""

# 4249b4b266fc4aeeb85dc8386ab60592
#~ msgid ""
#~ "The jupyter/tensorflow-notebook image supports"
#~ " the use of Tensorflow in single "
#~ "machine or distributed mode."
#~ msgstr ""

# 68fba23f7cd94702a9dead3c51719206
#~ msgid "Single Machine Mode"
#~ msgstr ""

# d4b74babe01d4a3a86c46844a737151b
#~ msgid "Distributed Mode"
#~ msgstr ""

#~ msgid ""
#~ "[git](https://git-scm.com/), "
#~ "[emacs](https://www.gnu.org/software/emacs/), "
#~ "[jed](https://www.jedsoft.org/jed/), [nano](https://www.nano-"
#~ "editor.org/), tzdata, and"
#~ msgstr ""

#~ msgid ""
#~ "Minimally-functional Jupyter Notebook server"
#~ " (e.g., no [pandoc](https://pandoc.org/) for "
#~ "saving notebooks as PDFs)"
#~ msgstr ""

#~ msgid ""
#~ "[Pandoc](http://pandoc.org) and [TeX "
#~ "Live](https://www.tug.org/texlive/) for notebook "
#~ "document conversion"
#~ msgstr ""

#~ msgid ""
#~ "[git](https://git-scm.com/), "
#~ "[emacs](https://www.gnu.org/software/emacs/), "
#~ "[vi](https://vim.org/) (actually `vim-tiny`), "
#~ "[jed](https://www.jedsoft.org/jed/), [nano](https://www.nano-"
#~ "editor.org/), tzdata, and"
#~ msgstr ""

#~ msgid "unzip"
#~ msgstr ""

#~ msgid ""
#~ "[pandas](https://pandas.pydata.org/), "
#~ "[numexpr](https://github.com/pydata/numexpr), "
#~ "[matplotlib](https://matplotlib.org/), "
#~ "[scipy](https://www.scipy.org/),"
#~ msgstr ""

#~ msgid ""
#~ "[seaborn](https://seaborn.pydata.org/), [scikit-"
#~ "learn](http://scikit-learn.org/stable/), [scikit-"
#~ "image](http://scikit-image.org/), "
#~ "[sympy](http://www.sympy.org/en/index.html), "
#~ "[cython](http://cython.org/), "
#~ "[patsy](https://patsy.readthedocs.io/en/latest/), "
#~ "[statsmodel](http://www.statsmodels.org/stable/index.html), "
#~ "[cloudpickle](https://github.com/cloudpipe/cloudpickle), "
#~ "[dill](https://pypi.python.org/pypi/dill), "
#~ "[numba](https://numba.pydata.org/), "
#~ "[bokeh](https://bokeh.pydata.org/en/latest/), "
#~ "[sqlalchemy](https://www.sqlalchemy.org/), "
#~ "[hdf5](http://www.h5py.org/), "
#~ "[vincent](http://vincent.readthedocs.io/en/latest/), "
#~ "[beautifulsoup](https://www.crummy.com/software/BeautifulSoup/), "
#~ "[protobuf](https://developers.google.com/protocol-"
#~ "buffers/docs/pythontutorial), and [xlrd](http://www"
#~ ".python-excel.org/) packages * "
#~ "[ipywidgets](https://ipywidgets.readthedocs.io/en/stable/) and"
#~ " [ipympl](https://github.com/matplotlib/jupyter-matplotlib)"
#~ " for interactive visualizations and plots"
#~ " in Python notebooks * "
#~ "[Facets](https://github.com/PAIR-code/facets) for "
#~ "visualizing machine learning datasets"
#~ msgstr ""

#~ msgid "Try it on binder: [![launch Learn You a Haskell for Great"
#~ msgstr ""

#~ msgid ""
#~ "Good!](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/jamesdbrock"
#~ "/learn-you-a-haskell-"
#~ "notebook/master?urlpath=lab/tree/learn_you_a_haskell/00-preface.ipynb)"
#~ msgstr ""

#~ msgid ""
#~ "`-e NB_USER=jovyan` - Instructs the "
#~ "startup script to change the default "
#~ "container username from `jovyan` to the"
#~ " provided value. Causes the script to"
#~ " rename the `jovyan` user home "
#~ "folder. For this option to take "
#~ "effect, you must run the container "
#~ "with `--user root` and set the "
#~ "working directory `-w /home/$NB_USER`. This"
#~ " feature is useful when mounting host"
#~ " volumes with specific home folder."
#~ msgstr ""

